<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>ci</h2>

<div class="notebook">
<ul>
<li id="current"><a href="../h_aa/57862180.htm" class="variable" target="_self">Info</a></li>
<li><a href="../h_ri/57862180.htm" class="variable" target="_self">Usage</a></li>
<li><a href="../h_src/57862180.htm" class="variable" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_aa/57862180.htm" class="variable" target="_self">General Info</a></li>
<li><a href="../h_am/57862180.htm" class="variable" target="_self">Metrics</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>General Info</h4>
<table cellpadding=0 cellspacing=0 border=0>
<tr><td>category:</td><td>variable</td></tr>
<tr><td>type:</td><td>CallInfo*</td></tr>
<tr><td>scope:</td><td>parameter</td></tr>
<tr><th width=180></th></tr>
</table>
<pre>
</pre>
<h4>Location</h4>
<table cellpadding=0 cellspacing=0 border=0>
<tr><td>file:</td><td>g:/lua-5.4.6/src/<a href="../h_aa/57884484.htm" class=file>ldo.c</a></td></tr>
<tr><td>line:</td><td>675</td></tr>
<tr><td>owner:</td><td></td></tr>
<tr><td>mod date:</td><td>03 May 2023 (02:32)</td></tr>
<tr><th width=180></th></tr>
</table>
<pre>
</pre>
<h4>Comments</h4>
<pre>
/*
** Finish the job of 'lua_pcallk' after it was interrupted by an yield.
** (The caller, 'finishCcall', does the final call to 'adjustresults'.)
** The main job is to complete the 'luaD_pcall' called by 'lua_pcallk'.
** If a '__close' method yields here, eventually control will be back
** to 'finishCcall' (when that '__close' method finally returns) and
** 'finishpcallk' will run again and close any still pending '__close'
** methods. Similarly, if a '__close' method errs, 'precover' calls
** 'unroll' which calls ''finishCcall' and we are back here again, to
** close any pending '__close' methods.
** Note that, up to the call to 'luaF_close', the corresponding
** 'CallInfo' is not modified, so that this repeated run works like the
** first one (except that it has at least one less '__close' to do). In
** particular, field CIST_RECST preserves the error status across these
** multiple runs, changing only if there is a new error.
*/

<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</pre>
</body>
</html>

