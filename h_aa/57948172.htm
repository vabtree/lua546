<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>stepgenfull</h2>

<div class="notebook">
<ul>
<li id="current"><a href="../h_aa/57948172.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/57948172.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/57948172.htm" class="function" target="_self">Flow Chart</a></li>
<li><a href="../h_src/57948172.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_aa/57948172.htm" class="function" target="_self">General Info</a></li>
<li><a href="../h_am/57948172.htm" class="function" target="_self">Metrics</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>General Info</h4>
<table cellpadding=0 cellspacing=0 border=0>
<tr><td>category:</td><td>function</td></tr>
<tr><td>kind:</td><td>regular</td></tr>
<tr><td>scope:</td><td>static</td></tr>
<tr><th width=180></th></tr>
</table>
<pre>
</pre>
<h4>Parameters</h4>
<table cellpadding=0 cellspacing=0 border=0>
<tr><td>void</td><td>(return type)</td></tr>
<tr><td>lua_State*</td><td><a href="../h_aa/57948036.htm" class=variable>L</a></td></tr>
<tr><td>global_State*</td><td><a href="../h_aa/57947900.htm" class=variable>g</a></td></tr>
<tr><th width=180></th></tr>
</table>
<pre>
</pre>
<h4>Location</h4>
<table cellpadding=0 cellspacing=0 border=0>
<tr><td>file:</td><td>g:/lua-5.4.6/src/<a href="../h_aa/57829404.htm" class=file>lgc.c</a></td></tr>
<tr><td>line:</td><td>1400</td></tr>
<tr><td>owner:</td><td></td></tr>
<tr><td>mod date:</td><td>03 May 2023 (02:32)</td></tr>
<tr><th width=180></th></tr>
</table>
<pre>
</pre>
<h4>Comments</h4>
<pre>
/*
** Does a major collection after last collection was a "bad collection".
**
** When the program is building a big structure, it allocates lots of
** memory but generates very little garbage. In those scenarios,
** the generational mode just wastes time doing small collections, and
** major collections are frequently what we call a "bad collection", a
** collection that frees too few objects. To avoid the cost of switching
** between generational mode and the incremental mode needed for full
** (major) collections, the collector tries to stay in incremental mode
** after a bad collection, and to switch back to generational mode only
** after a "good" collection (one that traverses less than 9/8 objects
** of the previous one).
** The collector must choose whether to stay in incremental mode or to
** switch back to generational mode before sweeping. At this point, it
** does not know the real memory in use, so it cannot use memory to
** decide whether to return to generational mode. Instead, it uses the
** number of objects traversed (returned by 'atomic') as a proxy. The
** field 'g->lastatomic' keeps this count from the last collection.
** ('g->lastatomic != 0' also means that the last collection was bad.)
*/

<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</pre>
</body>
</html>

