<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>luaG_traceexec</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/57635076.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/57635076.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/57635076.htm" class="function" target="_self">Flow Chart</a></li>
<li id="current"><a href="../h_src/57635076.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/57635076.htm" class="function" target="_self">Definition</a></li>
<li><a href="../h_sc/57635076.htm" class="function" target="_self">Source Checks</a></li>
<li><a href="../h_src/57759256.htm#880" class="function" target="_self">Source File</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Source Code</h4>
<pre class=src>
int <a href="../h_src/57635076.htm" class="function">luaG_traceexec</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57885708.htm" class="localvar">L</a>, const <a href="../h_src/57545108.htm" class="type">Instruction</a> *<a href="../h_src/57885572.htm" class="localvar">pc</a>) {
  <a href="../h_src/57537764.htm" class="type">CallInfo</a> *<a href="../h_src/57885436.htm" class="localvar">ci</a> = <a href="../h_src/57885708.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>;
  <a href="../h_src/57550480.htm" class="type">lu_byte</a> <a href="../h_src/57885300.htm" class="localvar">mask</a> = <a href="../h_src/57885708.htm" class="localvar">L</a>-&gt;<a href="../h_src/57641264.htm" class="variable">hookmask</a>;
  const <a href="../h_src/57513828.htm" class="type">Proto</a> *<a href="../h_src/57885164.htm" class="localvar">p</a> = <a href="../h_src/57636640.htm" class="macro">ci_func</a>(<a href="../h_src/57885436.htm" class="localvar">ci</a>)-&gt;<a href="../h_src/57508184.htm" class="variable">p</a>;
  int <a href="../h_src/57885028.htm" class="localvar">counthook</a>;
  if (!(<a href="../h_src/57885300.htm" class="localvar">mask</a> &amp; (<a href="../h_src/57424940.htm" class="macro">LUA_MASKLINE</a> | <a href="../h_src/57424804.htm" class="macro">LUA_MASKCOUNT</a>))) {  <a  class="comments">/* no hooks? */</a>
    <a href="../h_src/57885436.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650852.htm" class="variable">l</a>.<a href="../h_src/57651056.htm" class="variable">trap</a> = 0;  <a  class="comments">/* don't need to stop again */</a>
    return 0;  <a  class="comments">/* turn off 'trap' */</a>
  }
  <a href="../h_src/57885572.htm" class="localvar">pc</a>++;  <a  class="comments">/* reference is always next instruction */</a>
  <a href="../h_src/57885436.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650852.htm" class="variable">l</a>.<a href="../h_src/57651124.htm" class="variable">savedpc</a> = <a href="../h_src/57885572.htm" class="localvar">pc</a>;  <a  class="comments">/* save 'pc' */</a>
  <a href="../h_src/57885028.htm" class="localvar">counthook</a> = (--<a href="../h_src/57885708.htm" class="localvar">L</a>-&gt;<a href="../h_src/57641332.htm" class="variable">hookcount</a> == 0 &amp;&amp; (<a href="../h_src/57885300.htm" class="localvar">mask</a> &amp; <a href="../h_src/57424804.htm" class="macro">LUA_MASKCOUNT</a>));
  if (<a href="../h_src/57885028.htm" class="localvar">counthook</a>)
    <a href="../h_src/57636504.htm" class="macro">resethookcount</a>(<a href="../h_src/57885708.htm" class="localvar">L</a>);  <a  class="comments">/* reset count */</a>
  else if (!(<a href="../h_src/57885300.htm" class="localvar">mask</a> &amp; <a href="../h_src/57424940.htm" class="macro">LUA_MASKLINE</a>))
    return 1;  <a  class="comments">/* no line hook and count != 0; nothing to be done now */</a>
  if (<a href="../h_src/57885436.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57649424.htm" class="variable">callstatus</a> &amp; <a href="../h_src/57648540.htm" class="macro">CIST_HOOKYIELD</a>) {  <a  class="comments">/* called hook last time? */</a>
    <a href="../h_src/57885436.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57649424.htm" class="variable">callstatus</a> &amp;= ~<a href="../h_src/57648540.htm" class="macro">CIST_HOOKYIELD</a>;  <a  class="comments">/* erase mark */</a>
    return 1;  <a  class="comments">/* do not call hook again (VM yielded, so it did not move) */</a>
  }
  if (!<a href="../h_src/57683464.htm" class="macro">isIT</a>(*(<a href="../h_src/57885436.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650852.htm" class="variable">l</a>.<a href="../h_src/57651124.htm" class="variable">savedpc</a> - 1)))  <a  class="comments">/* top not being used? */</a>
    <a href="../h_src/57885708.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> = <a href="../h_src/57885436.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57651464.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>;  <a  class="comments">/* correct top */</a>
  if (<a href="../h_src/57885028.htm" class="localvar">counthook</a>)
    <a href="../h_src/57633512.htm" class="function">luaD_hook</a>(<a href="../h_src/57885708.htm" class="localvar">L</a>, <a href="../h_src/57425484.htm" class="macro">LUA_HOOKCOUNT</a>, -1, 0, 0);  <a  class="comments">/* call count hook */</a>
  if (<a href="../h_src/57885300.htm" class="localvar">mask</a> &amp; <a href="../h_src/57424940.htm" class="macro">LUA_MASKLINE</a>) {
    <a  class="comments">/* 'L-&gt;oldpc' may be invalid; use zero in this case */</a>
    int <a href="../h_src/57884892.htm" class="localvar">oldpc</a> = (<a href="../h_src/57885708.htm" class="localvar">L</a>-&gt;<a href="../h_src/57641468.htm" class="variable">oldpc</a> &lt; <a href="../h_src/57885164.htm" class="localvar">p</a>-&gt;<a href="../h_src/57515596.htm" class="variable">sizecode</a>) ? <a href="../h_src/57885708.htm" class="localvar">L</a>-&gt;<a href="../h_src/57641468.htm" class="variable">oldpc</a> : 0;
    int <a href="../h_src/57884756.htm" class="localvar">npci</a> = <a href="../h_src/57636776.htm" class="macro">pcRel</a>(<a href="../h_src/57885572.htm" class="localvar">pc</a>, <a href="../h_src/57885164.htm" class="localvar">p</a>);
    if (<a href="../h_src/57884756.htm" class="localvar">npci</a> &lt;= <a href="../h_src/57884892.htm" class="localvar">oldpc</a> ||  <a  class="comments">/* call hook when jump back (loop), */</a>
        <a href="../h_src/57886660.htm" class="function">changedline</a>(<a href="../h_src/57885164.htm" class="localvar">p</a>, <a href="../h_src/57884892.htm" class="localvar">oldpc</a>, <a href="../h_src/57884756.htm" class="localvar">npci</a>)) {  <a  class="comments">/* or when enter new line */</a>
      int <a href="../h_src/57884620.htm" class="localvar">newline</a> = <a href="../h_src/57635960.htm" class="function">luaG_getfuncline</a>(<a href="../h_src/57885164.htm" class="localvar">p</a>, <a href="../h_src/57884756.htm" class="localvar">npci</a>);
      <a href="../h_src/57633512.htm" class="function">luaD_hook</a>(<a href="../h_src/57885708.htm" class="localvar">L</a>, <a href="../h_src/57425620.htm" class="macro">LUA_HOOKLINE</a>, <a href="../h_src/57884620.htm" class="localvar">newline</a>, 0, 0);  <a  class="comments">/* call line hook */</a>
    }
    <a href="../h_src/57885708.htm" class="localvar">L</a>-&gt;<a href="../h_src/57641468.htm" class="variable">oldpc</a> = <a href="../h_src/57884756.htm" class="localvar">npci</a>;  <a  class="comments">/* 'pc' of last call to line hook */</a>
  }
  if (<a href="../h_src/57885708.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642828.htm" class="variable">status</a> == <a href="../h_src/57445068.htm" class="macro">LUA_YIELD</a>) {  <a  class="comments">/* did hook yield? */</a>
    if (<a href="../h_src/57885028.htm" class="localvar">counthook</a>)
      <a href="../h_src/57885708.htm" class="localvar">L</a>-&gt;<a href="../h_src/57641332.htm" class="variable">hookcount</a> = 1;  <a  class="comments">/* undo decrement to zero */</a>
    <a href="../h_src/57885436.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650852.htm" class="variable">l</a>.<a href="../h_src/57651124.htm" class="variable">savedpc</a>--;  <a  class="comments">/* undo increment (resume will increment it again) */</a>
    <a href="../h_src/57885436.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57649424.htm" class="variable">callstatus</a> |= <a href="../h_src/57648540.htm" class="macro">CIST_HOOKYIELD</a>;  <a  class="comments">/* mark that it yielded */</a>
    <a href="../h_src/57632560.htm" class="function">luaD_throw</a>(<a href="../h_src/57885708.htm" class="localvar">L</a>, <a href="../h_src/57445068.htm" class="macro">LUA_YIELD</a>);
  }
  return 1;  <a  class="comments">/* keep 'trap' on */</a>
}
</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

