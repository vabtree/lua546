<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>retstat</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/57988876.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/57988876.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/57988876.htm" class="function" target="_self">Flow Chart</a></li>
<li id="current"><a href="../h_src/57988876.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/57988876.htm" class="function" target="_self">Definition</a></li>
<li><a href="../h_sc/57988876.htm" class="function" target="_self">Source Checks</a></li>
<li><a href="../h_src/58057080.htm#1813" class="function" target="_self">Source File</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Source Code</h4>
<pre class=src>
static void <a href="../h_src/57988876.htm" class="function">retstat</a> (<a href="../h_src/57700124.htm" class="type">LexState</a> *<a href="../h_src/57988740.htm" class="localvar">ls</a>) {
  <a  class="comments">/* stat -&gt; RETURN [explist] [';'] */</a>
  <a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57988604.htm" class="localvar">fs</a> = <a href="../h_src/57988740.htm" class="localvar">ls</a>-&gt;<a href="../h_src/57701008.htm" class="variable">fs</a>;
  <a href="../h_src/57679384.htm" class="type">expdesc</a> <a href="../h_src/57988468.htm" class="localvar">e</a>;
  int <a href="../h_src/57988332.htm" class="localvar">nret</a>;  <a  class="comments">/* number of values being returned */</a>
  int <a href="../h_src/57988196.htm" class="localvar">first</a> = <a href="../h_src/57674488.htm" class="function">luaY_nvarstack</a>(<a href="../h_src/57988604.htm" class="localvar">fs</a>);  <a  class="comments">/* first slot to be returned */</a>
  if (<a href="../h_src/58024032.htm" class="function">block_follow</a>(<a href="../h_src/57988740.htm" class="localvar">ls</a>, 1) || <a href="../h_src/57988740.htm" class="localvar">ls</a>-&gt;<a href="../h_src/57701416.htm" class="variable">t</a>.<a href="../h_src/57701960.htm" class="variable">token</a> == ';')
    <a href="../h_src/57988332.htm" class="localvar">nret</a> = 0;  <a  class="comments">/* return no values */</a>
  else {
    <a href="../h_src/57988332.htm" class="localvar">nret</a> = <a href="../h_src/58015804.htm" class="function">explist</a>(<a href="../h_src/57988740.htm" class="localvar">ls</a>, &amp;<a href="../h_src/57988468.htm" class="localvar">e</a>);  <a  class="comments">/* optional return values */</a>
    if (<a href="../h_src/58056604.htm" class="macro">hasmultret</a>(<a href="../h_src/57988468.htm" class="localvar">e</a>.<a href="../h_src/57680744.htm" class="variable">k</a>)) {
      <a href="../h_src/57671564.htm" class="macro">luaK_setmultret</a>(<a href="../h_src/57988604.htm" class="localvar">fs</a>, &amp;<a href="../h_src/57988468.htm" class="localvar">e</a>);
      if (<a href="../h_src/57988468.htm" class="localvar">e</a>.<a href="../h_src/57680744.htm" class="variable">k</a> == <a href="../h_src/57681492.htm" class="variable">VCALL</a> &amp;&amp; <a href="../h_src/57988332.htm" class="localvar">nret</a> == 1 &amp;&amp; !<a href="../h_src/57988604.htm" class="localvar">fs</a>-&gt;<a href="../h_src/57675576.htm" class="variable">bl</a>-&gt;<a href="../h_src/58055924.htm" class="variable">insidetbc</a>) {  <a  class="comments">/* tail call? */</a>
        <a href="../h_src/57694616.htm" class="macro">SET_OPCODE</a>(<a href="../h_src/57671700.htm" class="macro">getinstruction</a>(<a href="../h_src/57988604.htm" class="localvar">fs</a>,&amp;<a href="../h_src/57988468.htm" class="localvar">e</a>), <a href="../h_src/57685844.htm" class="variable">OP_TAILCALL</a>);
        <a href="../h_src/57548848.htm" class="macro">lua_assert</a>(<a href="../h_src/57694072.htm" class="macro">GETARG_A</a>(<a href="../h_src/57671700.htm" class="macro">getinstruction</a>(fs,&amp;e)) == luaY_nvarstack(fs));
      }
      <a href="../h_src/57988332.htm" class="localvar">nret</a> = <a href="../h_src/57445612.htm" class="macro">LUA_MULTRET</a>;  <a  class="comments">/* return all values */</a>
    }
    else {
      if (<a href="../h_src/57988332.htm" class="localvar">nret</a> == 1)  <a  class="comments">/* only one single value? */</a>
        <a href="../h_src/57988196.htm" class="localvar">first</a> = <a href="../h_src/57670408.htm" class="function">luaK_exp2anyreg</a>(<a href="../h_src/57988604.htm" class="localvar">fs</a>, &amp;<a href="../h_src/57988468.htm" class="localvar">e</a>);  <a  class="comments">/* can use original slot */</a>
      else {  <a  class="comments">/* values must go to the top of the stack */</a>
        <a href="../h_src/57670272.htm" class="function">luaK_exp2nextreg</a>(<a href="../h_src/57988604.htm" class="localvar">fs</a>, &amp;<a href="../h_src/57988468.htm" class="localvar">e</a>);
        <a href="../h_src/57548848.htm" class="macro">lua_assert</a>(nret == fs-&gt;freereg - first);
      }
    }
  }
  <a href="../h_src/57669524.htm" class="function">luaK_ret</a>(<a href="../h_src/57988604.htm" class="localvar">fs</a>, <a href="../h_src/57988196.htm" class="localvar">first</a>, <a href="../h_src/57988332.htm" class="localvar">nret</a>);
  <a href="../h_src/58053340.htm" class="function">testnext</a>(<a href="../h_src/57988740.htm" class="localvar">ls</a>, ';');  <a  class="comments">/* skip optional semicolon */</a>
}
</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

