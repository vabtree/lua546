<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>lcorolib.c</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/58293928.htm" class="file" target="_self">Info</a></li>
<li><a href="../h_im/58293928.htm" class="file" target="_self">Global Interface</a></li>
<li><a href="../h_rx/58293928.htm" class="file" target="_self">File Inclusion</a></li>
<li><a href="../h_nm/58293928.htm" class="file" target="_self">Internals</a></li>
<li><a href="../h_uf/58293928.htm" class="file" target="_self">Use of Elements</a></li>
<li><a href="../h_df/58293928.htm" class="file" target="_self">Dependencies</a></li>
<li id="current"><a href="../h_src/58293928.htm" class="file" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/58293928.htm" class="file" target="_self">Source Code</a></li>
<li><a href="../h_sc/58293928.htm" class="file" target="_self">Source Checks</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<pre class=src>
<a id=1></a><a  class="comments">/*</a>
<a id=2></a><a  class="comments">** $Id: lcorolib.c $</a>
<a id=3></a><a  class="comments">** Coroutine Library</a>
<a id=4></a><a  class="comments">** See Copyright Notice in lua.h</a>
<a id=5></a><a  class="comments">*/</a>

<a id=7></a>#define <a href="../h_src/58293860.htm" class="macro">lcorolib_c</a>
<a id=8></a>#define <a href="../h_src/58293724.htm" class="macro">LUA_LIB</a>

<a id=10></a>#include &quot;<a href="../h_src/57461592.htm" class="file">lprefix.h</a>&quot;


#include &lt;stdlib.h&gt;

<a id=15></a>#include &quot;<a href="../h_src/57460028.htm" class="file">lua.h</a>&quot;

<a id=17></a>#include &quot;<a href="../h_src/57422356.htm" class="file">lauxlib.h</a>&quot;
<a id=18></a>#include &quot;<a href="../h_src/57410932.htm" class="file">lualib.h</a>&quot;


<a id=21></a>static <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58293588.htm" class="function">getco</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58293452.htm" class="localvar">L</a>) {
<a id=22></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58293316.htm" class="localvar">co</a> = <a href="../h_src/57437928.htm" class="function">lua_tothread</a>(<a href="../h_src/58293452.htm" class="localvar">L</a>, 1);
<a id=23></a>  <a href="../h_src/57417120.htm" class="macro">luaL_argexpected</a>(<a href="../h_src/58293452.htm" class="localvar">L</a>, <a href="../h_src/58293316.htm" class="localvar">co</a>, 1, &quot;thread&quot;);
<a id=24></a>  return <a href="../h_src/58293316.htm" class="localvar">co</a>;
}


<a id=28></a><a  class="comments">/*</a>
<a id=29></a><a  class="comments">** Resumes a coroutine. Returns the number of results for non-error</a>
<a id=30></a><a  class="comments">** cases or -1 for errors.</a>
<a id=31></a><a  class="comments">*/</a>
<a id=32></a>static int <a href="../h_src/58293180.htm" class="function">auxresume</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58293044.htm" class="localvar">L</a>, <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58292908.htm" class="localvar">co</a>, int <a href="../h_src/58292772.htm" class="localvar">narg</a>) {
<a id=33></a>  int <a href="../h_src/58292636.htm" class="localvar">status</a>, <a href="../h_src/58292500.htm" class="localvar">nres</a>;
<a id=34></a>  if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(!<a href="../h_src/57439016.htm" class="function">lua_checkstack</a>(<a href="../h_src/58292908.htm" class="localvar">co</a>, <a href="../h_src/58292772.htm" class="localvar">narg</a>))) {
<a id=35></a>    <a href="../h_src/57427660.htm" class="macro">lua_pushliteral</a>(<a href="../h_src/58293044.htm" class="localvar">L</a>, &quot;too many arguments to resume&quot;);
<a id=36></a>    return -1;  <a  class="comments">/* error flag */</a>
  }
<a id=38></a>  <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/58293044.htm" class="localvar">L</a>, <a href="../h_src/58292908.htm" class="localvar">co</a>, <a href="../h_src/58292772.htm" class="localvar">narg</a>);
<a id=39></a>  <a href="../h_src/58292636.htm" class="localvar">status</a> = <a href="../h_src/57432420.htm" class="function">lua_resume</a>(<a href="../h_src/58292908.htm" class="localvar">co</a>, <a href="../h_src/58293044.htm" class="localvar">L</a>, <a href="../h_src/58292772.htm" class="localvar">narg</a>, &amp;<a href="../h_src/58292500.htm" class="localvar">nres</a>);
<a id=40></a>  if (<a href="../h_src/57551704.htm" class="macro">l_likely</a>(<a href="../h_src/58292636.htm" class="localvar">status</a> == <a href="../h_src/57445204.htm" class="macro">LUA_OK</a> || status == <a href="../h_src/57445068.htm" class="macro">LUA_YIELD</a>)) {
<a id=41></a>    if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(!<a href="../h_src/57439016.htm" class="function">lua_checkstack</a>(<a href="../h_src/58293044.htm" class="localvar">L</a>, <a href="../h_src/58292500.htm" class="localvar">nres</a> + 1))) {
<a id=42></a>      <a href="../h_src/57429292.htm" class="macro">lua_pop</a>(<a href="../h_src/58292908.htm" class="localvar">co</a>, <a href="../h_src/58292500.htm" class="localvar">nres</a>);  <a  class="comments">/* remove results anyway */</a>
<a id=43></a>      <a href="../h_src/57427660.htm" class="macro">lua_pushliteral</a>(<a href="../h_src/58293044.htm" class="localvar">L</a>, &quot;too many results to resume&quot;);
<a id=44></a>      return -1;  <a  class="comments">/* error flag */</a>
    }
<a id=46></a>    <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/58292908.htm" class="localvar">co</a>, <a href="../h_src/58293044.htm" class="localvar">L</a>, <a href="../h_src/58292500.htm" class="localvar">nres</a>);  <a  class="comments">/* move yielded values */</a>
<a id=47></a>    return <a href="../h_src/58292500.htm" class="localvar">nres</a>;
  }
  else {
<a id=50></a>    <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/58292908.htm" class="localvar">co</a>, <a href="../h_src/58293044.htm" class="localvar">L</a>, 1);  <a  class="comments">/* move error message */</a>
<a id=51></a>    return -1;  <a  class="comments">/* error flag */</a>
  }
}


<a id=56></a>static int <a href="../h_src/58292364.htm" class="function">luaB_coresume</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58292228.htm" class="localvar">L</a>) {
<a id=57></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58292092.htm" class="localvar">co</a> = <a href="../h_src/58293588.htm" class="function">getco</a>(<a href="../h_src/58292228.htm" class="localvar">L</a>);
<a id=58></a>  int <a href="../h_src/58291956.htm" class="localvar">r</a>;
<a id=59></a>  <a href="../h_src/58291956.htm" class="localvar">r</a> = <a href="../h_src/58293180.htm" class="function">auxresume</a>(<a href="../h_src/58292228.htm" class="localvar">L</a>, <a href="../h_src/58292092.htm" class="localvar">co</a>, <a href="../h_src/57439356.htm" class="function">lua_gettop</a>(<a href="../h_src/58292228.htm" class="localvar">L</a>) - 1);
<a id=60></a>  if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(<a href="../h_src/58291956.htm" class="localvar">r</a> &lt; 0)) {
<a id=61></a>    <a href="../h_src/57434596.htm" class="function">lua_pushboolean</a>(<a href="../h_src/58292228.htm" class="localvar">L</a>, 0);
<a id=62></a>    <a href="../h_src/57427252.htm" class="macro">lua_insert</a>(<a href="../h_src/58292228.htm" class="localvar">L</a>, -2);
<a id=63></a>    return 2;  <a  class="comments">/* return false + error message */</a>
  }
  else {
<a id=66></a>    <a href="../h_src/57434596.htm" class="function">lua_pushboolean</a>(<a href="../h_src/58292228.htm" class="localvar">L</a>, 1);
<a id=67></a>    <a href="../h_src/57427252.htm" class="macro">lua_insert</a>(<a href="../h_src/58292228.htm" class="localvar">L</a>, -(<a href="../h_src/58291956.htm" class="localvar">r</a> + 1));
<a id=68></a>    return <a href="../h_src/58291956.htm" class="localvar">r</a> + 1;  <a  class="comments">/* return true + 'resume' returns */</a>
  }
}


<a id=73></a>static int <a href="../h_src/58291820.htm" class="function">luaB_auxwrap</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58291684.htm" class="localvar">L</a>) {
<a id=74></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58291548.htm" class="localvar">co</a> = <a href="../h_src/57437928.htm" class="function">lua_tothread</a>(<a href="../h_src/58291684.htm" class="localvar">L</a>, <a href="../h_src/57445340.htm" class="macro">lua_upvalueindex</a>(1));
<a id=75></a>  int <a href="../h_src/58291412.htm" class="localvar">r</a> = <a href="../h_src/58293180.htm" class="function">auxresume</a>(<a href="../h_src/58291684.htm" class="localvar">L</a>, <a href="../h_src/58291548.htm" class="localvar">co</a>, <a href="../h_src/57439356.htm" class="function">lua_gettop</a>(<a href="../h_src/58291684.htm" class="localvar">L</a>));
<a id=76></a>  if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(<a href="../h_src/58291412.htm" class="localvar">r</a> &lt; 0)) {  <a  class="comments">/* error? */</a>
<a id=77></a>    int <a href="../h_src/58291276.htm" class="localvar">stat</a> = <a href="../h_src/57432352.htm" class="function">lua_status</a>(<a href="../h_src/58291548.htm" class="localvar">co</a>);
<a id=78></a>    if (<a href="../h_src/58291276.htm" class="localvar">stat</a> != <a href="../h_src/57445204.htm" class="macro">LUA_OK</a> &amp;&amp; <a href="../h_src/58291276.htm" class="localvar">stat</a> != <a href="../h_src/57445068.htm" class="macro">LUA_YIELD</a>) {  <a  class="comments">/* error in the coroutine? */</a>
<a id=79></a>      <a href="../h_src/58291276.htm" class="localvar">stat</a> = <a href="../h_src/57439696.htm" class="function">lua_closethread</a>(<a href="../h_src/58291548.htm" class="localvar">co</a>, <a href="../h_src/58291684.htm" class="localvar">L</a>);  <a  class="comments">/* close its tbc variables */</a>
<a id=80></a>      <a href="../h_src/57415352.htm" class="macro">lua_assert</a>(stat != <a href="../h_src/57445204.htm" class="macro">LUA_OK</a>);
<a id=81></a>      <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/58291548.htm" class="localvar">co</a>, <a href="../h_src/58291684.htm" class="localvar">L</a>, 1);  <a  class="comments">/* move error message to the caller */</a>
    }
<a id=83></a>    if (<a href="../h_src/58291276.htm" class="localvar">stat</a> != <a href="../h_src/57444660.htm" class="macro">LUA_ERRMEM</a> &amp;&amp;  <a  class="comments">/* not a memory error and ... */</a>
<a id=84></a>        <a href="../h_src/57438540.htm" class="function">lua_type</a>(<a href="../h_src/58291684.htm" class="localvar">L</a>, -1) == <a href="../h_src/57443504.htm" class="macro">LUA_TSTRING</a>) {  <a  class="comments">/* ... error object is a string? */</a>
<a id=85></a>      <a href="../h_src/57419364.htm" class="function">luaL_where</a>(<a href="../h_src/58291684.htm" class="localvar">L</a>, 1);  <a  class="comments">/* add extra info, if available */</a>
<a id=86></a>      <a href="../h_src/57427252.htm" class="macro">lua_insert</a>(<a href="../h_src/58291684.htm" class="localvar">L</a>, -2);
<a id=87></a>      <a href="../h_src/57430244.htm" class="function">lua_concat</a>(<a href="../h_src/58291684.htm" class="localvar">L</a>, 2);
    }
<a id=89></a>    return <a href="../h_src/57430380.htm" class="function">lua_error</a>(<a href="../h_src/58291684.htm" class="localvar">L</a>);  <a  class="comments">/* propagate error */</a>
  }
<a id=91></a>  return <a href="../h_src/58291412.htm" class="localvar">r</a>;
}


<a id=95></a>static int <a href="../h_src/58291140.htm" class="function">luaB_cocreate</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58291004.htm" class="localvar">L</a>) {
<a id=96></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58290868.htm" class="localvar">NL</a>;
<a id=97></a>  <a href="../h_src/57419772.htm" class="function">luaL_checktype</a>(<a href="../h_src/58291004.htm" class="localvar">L</a>, 1, <a href="../h_src/57443232.htm" class="macro">LUA_TFUNCTION</a>);
<a id=98></a>  <a href="../h_src/58290868.htm" class="localvar">NL</a> = <a href="../h_src/57439764.htm" class="function">lua_newthread</a>(<a href="../h_src/58291004.htm" class="localvar">L</a>);
<a id=99></a>  <a href="../h_src/57439220.htm" class="function">lua_pushvalue</a>(<a href="../h_src/58291004.htm" class="localvar">L</a>, 1);  <a  class="comments">/* move function to top */</a>
<a id=100></a>  <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/58291004.htm" class="localvar">L</a>, <a href="../h_src/58290868.htm" class="localvar">NL</a>, 1);  <a  class="comments">/* move function from L to NL */</a>
  return 1;
}


<a id=105></a>static int <a href="../h_src/58290732.htm" class="function">luaB_cowrap</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58290596.htm" class="localvar">L</a>) {
<a id=106></a>  <a href="../h_src/58291140.htm" class="function">luaB_cocreate</a>(<a href="../h_src/58290596.htm" class="localvar">L</a>);
<a id=107></a>  <a href="../h_src/57434664.htm" class="function">lua_pushcclosure</a>(<a href="../h_src/58290596.htm" class="localvar">L</a>, <a href="../h_src/58291820.htm" class="function">luaB_auxwrap</a>, 1);
  return 1;
}


<a id=112></a>static int <a href="../h_src/58290460.htm" class="function">luaB_yield</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58290324.htm" class="localvar">L</a>) {
<a id=113></a>  return <a href="../h_src/57432216.htm" class="macro">lua_yield</a>(<a href="../h_src/58290324.htm" class="localvar">L</a>, <a href="../h_src/57439356.htm" class="function">lua_gettop</a>(<a href="../h_src/58290324.htm" class="localvar">L</a>));
}


<a id=117></a>#define <a href="../h_src/58290188.htm" class="macro">COS_RUN</a>		0
<a id=118></a>#define <a href="../h_src/58290052.htm" class="macro">COS_DEAD</a>	1
<a id=119></a>#define <a href="../h_src/58289916.htm" class="macro">COS_YIELD</a>	2
<a id=120></a>#define <a href="../h_src/58289780.htm" class="macro">COS_NORM</a>	3


<a id=123></a>static const char *const <a href="../h_src/58289644.htm" class="variable">statname</a>[] =
  {&quot;running&quot;, &quot;dead&quot;, &quot;suspended&quot;, &quot;normal&quot;};


<a id=127></a>static int <a href="../h_src/58289576.htm" class="function">auxstatus</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58289440.htm" class="localvar">L</a>, <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58289304.htm" class="localvar">co</a>) {
<a id=128></a>  if (<a href="../h_src/58289440.htm" class="localvar">L</a> == <a href="../h_src/58289304.htm" class="localvar">co</a>) return <a href="../h_src/58290188.htm" class="macro">COS_RUN</a>;
  else {
<a id=130></a>    switch (<a href="../h_src/57432352.htm" class="function">lua_status</a>(<a href="../h_src/58289304.htm" class="localvar">co</a>)) {
<a id=131></a>      case <a href="../h_src/57445068.htm" class="macro">LUA_YIELD</a>:
<a id=132></a>        return <a href="../h_src/58289916.htm" class="macro">COS_YIELD</a>;
<a id=133></a>      case <a href="../h_src/57445204.htm" class="macro">LUA_OK</a>: {
<a id=134></a>        <a href="../h_src/57440308.htm" class="type">lua_Debug</a> <a href="../h_src/58289168.htm" class="localvar">ar</a>;
<a id=135></a>        if (<a href="../h_src/57424668.htm" class="function">lua_getstack</a>(<a href="../h_src/58289304.htm" class="localvar">co</a>, 0, &amp;<a href="../h_src/58289168.htm" class="localvar">ar</a>))  <a  class="comments">/* does it have frames? */</a>
<a id=136></a>          return <a href="../h_src/58289780.htm" class="macro">COS_NORM</a>;  <a  class="comments">/* it is running */</a>
<a id=137></a>        else if (<a href="../h_src/57439356.htm" class="function">lua_gettop</a>(<a href="../h_src/58289304.htm" class="localvar">co</a>) == 0)
<a id=138></a>            return <a href="../h_src/58290052.htm" class="macro">COS_DEAD</a>;
        else
<a id=140></a>          return <a href="../h_src/58289916.htm" class="macro">COS_YIELD</a>;  <a  class="comments">/* initial state */</a>
      }
<a id=142></a>      default:  <a  class="comments">/* some error occurred */</a>
<a id=143></a>        return <a href="../h_src/58290052.htm" class="macro">COS_DEAD</a>;
    }
  }
}


<a id=149></a>static int <a href="../h_src/58289032.htm" class="function">luaB_costatus</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58288896.htm" class="localvar">L</a>) {
<a id=150></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58288760.htm" class="localvar">co</a> = <a href="../h_src/58293588.htm" class="function">getco</a>(<a href="../h_src/58288896.htm" class="localvar">L</a>);
<a id=151></a>  <a href="../h_src/57435004.htm" class="function">lua_pushstring</a>(<a href="../h_src/58288896.htm" class="localvar">L</a>, <a href="../h_src/58289644.htm" class="variable">statname</a>[<a href="../h_src/58289576.htm" class="function">auxstatus</a>(<a href="../h_src/58288896.htm" class="localvar">L</a>, <a href="../h_src/58288760.htm" class="localvar">co</a>)]);
  return 1;
}


<a id=156></a>static int <a href="../h_src/58288624.htm" class="function">luaB_yieldable</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58288488.htm" class="localvar">L</a>) {
<a id=157></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58288352.htm" class="localvar">co</a> = <a href="../h_src/57427932.htm" class="macro">lua_isnone</a>(<a href="../h_src/58288488.htm" class="localvar">L</a>, 1) ? <a href="../h_src/58288488.htm" class="localvar">L</a> : <a href="../h_src/58293588.htm" class="function">getco</a>(<a href="../h_src/58288488.htm" class="localvar">L</a>);
<a id=158></a>  <a href="../h_src/57434596.htm" class="function">lua_pushboolean</a>(<a href="../h_src/58288488.htm" class="localvar">L</a>, <a href="../h_src/57432284.htm" class="function">lua_isyieldable</a>(<a href="../h_src/58288352.htm" class="localvar">co</a>));
  return 1;
}


<a id=163></a>static int <a href="../h_src/58288216.htm" class="function">luaB_corunning</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58288080.htm" class="localvar">L</a>) {
<a id=164></a>  int <a href="../h_src/58287944.htm" class="localvar">ismain</a> = <a href="../h_src/57434460.htm" class="function">lua_pushthread</a>(<a href="../h_src/58288080.htm" class="localvar">L</a>);
<a id=165></a>  <a href="../h_src/57434596.htm" class="function">lua_pushboolean</a>(<a href="../h_src/58288080.htm" class="localvar">L</a>, <a href="../h_src/58287944.htm" class="localvar">ismain</a>);
  return 2;
}


<a id=170></a>static int <a href="../h_src/58287808.htm" class="function">luaB_close</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58287672.htm" class="localvar">L</a>) {
<a id=171></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58287536.htm" class="localvar">co</a> = <a href="../h_src/58293588.htm" class="function">getco</a>(<a href="../h_src/58287672.htm" class="localvar">L</a>);
<a id=172></a>  int <a href="../h_src/58287400.htm" class="localvar">status</a> = <a href="../h_src/58289576.htm" class="function">auxstatus</a>(<a href="../h_src/58287672.htm" class="localvar">L</a>, <a href="../h_src/58287536.htm" class="localvar">co</a>);
<a id=173></a>  switch (<a href="../h_src/58287400.htm" class="localvar">status</a>) {
<a id=174></a>    case <a href="../h_src/58290052.htm" class="macro">COS_DEAD</a>: case <a href="../h_src/58289916.htm" class="macro">COS_YIELD</a>: {
<a id=175></a>      <a href="../h_src/58287400.htm" class="localvar">status</a> = <a href="../h_src/57439696.htm" class="function">lua_closethread</a>(<a href="../h_src/58287536.htm" class="localvar">co</a>, <a href="../h_src/58287672.htm" class="localvar">L</a>);
<a id=176></a>      if (<a href="../h_src/58287400.htm" class="localvar">status</a> == <a href="../h_src/57445204.htm" class="macro">LUA_OK</a>) {
<a id=177></a>        <a href="../h_src/57434596.htm" class="function">lua_pushboolean</a>(<a href="../h_src/58287672.htm" class="localvar">L</a>, 1);
        return 1;
      }
      else {
<a id=181></a>        <a href="../h_src/57434596.htm" class="function">lua_pushboolean</a>(<a href="../h_src/58287672.htm" class="localvar">L</a>, 0);
<a id=182></a>        <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/58287536.htm" class="localvar">co</a>, <a href="../h_src/58287672.htm" class="localvar">L</a>, 1);  <a  class="comments">/* move error message */</a>
        return 2;
      }
    }
<a id=186></a>    default:  <a  class="comments">/* normal or running coroutine */</a>
<a id=187></a>      return <a href="../h_src/57419296.htm" class="function">luaL_error</a>(<a href="../h_src/58287672.htm" class="localvar">L</a>, &quot;cannot close a %s coroutine&quot;, <a href="../h_src/58289644.htm" class="variable">statname</a>[<a href="../h_src/58287400.htm" class="localvar">status</a>]);
  }
}


<a id=192></a>static const <a href="../h_src/57420996.htm" class="type">luaL_Reg</a> <a href="../h_src/58287264.htm" class="variable">co_funcs</a>[] = {
<a id=193></a>  {&quot;create&quot;, <a href="../h_src/58291140.htm" class="function">luaB_cocreate</a>},
<a id=194></a>  {&quot;resume&quot;, <a href="../h_src/58292364.htm" class="function">luaB_coresume</a>},
<a id=195></a>  {&quot;running&quot;, <a href="../h_src/58288216.htm" class="function">luaB_corunning</a>},
<a id=196></a>  {&quot;status&quot;, <a href="../h_src/58289032.htm" class="function">luaB_costatus</a>},
<a id=197></a>  {&quot;wrap&quot;, <a href="../h_src/58290732.htm" class="function">luaB_cowrap</a>},
<a id=198></a>  {&quot;yield&quot;, <a href="../h_src/58290460.htm" class="function">luaB_yield</a>},
<a id=199></a>  {&quot;isyieldable&quot;, <a href="../h_src/58288624.htm" class="function">luaB_yieldable</a>},
<a id=200></a>  {&quot;close&quot;, <a href="../h_src/58287808.htm" class="function">luaB_close</a>},
  {NULL, NULL}
};



<a id=206></a><a href="../h_src/57454180.htm" class="macro">LUAMOD_API</a> int <a href="../h_src/57410252.htm" class="function">luaopen_coroutine</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58287196.htm" class="localvar">L</a>) {
<a id=207></a>  <a href="../h_src/57417392.htm" class="macro">luaL_newlib</a>(<a href="../h_src/58287196.htm" class="localvar">L</a>, <a href="../h_src/58287264.htm" class="variable">co_funcs</a>);
  return 1;
}

</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

