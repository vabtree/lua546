<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>os_date</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/143348856.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/143348856.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/143348856.htm" class="function" target="_self">Flow Chart</a></li>
<li id="current"><a href="../h_src/143348856.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/143348856.htm" class="function" target="_self">Definition</a></li>
<li><a href="../h_sc/143348856.htm" class="function" target="_self">Source Checks</a></li>
<li><a href="../h_src/143359192.htm#302" class="function" target="_self">Source File</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Source Code</h4>
<pre class=src>
static int <a href="../h_src/143348856.htm" class="function">os_date</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143348720.htm" class="localvar">L</a>) {
  <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/143348584.htm" class="localvar">slen</a>;
  const char *<a href="../h_src/143348448.htm" class="localvar">s</a> = <a href="../h_src/57420180.htm" class="function">luaL_optlstring</a>(<a href="../h_src/143348720.htm" class="localvar">L</a>, 1, &quot;%c&quot;, &amp;<a href="../h_src/143348584.htm" class="localvar">slen</a>);
  <a href="../h_src/143349536.htm" class="function">time_t</a> <a href="../h_src/143348244.htm" class="localvar">t</a> = <a href="../h_src/57416168.htm" class="macro">luaL_opt</a>(<a href="../h_src/143348720.htm" class="localvar">L</a>, <a href="../h_aa/143348312.htm" class="libfunc">l_checktime</a>, 2, <a href="../h_aa/57983504.htm" class="libfunc">time</a>(NULL));
  const char *<a href="../h_src/143348108.htm" class="localvar">se</a> = <a href="../h_src/143348448.htm" class="localvar">s</a> + <a href="../h_src/143348584.htm" class="localvar">slen</a>;  <a  class="comments">/* 's' end */</a>
  struct <a href="../h_src/143352800.htm" class="class">tm</a> <a href="../h_src/143347972.htm" class="localvar">tmr</a>, *<a href="../h_src/143347836.htm" class="localvar">stm</a>;
  if (*<a href="../h_src/143348448.htm" class="localvar">s</a> == '!') {  <a  class="comments">/* UTC? */</a>
    <a href="../h_src/143347836.htm" class="localvar">stm</a> = <a href="../h_src/143357900.htm" class="macro">l_gmtime</a>(&amp;<a href="../h_src/143348244.htm" class="localvar">t</a>, &amp;<a href="../h_src/143347972.htm" class="localvar">tmr</a>);
    <a href="../h_src/143348448.htm" class="localvar">s</a>++;  <a  class="comments">/* skip '!' */</a>
  }
  else
    <a href="../h_src/143347836.htm" class="localvar">stm</a> = <a href="../h_src/143357764.htm" class="macro">l_localtime</a>(&amp;<a href="../h_src/143348244.htm" class="localvar">t</a>, &amp;<a href="../h_src/143347972.htm" class="localvar">tmr</a>);
  if (<a href="../h_src/143347836.htm" class="localvar">stm</a> == NULL)  <a  class="comments">/* invalid date? */</a>
    return <a href="../h_src/57419296.htm" class="function">luaL_error</a>(<a href="../h_src/143348720.htm" class="localvar">L</a>,
                 &quot;date result cannot be represented in this installation&quot;);
  if (<a href="../h_aa/57564488.htm" class="libfunc">strcmp</a>(<a href="../h_src/143348448.htm" class="localvar">s</a>, &quot;*t&quot;) == 0) {
    <a href="../h_src/57433916.htm" class="function">lua_createtable</a>(<a href="../h_src/143348720.htm" class="localvar">L</a>, 0, 9);  <a  class="comments">/* 9 = number of fields */</a>
    <a href="../h_src/143352664.htm" class="function">setallfields</a>(<a href="../h_src/143348720.htm" class="localvar">L</a>, <a href="../h_src/143347836.htm" class="localvar">stm</a>);
  }
  else {
    char <a href="../h_src/143347564.htm" class="localvar">cc</a>[4];  <a  class="comments">/* buffer for individual conversion specifiers */</a>
    <a href="../h_src/57421744.htm" class="type">luaL_Buffer</a> <a href="../h_src/143347428.htm" class="localvar">b</a>;
    <a href="../h_src/143347564.htm" class="localvar">cc</a>[0] = '%';
    <a href="../h_src/57413652.htm" class="function">luaL_buffinit</a>(<a href="../h_src/143348720.htm" class="localvar">L</a>, &amp;<a href="../h_src/143347428.htm" class="localvar">b</a>);
    while (<a href="../h_src/143348448.htm" class="localvar">s</a> &lt; <a href="../h_src/143348108.htm" class="localvar">se</a>) {
      if (*<a href="../h_src/143348448.htm" class="localvar">s</a> != '%')  <a  class="comments">/* not a conversion specifier? */</a>
        <a href="../h_src/57414060.htm" class="macro">luaL_addchar</a>(&amp;<a href="../h_src/143347428.htm" class="localvar">b</a>, *<a href="../h_src/143348448.htm" class="localvar">s</a>++);
      else {
        <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/143347292.htm" class="localvar">reslen</a>;
        char *<a href="../h_src/143347156.htm" class="localvar">buff</a> = <a href="../h_src/57413584.htm" class="function">luaL_prepbuffsize</a>(&amp;<a href="../h_src/143347428.htm" class="localvar">b</a>, <a href="../h_src/143348992.htm" class="macro">SIZETIMEFMT</a>);
        <a href="../h_src/143348448.htm" class="localvar">s</a>++;  <a  class="comments">/* skip '%' */</a>
        <a href="../h_src/143348448.htm" class="localvar">s</a> = <a href="../h_src/143350488.htm" class="function">checkoption</a>(<a href="../h_src/143348720.htm" class="localvar">L</a>, <a href="../h_src/143348448.htm" class="localvar">s</a>, <a href="../h_src/143348108.htm" class="localvar">se</a> - <a href="../h_src/143348448.htm" class="localvar">s</a>, <a href="../h_src/143347564.htm" class="localvar">cc</a> + 1);  <a  class="comments">/* copy specifier to 'cc' */</a>
        <a href="../h_src/143347292.htm" class="localvar">reslen</a> = <a href="../h_aa/143347020.htm" class="libfunc">strftime</a>(<a href="../h_src/143347156.htm" class="localvar">buff</a>, <a href="../h_src/143348992.htm" class="macro">SIZETIMEFMT</a>, <a href="../h_src/143347564.htm" class="localvar">cc</a>, <a href="../h_src/143347836.htm" class="localvar">stm</a>);
        <a href="../h_src/57413924.htm" class="macro">luaL_addsize</a>(&amp;<a href="../h_src/143347428.htm" class="localvar">b</a>, <a href="../h_src/143347292.htm" class="localvar">reslen</a>);
      }
    }
    <a href="../h_src/57413312.htm" class="function">luaL_pushresult</a>(&amp;<a href="../h_src/143347428.htm" class="localvar">b</a>);
  }
  return 1;
}
</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

