<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>lzio.c</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/58353292.htm" class="file" target="_self">Info</a></li>
<li><a href="../h_im/58353292.htm" class="file" target="_self">Global Interface</a></li>
<li><a href="../h_rx/58353292.htm" class="file" target="_self">File Inclusion</a></li>
<li><a href="../h_nm/58353292.htm" class="file" target="_self">Internals</a></li>
<li><a href="../h_uf/58353292.htm" class="file" target="_self">Use of Elements</a></li>
<li><a href="../h_df/58353292.htm" class="file" target="_self">Dependencies</a></li>
<li id="current"><a href="../h_src/58353292.htm" class="file" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/58353292.htm" class="file" target="_self">Source Code</a></li>
<li><a href="../h_sc/58353292.htm" class="file" target="_self">Source Checks</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<pre class=src>
<a id=1></a><a  class="comments">/*</a>
<a id=2></a><a  class="comments">** $Id: lzio.c $</a>
<a id=3></a><a  class="comments">** Buffered streams</a>
<a id=4></a><a  class="comments">** See Copyright Notice in lua.h</a>
<a id=5></a><a  class="comments">*/</a>

<a id=7></a>#define <a href="../h_src/58353224.htm" class="macro">lzio_c</a>
<a id=8></a>#define <a href="../h_src/58353088.htm" class="macro">LUA_CORE</a>

<a id=10></a>#include &quot;<a href="../h_src/57461592.htm" class="file">lprefix.h</a>&quot;


#include &lt;string.h&gt;

<a id=15></a>#include &quot;<a href="../h_src/57460028.htm" class="file">lua.h</a>&quot;

<a id=17></a>#include &quot;<a href="../h_src/57551092.htm" class="file">llimits.h</a>&quot;
<a id=18></a>#include &quot;<a href="../h_src/57496896.htm" class="file">lmem.h</a>&quot;
<a id=19></a>#include &quot;<a href="../h_src/57538104.htm" class="file">lstate.h</a>&quot;
<a id=20></a>#include &quot;<a href="../h_src/57497236.htm" class="file">lzio.h</a>&quot;


<a id=23></a>int <a href="../h_src/57653844.htm" class="function">luaZ_fill</a> (<a href="../h_src/57656088.htm" class="type">ZIO</a> *<a href="../h_src/58352952.htm" class="localvar">z</a>) {
<a id=24></a>  <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/58352816.htm" class="localvar">size</a>;
<a id=25></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58352680.htm" class="localvar">L</a> = <a href="../h_src/58352952.htm" class="localvar">z</a>-&gt;<a href="../h_src/57653912.htm" class="variable">L</a>;
<a id=26></a>  const char *<a href="../h_src/58352544.htm" class="localvar">buff</a>;
<a id=27></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=28></a>  <a href="../h_src/58352544.htm" class="localvar">buff</a> = <a href="../h_src/58352952.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654048.htm" class="variable">reader</a>(<a href="../h_src/58352680.htm" class="localvar">L</a>, <a href="../h_src/58352952.htm" class="localvar">z</a>-&gt;<a href="../h_src/57653980.htm" class="variable">data</a>, &amp;<a href="../h_src/58352816.htm" class="localvar">size</a>);
<a id=29></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=30></a>  if (<a href="../h_src/58352544.htm" class="localvar">buff</a> == NULL || <a href="../h_src/58352816.htm" class="localvar">size</a> == 0)
<a id=31></a>    return <a href="../h_src/57656360.htm" class="macro">EOZ</a>;
<a id=32></a>  <a href="../h_src/58352952.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654184.htm" class="variable">n</a> = <a href="../h_src/58352816.htm" class="localvar">size</a> - 1;  <a  class="comments">/* discount char being returned */</a>
<a id=33></a>  <a href="../h_src/58352952.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654116.htm" class="variable">p</a> = <a href="../h_src/58352544.htm" class="localvar">buff</a>;
<a id=34></a>  return <a href="../h_src/57546808.htm" class="macro">cast_uchar</a>(*(<a href="../h_src/58352952.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654116.htm" class="variable">p</a>++));
}


<a id=38></a>void <a href="../h_src/57654388.htm" class="function">luaZ_init</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58352408.htm" class="localvar">L</a>, <a href="../h_src/57656088.htm" class="type">ZIO</a> *<a href="../h_src/58352272.htm" class="localvar">z</a>, <a href="../h_src/57441396.htm" class="type">lua_Reader</a> <a href="../h_src/58352136.htm" class="localvar">reader</a>, void *<a href="../h_src/58352000.htm" class="localvar">data</a>) {
<a id=39></a>  <a href="../h_src/58352272.htm" class="localvar">z</a>-&gt;<a href="../h_src/57653912.htm" class="variable">L</a> = <a href="../h_src/58352408.htm" class="localvar">L</a>;
<a id=40></a>  <a href="../h_src/58352272.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654048.htm" class="variable">reader</a> = <a href="../h_src/58352136.htm" class="localvar">reader</a>;
<a id=41></a>  <a href="../h_src/58352272.htm" class="localvar">z</a>-&gt;<a href="../h_src/57653980.htm" class="variable">data</a> = <a href="../h_src/58352000.htm" class="localvar">data</a>;
<a id=42></a>  <a href="../h_src/58352272.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654184.htm" class="variable">n</a> = 0;
<a id=43></a>  <a href="../h_src/58352272.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654116.htm" class="variable">p</a> = NULL;
}


<a id=47></a><a  class="comments">/* --------------------------------------------------------------- read --- */</a>
<a id=48></a><a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/57654252.htm" class="function">luaZ_read</a> (<a href="../h_src/57656088.htm" class="type">ZIO</a> *<a href="../h_src/58351864.htm" class="localvar">z</a>, void *<a href="../h_src/58351728.htm" class="localvar">b</a>, <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/58351592.htm" class="localvar">n</a>) {
<a id=49></a>  while (<a href="../h_src/58351592.htm" class="localvar">n</a>) {
<a id=50></a>    <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/58351456.htm" class="localvar">m</a>;
<a id=51></a>    if (<a href="../h_src/58351864.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654184.htm" class="variable">n</a> == 0) {  <a  class="comments">/* no bytes in buffer? */</a>
<a id=52></a>      if (<a href="../h_src/57653844.htm" class="function">luaZ_fill</a>(<a href="../h_src/58351864.htm" class="localvar">z</a>) == <a href="../h_src/57656360.htm" class="macro">EOZ</a>)  <a  class="comments">/* try to read more */</a>
<a id=53></a>        return <a href="../h_src/58351592.htm" class="localvar">n</a>;  <a  class="comments">/* no more input; return number of missing bytes */</a>
      else {
<a id=55></a>        <a href="../h_src/58351864.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654184.htm" class="variable">n</a>++;  <a  class="comments">/* luaZ_fill consumed first byte; put it back */</a>
<a id=56></a>        <a href="../h_src/58351864.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654116.htm" class="variable">p</a>--;
      }
    }
<a id=59></a>    <a href="../h_src/58351456.htm" class="localvar">m</a> = (<a href="../h_src/58351592.htm" class="localvar">n</a> &lt;= <a href="../h_src/58351864.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654184.htm" class="variable">n</a>) ? <a href="../h_src/58351592.htm" class="localvar">n</a> : <a href="../h_src/58351864.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654184.htm" class="variable">n</a>;  <a  class="comments">/* min. between n and z-&gt;n */</a>
<a id=60></a>    <a href="../h_aa/57902680.htm" class="libfunc">memcpy</a>(<a href="../h_src/58351728.htm" class="localvar">b</a>, <a href="../h_src/58351864.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654116.htm" class="variable">p</a>, <a href="../h_src/58351456.htm" class="localvar">m</a>);
<a id=61></a>    <a href="../h_src/58351864.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654184.htm" class="variable">n</a> -= <a href="../h_src/58351456.htm" class="localvar">m</a>;
<a id=62></a>    <a href="../h_src/58351864.htm" class="localvar">z</a>-&gt;<a href="../h_src/57654116.htm" class="variable">p</a> += <a href="../h_src/58351456.htm" class="localvar">m</a>;
<a id=63></a>    <a href="../h_src/58351728.htm" class="localvar">b</a> = (char *)<a href="../h_src/58351728.htm" class="localvar">b</a> + <a href="../h_src/58351456.htm" class="localvar">m</a>;
<a id=64></a>    <a href="../h_src/58351592.htm" class="localvar">n</a> -= <a href="../h_src/58351456.htm" class="localvar">m</a>;
  }
  return 0;
}

</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

