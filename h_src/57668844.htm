<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>luaK_finish</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/57668844.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/57668844.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/57668844.htm" class="function" target="_self">Flow Chart</a></li>
<li id="current"><a href="../h_src/57668844.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/57668844.htm" class="function" target="_self">Definition</a></li>
<li><a href="../h_sc/57668844.htm" class="function" target="_self">Source Checks</a></li>
<li><a href="../h_src/57706720.htm#1843" class="function" target="_self">Source File</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Source Code</h4>
<pre class=src>
void <a href="../h_src/57668844.htm" class="function">luaK_finish</a> (<a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57763132.htm" class="localvar">fs</a>) {
  int <a href="../h_src/57762996.htm" class="localvar">i</a>;
  <a href="../h_src/57513828.htm" class="type">Proto</a> *<a href="../h_src/57762860.htm" class="localvar">p</a> = <a href="../h_src/57763132.htm" class="localvar">fs</a>-&gt;<a href="../h_src/57676052.htm" class="variable">f</a>;
  for (<a href="../h_src/57762996.htm" class="localvar">i</a> = 0; <a href="../h_src/57762996.htm" class="localvar">i</a> &lt; <a href="../h_src/57763132.htm" class="localvar">fs</a>-&gt;<a href="../h_src/57675508.htm" class="variable">pc</a>; <a href="../h_src/57762996.htm" class="localvar">i</a>++) {
    <a href="../h_src/57545108.htm" class="type">Instruction</a> *<a href="../h_src/57762724.htm" class="localvar">pc</a> = &amp;<a href="../h_src/57762860.htm" class="localvar">p</a>-&gt;<a href="../h_src/57514916.htm" class="variable">code</a>[<a href="../h_src/57762996.htm" class="localvar">i</a>];
    <a href="../h_src/57548848.htm" class="macro">lua_assert</a>(i == 0 || <a href="../h_src/57683600.htm" class="macro">isOT</a>(*(pc - 1)) == <a href="../h_src/57683464.htm" class="macro">isIT</a>(*pc));
    switch (<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(*<a href="../h_src/57762724.htm" class="localvar">pc</a>)) {
      case <a href="../h_src/57685708.htm" class="variable">OP_RETURN0</a>: case <a href="../h_src/57685640.htm" class="variable">OP_RETURN1</a>: {
        if (!(<a href="../h_src/57763132.htm" class="localvar">fs</a>-&gt;<a href="../h_src/57674624.htm" class="variable">needclose</a> || <a href="../h_src/57762860.htm" class="localvar">p</a>-&gt;<a href="../h_src/57515868.htm" class="variable">is_vararg</a>))
          break;  <a  class="comments">/* no extra work */</a>
        <a  class="comments">/* else use OP_RETURN to do the extra work */</a>
        <a href="../h_src/57694616.htm" class="macro">SET_OPCODE</a>(*<a href="../h_src/57762724.htm" class="localvar">pc</a>, <a href="../h_src/57685776.htm" class="variable">OP_RETURN</a>);
      }  <a  class="comments">/* FALLTHROUGH */</a>
      case <a href="../h_src/57685776.htm" class="variable">OP_RETURN</a>: case <a href="../h_src/57685844.htm" class="variable">OP_TAILCALL</a>: {
        if (<a href="../h_src/57763132.htm" class="localvar">fs</a>-&gt;<a href="../h_src/57674624.htm" class="variable">needclose</a>)
          <a href="../h_src/57692712.htm" class="macro">SETARG_k</a>(*<a href="../h_src/57762724.htm" class="localvar">pc</a>, 1);  <a  class="comments">/* signal that it needs to close */</a>
        if (<a href="../h_src/57762860.htm" class="localvar">p</a>-&gt;<a href="../h_src/57515868.htm" class="variable">is_vararg</a>)
          <a href="../h_src/57693120.htm" class="macro">SETARG_C</a>(*<a href="../h_src/57762724.htm" class="localvar">pc</a>, <a href="../h_src/57762860.htm" class="localvar">p</a>-&gt;<a href="../h_src/57515936.htm" class="variable">numparams</a> + 1);  <a  class="comments">/* signal that it is vararg */</a>
        break;
      }
      case <a href="../h_src/57686728.htm" class="variable">OP_JMP</a>: {
        int <a href="../h_src/57762588.htm" class="localvar">target</a> = <a href="../h_src/57763812.htm" class="function">finaltarget</a>(<a href="../h_src/57762860.htm" class="localvar">p</a>-&gt;<a href="../h_src/57514916.htm" class="variable">code</a>, <a href="../h_src/57762996.htm" class="localvar">i</a>);
        <a href="../h_src/57664084.htm" class="function">fixjump</a>(<a href="../h_src/57763132.htm" class="localvar">fs</a>, <a href="../h_src/57762996.htm" class="localvar">i</a>, <a href="../h_src/57762588.htm" class="localvar">target</a>);
        break;
      }
      default: break;
    }
  }
}
</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

