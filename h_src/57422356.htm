<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>lauxlib.h</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/57422356.htm" class="file" target="_self">Info</a></li>
<li><a href="../h_im/57422356.htm" class="file" target="_self">Global Interface</a></li>
<li><a href="../h_rx/57422356.htm" class="file" target="_self">File Inclusion</a></li>
<li><a href="../h_nm/57422356.htm" class="file" target="_self">Internals</a></li>
<li><a href="../h_ua/57422356.htm" class="file" target="_self">Use of Elements</a></li>
<li><a href="../h_da/57422356.htm" class="file" target="_self">Dependencies</a></li>
<li id="current"><a href="../h_src/57422356.htm" class="file" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/57422356.htm" class="file" target="_self">Source Code</a></li>
<li><a href="../h_sc/57422356.htm" class="file" target="_self">Source Checks</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<pre class=src>
<a id=1></a><a  class="comments">/*</a>
<a id=2></a><a  class="comments">** $Id: lauxlib.h $</a>
<a id=3></a><a  class="comments">** Auxiliary functions for building Lua libraries</a>
<a id=4></a><a  class="comments">** See Copyright Notice in lua.h</a>
<a id=5></a><a  class="comments">*/</a>


<a id=8></a>#ifndef <a href="../h_src/57422288.htm" class="macro">lauxlib_h</a>
<a id=9></a>#define <a href="../h_src/57422152.htm" class="macro">lauxlib_h</a>


#include &lt;stddef.h&gt;
#include &lt;stdio.h&gt;

<a id=15></a>#include &quot;<a href="../h_src/57459688.htm" class="file">luaconf.h</a>&quot;
<a id=16></a>#include &quot;<a href="../h_src/57460028.htm" class="file">lua.h</a>&quot;


<a id=19></a><a  class="comments">/* global table */</a>
<a id=20></a>#define <a href="../h_src/57422016.htm" class="macro">LUA_GNAME</a>	&quot;_G&quot;


<a id=23></a>typedef struct <a href="../h_src/57421880.htm" class="class">luaL_Buffer</a> <a href="../h_src/57421744.htm" class="type">luaL_Buffer</a>;


<a id=26></a><a  class="comments">/* extra error code for 'luaL_loadfilex' */</a>
<a id=27></a>#define <a href="../h_src/57421676.htm" class="macro">LUA_ERRFILE</a>     (LUA_ERRERR+1)


<a id=30></a><a  class="comments">/* key, in the registry, for table of loaded modules */</a>
<a id=31></a>#define <a href="../h_src/57421540.htm" class="macro">LUA_LOADED_TABLE</a>	&quot;_LOADED&quot;


<a id=34></a><a  class="comments">/* key, in the registry, for table of preloaded loaders */</a>
<a id=35></a>#define <a href="../h_src/57421404.htm" class="macro">LUA_PRELOAD_TABLE</a>	&quot;_PRELOAD&quot;


<a id=38></a>typedef struct <a href="../h_src/57421268.htm" class="class">luaL_Reg</a> {
<a id=39></a>  const char *<a href="../h_src/57421132.htm" class="variable">name</a>;
<a id=40></a>  <a href="../h_src/57441736.htm" class="type">lua_CFunction</a> <a href="../h_src/57421064.htm" class="variable">func</a>;
<a id=41></a>} <a href="../h_src/57420996.htm" class="type">luaL_Reg</a>;


<a id=44></a>#define <a href="../h_src/57420928.htm" class="macro">LUAL_NUMSIZES</a>	(sizeof(lua_Integer)*16 + sizeof(lua_Number))

<a id=46></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57420792.htm" class="function">luaL_checkversion_</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, <a href="../h_src/57442144.htm" class="type">lua_Number</a> ver, <a href="../h_aa/57441192.htm" class="type">size_t</a> sz);
<a id=47></a>#define <a href="../h_src/57420724.htm" class="macro">luaL_checkversion</a>(L)  \
	  luaL_checkversion_(L, LUA_VERSION_NUM, LUAL_NUMSIZES)

<a id=50></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57420588.htm" class="function">luaL_getmetafield</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int obj, const char *e);
<a id=51></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57420520.htm" class="function">luaL_callmeta</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int obj, const char *e);
<a id=52></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> const char *(<a href="../h_src/57420452.htm" class="function">luaL_tolstring</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int idx, <a href="../h_aa/57441192.htm" class="type">size_t</a> *len);
<a id=53></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57420384.htm" class="function">luaL_argerror</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg, const char *extramsg);
<a id=54></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57420316.htm" class="function">luaL_typeerror</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg, const char *tname);
<a id=55></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> const char *(<a href="../h_src/57420248.htm" class="function">luaL_checklstring</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg,
<a id=56></a>                                                          <a href="../h_aa/57441192.htm" class="type">size_t</a> *l);
<a id=57></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> const char *(<a href="../h_src/57420180.htm" class="function">luaL_optlstring</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg,
<a id=58></a>                                          const char *def, <a href="../h_aa/57441192.htm" class="type">size_t</a> *l);
<a id=59></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> <a href="../h_src/57442144.htm" class="type">lua_Number</a> (<a href="../h_src/57420112.htm" class="function">luaL_checknumber</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg);
<a id=60></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> <a href="../h_src/57442144.htm" class="type">lua_Number</a> (<a href="../h_src/57420044.htm" class="function">luaL_optnumber</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg, <a href="../h_src/57442144.htm" class="type">lua_Number</a> def);

<a id=62></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> <a href="../h_src/57442076.htm" class="type">lua_Integer</a> (<a href="../h_src/57419976.htm" class="function">luaL_checkinteger</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg);
<a id=63></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> <a href="../h_src/57442076.htm" class="type">lua_Integer</a> (<a href="../h_src/57419908.htm" class="function">luaL_optinteger</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg,
<a id=64></a>                                          <a href="../h_src/57442076.htm" class="type">lua_Integer</a> def);

<a id=66></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57419840.htm" class="function">luaL_checkstack</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int sz, const char *msg);
<a id=67></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57419772.htm" class="function">luaL_checktype</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg, int t);
<a id=68></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57419704.htm" class="function">luaL_checkany</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg);

<a id=70></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int   (<a href="../h_src/57419636.htm" class="function">luaL_newmetatable</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, const char *tname);
<a id=71></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void  (<a href="../h_src/57419568.htm" class="function">luaL_setmetatable</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, const char *tname);
<a id=72></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void *(<a href="../h_src/57419500.htm" class="function">luaL_testudata</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int ud, const char *tname);
<a id=73></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void *(<a href="../h_src/57419432.htm" class="function">luaL_checkudata</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int ud, const char *tname);

<a id=75></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57419364.htm" class="function">luaL_where</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int lvl);
<a id=76></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57419296.htm" class="function">luaL_error</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, const char *fmt, ...);

<a id=78></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57419228.htm" class="function">luaL_checkoption</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int arg, const char *def,
                                   const char *const lst[]);

<a id=81></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57419092.htm" class="function">luaL_fileresult</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int stat, const char *fname);
<a id=82></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57419024.htm" class="function">luaL_execresult</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int stat);


<a id=85></a><a  class="comments">/* predefined references */</a>
<a id=86></a>#define <a href="../h_src/57418956.htm" class="macro">LUA_NOREF</a>       (-2)
<a id=87></a>#define <a href="../h_src/57418820.htm" class="macro">LUA_REFNIL</a>      (-1)

<a id=89></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57418684.htm" class="function">luaL_ref</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int t);
<a id=90></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57418616.htm" class="function">luaL_unref</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int t, int ref);

<a id=92></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57418548.htm" class="function">luaL_loadfilex</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, const char *filename,
                                               const char *mode);

<a id=95></a>#define <a href="../h_src/57418480.htm" class="macro">luaL_loadfile</a>(L,f)	luaL_loadfilex(L,f,NULL)

<a id=97></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57418344.htm" class="function">luaL_loadbufferx</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, const char *buff, <a href="../h_aa/57441192.htm" class="type">size_t</a> sz,
                                   const char *name, const char *mode);
<a id=99></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57418276.htm" class="function">luaL_loadstring</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, const char *s);

<a id=101></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> <a href="../h_src/57444252.htm" class="type">lua_State</a> *(<a href="../h_src/57418208.htm" class="function">luaL_newstate</a>) (void);

<a id=103></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> <a href="../h_src/57442076.htm" class="type">lua_Integer</a> (<a href="../h_src/57418140.htm" class="function">luaL_len</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int idx);

<a id=105></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57418072.htm" class="function">luaL_addgsub</a>) (<a href="../h_src/57421744.htm" class="type">luaL_Buffer</a> *b, const char *s,
                                     const char *p, const char *r);
<a id=107></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> const char *(<a href="../h_src/57417936.htm" class="function">luaL_gsub</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, const char *s,
                                    const char *p, const char *r);

<a id=110></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57417868.htm" class="function">luaL_setfuncs</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, const <a href="../h_src/57420996.htm" class="type">luaL_Reg</a> *l, int nup);

<a id=112></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> int (<a href="../h_src/57417732.htm" class="function">luaL_getsubtable</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, int idx, const char *fname);

<a id=114></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57417664.htm" class="function">luaL_traceback</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, <a href="../h_src/57444252.htm" class="type">lua_State</a> *L1,
                                  const char *msg, int level);

<a id=117></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57417596.htm" class="function">luaL_requiref</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, const char *modname,
<a id=118></a>                                 <a href="../h_src/57441736.htm" class="type">lua_CFunction</a> openf, int glb);

<a id=120></a><a  class="comments">/*</a>
<a id=121></a><a  class="comments">** ===============================================================</a>
<a id=122></a><a  class="comments">** some useful macros</a>
<a id=123></a><a  class="comments">** ===============================================================</a>
<a id=124></a><a  class="comments">*/</a>


<a id=127></a>#define <a href="../h_src/57417528.htm" class="macro">luaL_newlibtable</a>(L,l)	\
  lua_createtable(L, 0, sizeof(l)/sizeof((l)[0]) - 1)

<a id=130></a>#define <a href="../h_src/57417392.htm" class="macro">luaL_newlib</a>(L,l)  \
  (luaL_checkversion(L), luaL_newlibtable(L,l), luaL_setfuncs(L,l,0))

<a id=133></a>#define <a href="../h_src/57417256.htm" class="macro">luaL_argcheck</a>(L, cond,arg,extramsg)	\
	((void)(luai_likely(cond) || luaL_argerror(L, (arg), (extramsg))))

<a id=136></a>#define <a href="../h_src/57417120.htm" class="macro">luaL_argexpected</a>(L,cond,arg,tname)	\
	((void)(luai_likely(cond) || luaL_typeerror(L, (arg), (tname))))

<a id=139></a>#define <a href="../h_src/57416984.htm" class="macro">luaL_checkstring</a>(L,n)	(luaL_checklstring(L, (n), NULL))
<a id=140></a>#define <a href="../h_src/57416848.htm" class="macro">luaL_optstring</a>(L,n,d)	(luaL_optlstring(L, (n), (d), NULL))

<a id=142></a>#define <a href="../h_src/57416712.htm" class="macro">luaL_typename</a>(L,i)	lua_typename(L, lua_type(L,(i)))

<a id=144></a>#define <a href="../h_src/57416576.htm" class="macro">luaL_dofile</a>(L, fn) \
	(luaL_loadfile(L, fn) || lua_pcall(L, 0, LUA_MULTRET, 0))

<a id=147></a>#define <a href="../h_src/57416440.htm" class="macro">luaL_dostring</a>(L, s) \
	(luaL_loadstring(L, s) || lua_pcall(L, 0, LUA_MULTRET, 0))

<a id=150></a>#define <a href="../h_src/57416304.htm" class="macro">luaL_getmetatable</a>(L,n)	(lua_getfield(L, LUA_REGISTRYINDEX, (n)))

<a id=152></a>#define <a href="../h_src/57416168.htm" class="macro">luaL_opt</a>(L,f,n,d)	(lua_isnoneornil(L,(n)) ? (d) : f(L,(n)))

<a id=154></a>#define <a href="../h_src/57416032.htm" class="macro">luaL_loadbuffer</a>(L,s,sz,n)	luaL_loadbufferx(L,s,sz,n,NULL)


<a id=157></a><a  class="comments">/*</a>
<a id=158></a><a  class="comments">** Perform arithmetic operations on lua_Integer values with wrap-around</a>
<a id=159></a><a  class="comments">** semantics, as the Lua core does.</a>
<a id=160></a><a  class="comments">*/</a>
<a id=161></a>#define <a href="../h_src/57415896.htm" class="macro">luaL_intop</a>(op,v1,v2)  \
	((lua_Integer)((lua_Unsigned)(v1) op (lua_Unsigned)(v2)))


<a id=165></a><a  class="comments">/* push the value used to represent failure/error */</a>
<a id=166></a>#define <a href="../h_src/57415760.htm" class="macro">luaL_pushfail</a>(L)	lua_pushnil(L)


<a id=169></a><a  class="comments">/*</a>
<a id=170></a><a  class="comments">** Internal assertions for in-house debugging</a>
<a id=171></a><a  class="comments">*/</a>
<a id=172></a>#if !defined(<a href="../h_src/57415624.htm" class="macro">lua_assert</a>)

<a id=174></a>#if defined <a href="../h_src/57415488.htm" class="macro">LUAI_ASSERT</a>
  #include &lt;assert.h&gt;
  #define lua_assert(c)		assert(c)
#else
<a id=178></a>  #define <a href="../h_src/57415352.htm" class="macro">lua_assert</a>(c)		((void)0)
#endif

#endif



<a id=185></a><a  class="comments">/*</a>
<a id=186></a><a  class="comments">** {======================================================</a>
<a id=187></a><a  class="comments">** Generic Buffer manipulation</a>
<a id=188></a><a  class="comments">** =======================================================</a>
<a id=189></a><a  class="comments">*/</a>

<a id=191></a>struct <a href="../h_src/57421880.htm" class="class">luaL_Buffer</a> {
<a id=192></a>  char *<a href="../h_src/57415216.htm" class="variable">b</a>;  <a  class="comments">/* buffer address */</a>
<a id=193></a>  <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/57415148.htm" class="variable">size</a>;  <a  class="comments">/* buffer size */</a>
<a id=194></a>  <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/57415080.htm" class="variable">n</a>;  <a  class="comments">/* number of characters in buffer */</a>
<a id=195></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57415012.htm" class="variable">L</a>;
  union {
<a id=197></a>    <a href="../h_src/57447108.htm" class="macro">LUAI_MAXALIGN</a>;  <a  class="comments">/* ensure maximum alignment for buffer */</a><a href="../h_src/57414808.htm" class="variable">u</a>re maximum alignment for buffer */
<a id=198></a>    char <a href="../h_src/57414536.htm" class="variable">b</a>[<a href="../h_src/57447244.htm" class="macro">LUAL_BUFFERSIZE</a>];  <a  class="comments">/* initial buffer */</a>
<a id=199></a>  } <a href="../h_src/57414400.htm" class="variable">init</a>;
};


<a id=203></a>#define <a href="../h_src/57414332.htm" class="macro">luaL_bufflen</a>(bf)	((bf)-&gt;n)
<a id=204></a>#define <a href="../h_src/57414196.htm" class="macro">luaL_buffaddr</a>(bf)	((bf)-&gt;b)


<a id=207></a>#define <a href="../h_src/57414060.htm" class="macro">luaL_addchar</a>(B,c) \
  ((void)((B)-&gt;n &lt; (B)-&gt;size || luaL_prepbuffsize((B), 1)), \
   ((B)-&gt;b[(B)-&gt;n++] = (c)))

<a id=211></a>#define <a href="../h_src/57413924.htm" class="macro">luaL_addsize</a>(B,s)	((B)-&gt;n += (s))

<a id=213></a>#define <a href="../h_src/57413788.htm" class="macro">luaL_buffsub</a>(B,s)	((B)-&gt;n -= (s))

<a id=215></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57413652.htm" class="function">luaL_buffinit</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, <a href="../h_src/57421744.htm" class="type">luaL_Buffer</a> *B);
<a id=216></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> char *(<a href="../h_src/57413584.htm" class="function">luaL_prepbuffsize</a>) (<a href="../h_src/57421744.htm" class="type">luaL_Buffer</a> *B, <a href="../h_aa/57441192.htm" class="type">size_t</a> sz);
<a id=217></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57413516.htm" class="function">luaL_addlstring</a>) (<a href="../h_src/57421744.htm" class="type">luaL_Buffer</a> *B, const char *s, <a href="../h_aa/57441192.htm" class="type">size_t</a> l);
<a id=218></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57413448.htm" class="function">luaL_addstring</a>) (<a href="../h_src/57421744.htm" class="type">luaL_Buffer</a> *B, const char *s);
<a id=219></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57413380.htm" class="function">luaL_addvalue</a>) (<a href="../h_src/57421744.htm" class="type">luaL_Buffer</a> *B);
<a id=220></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57413312.htm" class="function">luaL_pushresult</a>) (<a href="../h_src/57421744.htm" class="type">luaL_Buffer</a> *B);
<a id=221></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> void (<a href="../h_src/57413244.htm" class="function">luaL_pushresultsize</a>) (<a href="../h_src/57421744.htm" class="type">luaL_Buffer</a> *B, <a href="../h_aa/57441192.htm" class="type">size_t</a> sz);
<a id=222></a><a href="../h_src/57454316.htm" class="macro">LUALIB_API</a> char *(<a href="../h_src/57413176.htm" class="function">luaL_buffinitsize</a>) (<a href="../h_src/57444252.htm" class="type">lua_State</a> *L, <a href="../h_src/57421744.htm" class="type">luaL_Buffer</a> *B, <a href="../h_aa/57441192.htm" class="type">size_t</a> sz);

<a id=224></a>#define <a href="../h_src/57413108.htm" class="macro">luaL_prepbuffer</a>(B)	luaL_prepbuffsize(B, LUAL_BUFFERSIZE)

<a id=226></a><a  class="comments">/* }====================================================== */</a>



<a id=230></a><a  class="comments">/*</a>
<a id=231></a><a  class="comments">** {======================================================</a>
<a id=232></a><a  class="comments">** File handles for IO library</a>
<a id=233></a><a  class="comments">** =======================================================</a>
<a id=234></a><a  class="comments">*/</a>

<a id=236></a><a  class="comments">/*</a>
<a id=237></a><a  class="comments">** A file handle is a userdata with metatable 'LUA_FILEHANDLE' and</a>
<a id=238></a><a  class="comments">** initial structure 'luaL_Stream' (it may contain other fields</a>
<a id=239></a><a  class="comments">** after that initial structure).</a>
<a id=240></a><a  class="comments">*/</a>

<a id=242></a>#define <a href="../h_src/57412972.htm" class="macro">LUA_FILEHANDLE</a>          &quot;FILE*&quot;


<a id=245></a>typedef struct <a href="../h_src/57412836.htm" class="class">luaL_Stream</a> {
<a id=246></a>  FILE *f;  <a  class="comments">/* stream (NULL for incompletely created streams) */</a>
<a id=247></a>  <a href="../h_src/57441736.htm" class="type">lua_CFunction</a> <a href="../h_src/57412700.htm" class="variable">closef</a>;  <a  class="comments">/* to close stream (NULL for closed streams) */</a>
<a id=248></a>} <a href="../h_src/57412632.htm" class="type">luaL_Stream</a>;

<a id=250></a><a  class="comments">/* }====================================================== */</a>

<a id=252></a><a  class="comments">/*</a>
<a id=253></a><a  class="comments">** {==================================================================</a>
<a id=254></a><a  class="comments">** &quot;Abstraction Layer&quot; for basic report of messages and errors</a>
<a id=255></a><a  class="comments">** ===================================================================</a>
<a id=256></a><a  class="comments">*/</a>

<a id=258></a><a  class="comments">/* print a string */</a>
<a id=259></a>#if !defined(<a href="../h_src/57412564.htm" class="macro">lua_writestring</a>)
<a id=260></a>#define <a href="../h_src/57412428.htm" class="macro">lua_writestring</a>(s,l)   fwrite((s), sizeof(char), (l), stdout)
#endif

<a id=263></a><a  class="comments">/* print a newline and flush the output */</a>
<a id=264></a>#if !defined(<a href="../h_src/57412292.htm" class="macro">lua_writeline</a>)
<a id=265></a>#define <a href="../h_src/57412156.htm" class="macro">lua_writeline</a>()        (lua_writestring(&quot;\n&quot;, 1), fflush(stdout))
#endif

<a id=268></a><a  class="comments">/* print an error message */</a>
<a id=269></a>#if !defined(<a href="../h_src/57412020.htm" class="macro">lua_writestringerror</a>)
<a id=270></a>#define <a href="../h_src/57411884.htm" class="macro">lua_writestringerror</a>(s,p) \
        (fprintf(stderr, (s), (p)), fflush(stderr))
#endif

<a id=274></a><a  class="comments">/* }================================================================== */</a>


<a id=277></a><a  class="comments">/*</a>
<a id=278></a><a  class="comments">** {============================================================</a>
<a id=279></a><a  class="comments">** Compatibility with deprecated conversions</a>
<a id=280></a><a  class="comments">** =============================================================</a>
<a id=281></a><a  class="comments">*/</a>
<a id=282></a>#if defined(<a href="../h_src/57453228.htm" class="macro">LUA_COMPAT_APIINTCASTS</a>)

<a id=284></a>#define <a href="../h_src/57411748.htm" class="macro">luaL_checkunsigned</a>(L,a)	((lua_Unsigned)luaL_checkinteger(L,a))
<a id=285></a>#define <a href="../h_src/57411612.htm" class="macro">luaL_optunsigned</a>(L,a,d)	\
	((lua_Unsigned)luaL_optinteger(L,a,(lua_Integer)(d)))

<a id=288></a>#define <a href="../h_src/57411476.htm" class="macro">luaL_checkint</a>(L,n)	((int)luaL_checkinteger(L, (n)))
<a id=289></a>#define <a href="../h_src/57411340.htm" class="macro">luaL_optint</a>(L,n,d)	((int)luaL_optinteger(L, (n), (d)))

<a id=291></a>#define <a href="../h_src/57411204.htm" class="macro">luaL_checklong</a>(L,n)	((long)luaL_checkinteger(L, (n)))
<a id=292></a>#define <a href="../h_src/57411068.htm" class="macro">luaL_optlong</a>(L,n,d)	((long)luaL_optinteger(L, (n), (d)))

#endif
<a id=295></a><a  class="comments">/* }============================================================ */</a>



#endif


</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

