<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>checkoption</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/143350488.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/143350488.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/143350488.htm" class="function" target="_self">Flow Chart</a></li>
<li id="current"><a href="../h_src/143350488.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/143350488.htm" class="function" target="_self">Definition</a></li>
<li><a href="../h_sc/143350488.htm" class="function" target="_self">Source Checks</a></li>
<li><a href="../h_src/143359192.htm#272" class="function" target="_self">Source File</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Source Code</h4>
<pre class=src>
static const char *<a href="../h_src/143350488.htm" class="function">checkoption</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143350352.htm" class="localvar">L</a>, const char *<a href="../h_src/143350216.htm" class="localvar">conv</a>,
                                <a href="../h_aa/57441872.htm" class="type">ptrdiff_t</a> <a href="../h_src/143350080.htm" class="localvar">convlen</a>, char *<a href="../h_src/143349944.htm" class="localvar">buff</a>) {
  const char *<a href="../h_src/143349808.htm" class="localvar">option</a> = <a href="../h_src/143358716.htm" class="macro">LUA_STRFTIMEOPTIONS</a>;
  int <a href="../h_src/143349672.htm" class="localvar">oplen</a> = 1;  <a  class="comments">/* length of options being checked */</a>
  for (; *<a href="../h_src/143349808.htm" class="localvar">option</a> != '\0' &amp;&amp; <a href="../h_src/143349672.htm" class="localvar">oplen</a> &lt;= <a href="../h_src/143350080.htm" class="localvar">convlen</a>; <a href="../h_src/143349808.htm" class="localvar">option</a> += <a href="../h_src/143349672.htm" class="localvar">oplen</a>) {
    if (*<a href="../h_src/143349808.htm" class="localvar">option</a> == '|')  <a  class="comments">/* next block? */</a>
      <a href="../h_src/143349672.htm" class="localvar">oplen</a>++;  <a  class="comments">/* will check options with next length (+1) */</a>
    else if (<a href="../h_aa/58131444.htm" class="libfunc">memcmp</a>(<a href="../h_src/143350216.htm" class="localvar">conv</a>, <a href="../h_src/143349808.htm" class="localvar">option</a>, <a href="../h_src/143349672.htm" class="localvar">oplen</a>) == 0) {  <a  class="comments">/* match? */</a>
      <a href="../h_aa/57902680.htm" class="libfunc">memcpy</a>(<a href="../h_src/143349944.htm" class="localvar">buff</a>, <a href="../h_src/143350216.htm" class="localvar">conv</a>, <a href="../h_src/143349672.htm" class="localvar">oplen</a>);  <a  class="comments">/* copy valid option to buffer */</a>
      <a href="../h_src/143349944.htm" class="localvar">buff</a>[<a href="../h_src/143349672.htm" class="localvar">oplen</a>] = '\0';
      return <a href="../h_src/143350216.htm" class="localvar">conv</a> + <a href="../h_src/143349672.htm" class="localvar">oplen</a>;  <a  class="comments">/* return next item */</a>
    }
  }
  <a href="../h_src/57420384.htm" class="function">luaL_argerror</a>(<a href="../h_src/143350352.htm" class="localvar">L</a>, 1,
    <a href="../h_src/57434732.htm" class="function">lua_pushfstring</a>(<a href="../h_src/143350352.htm" class="localvar">L</a>, &quot;invalid conversion specifier '%%%s'&quot;, <a href="../h_src/143350216.htm" class="localvar">conv</a>));
  return <a href="../h_src/143350216.htm" class="localvar">conv</a>;  <a  class="comments">/* to avoid warnings */</a>
}
</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

