<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>lapi.c</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/57552180.htm" class="file" target="_self">Info</a></li>
<li><a href="../h_im/57552180.htm" class="file" target="_self">Global Interface</a></li>
<li><a href="../h_rx/57552180.htm" class="file" target="_self">File Inclusion</a></li>
<li><a href="../h_nm/57552180.htm" class="file" target="_self">Internals</a></li>
<li><a href="../h_uf/57552180.htm" class="file" target="_self">Use of Elements</a></li>
<li><a href="../h_df/57552180.htm" class="file" target="_self">Dependencies</a></li>
<li id="current"><a href="../h_src/57552180.htm" class="file" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/57552180.htm" class="file" target="_self">Source Code</a></li>
<li><a href="../h_sc/57552180.htm" class="file" target="_self">Source Checks</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<pre class=src>
<a id=1></a><a  class="comments">/*</a>
<a id=2></a><a  class="comments">** $Id: lapi.c $</a>
<a id=3></a><a  class="comments">** Lua API</a>
<a id=4></a><a  class="comments">** See Copyright Notice in lua.h</a>
<a id=5></a><a  class="comments">*/</a>

<a id=7></a>#define <a href="../h_src/57552112.htm" class="macro">lapi_c</a>
<a id=8></a>#define <a href="../h_src/57551976.htm" class="macro">LUA_CORE</a>

<a id=10></a>#include &quot;<a href="../h_src/57461592.htm" class="file">lprefix.h</a>&quot;


#include &lt;limits.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;string.h&gt;

<a id=17></a>#include &quot;<a href="../h_src/57460028.htm" class="file">lua.h</a>&quot;

<a id=19></a>#include &quot;<a href="../h_src/57551432.htm" class="file">lapi.h</a>&quot;
<a id=20></a>#include &quot;<a href="../h_src/57637116.htm" class="file">ldebug.h</a>&quot;
<a id=21></a>#include &quot;<a href="../h_src/57635008.htm" class="file">ldo.h</a>&quot;
<a id=22></a>#include &quot;<a href="../h_src/57632424.htm" class="file">lfunc.h</a>&quot;
<a id=23></a>#include &quot;<a href="../h_src/57630112.htm" class="file">lgc.h</a>&quot;
<a id=24></a>#include &quot;<a href="../h_src/57496896.htm" class="file">lmem.h</a>&quot;
<a id=25></a>#include &quot;<a href="../h_src/57537696.htm" class="file">lobject.h</a>&quot;
<a id=26></a>#include &quot;<a href="../h_src/57538104.htm" class="file">lstate.h</a>&quot;
<a id=27></a>#include &quot;<a href="../h_src/57620184.htm" class="file">lstring.h</a>&quot;
<a id=28></a>#include &quot;<a href="../h_src/57618348.htm" class="file">ltable.h</a>&quot;
<a id=29></a>#include &quot;<a href="../h_src/57501248.htm" class="file">ltm.h</a>&quot;
<a id=30></a>#include &quot;<a href="../h_src/57615968.htm" class="file">lundump.h</a>&quot;
<a id=31></a>#include &quot;<a href="../h_src/57614676.htm" class="file">lvm.h</a>&quot;



<a id=35></a>const char <a href="../h_src/57439968.htm" class="variable">lua_ident</a>[] =
<a id=36></a>  &quot;$LuaVersion: &quot; <a href="../h_src/57446020.htm" class="macro">LUA_COPYRIGHT</a> &quot; $&quot;
<a id=37></a>  &quot;$LuaAuthors: &quot; <a href="../h_src/57445884.htm" class="macro">LUA_AUTHORS</a> &quot; $&quot;;



<a id=41></a><a  class="comments">/*</a>
<a id=42></a><a  class="comments">** Test for a valid index (one that is not the 'nilvalue').</a>
<a id=43></a><a  class="comments">** '!ttisnil(o)' implies 'o != &amp;G(L)-&gt;nilvalue', so it is not needed.</a>
<a id=44></a><a  class="comments">** However, it covers the most common cases in a faster way.</a>
<a id=45></a><a  class="comments">*/</a>
<a id=46></a>#define <a href="../h_src/57610460.htm" class="macro">isvalid</a>(L, o)	(!ttisnil(o) || o != &amp;G(L)-&gt;nilvalue)


<a id=49></a><a  class="comments">/* test for pseudo index */</a>
<a id=50></a>#define <a href="../h_src/57610324.htm" class="macro">ispseudo</a>(i)		((i) &lt;= LUA_REGISTRYINDEX)

<a id=52></a><a  class="comments">/* test for upvalue */</a>
<a id=53></a>#define <a href="../h_src/57610188.htm" class="macro">isupvalue</a>(i)		((i) &lt; LUA_REGISTRYINDEX)


<a id=56></a><a  class="comments">/*</a>
<a id=57></a><a  class="comments">** Convert an acceptable index to a pointer to its respective value.</a>
<a id=58></a><a  class="comments">** Non-valid indices return the special nil value 'G(L)-&gt;nilvalue'.</a>
<a id=59></a><a  class="comments">*/</a>
<a id=60></a>static <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57610052.htm" class="function">index2value</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57609916.htm" class="localvar">L</a>, int <a href="../h_src/57609780.htm" class="localvar">idx</a>) {
<a id=61></a>  <a href="../h_src/57537764.htm" class="type">CallInfo</a> *<a href="../h_src/57609644.htm" class="localvar">ci</a> = <a href="../h_src/57609916.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>;
<a id=62></a>  if (<a href="../h_src/57609780.htm" class="localvar">idx</a> &gt; 0) {
<a id=63></a>    <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57609508.htm" class="localvar">o</a> = <a href="../h_src/57609644.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57651532.htm" class="variable">func</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + <a href="../h_src/57609780.htm" class="localvar">idx</a>;
<a id=64></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57609916.htm" class="localvar">L</a>, idx &lt;= ci-&gt;top.p - (ci-&gt;func.p + 1), &quot;unacceptable index&quot;);
<a id=65></a>    if (<a href="../h_src/57609508.htm" class="localvar">o</a> &gt;= <a href="../h_src/57609916.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>) return &amp;<a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57609916.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57646228.htm" class="variable">nilvalue</a>;
<a id=66></a>    else return <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57609508.htm" class="localvar">o</a>);
  }
<a id=68></a>  else if (!<a href="../h_src/57610324.htm" class="macro">ispseudo</a>(<a href="../h_src/57609780.htm" class="localvar">idx</a>)) {  <a  class="comments">/* negative index */</a>
<a id=69></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57609916.htm" class="localvar">L</a>, idx != 0 &amp;&amp; -idx &lt;= L-&gt;top.p - (ci-&gt;func.p + 1),
                 &quot;invalid index&quot;);
<a id=71></a>    return <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57609916.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + <a href="../h_src/57609780.htm" class="localvar">idx</a>);
  }
<a id=73></a>  else if (<a href="../h_src/57609780.htm" class="localvar">idx</a> == <a href="../h_src/57445476.htm" class="macro">LUA_REGISTRYINDEX</a>)
<a id=74></a>    return &amp;<a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57609916.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57646296.htm" class="variable">l_registry</a>;
<a id=75></a>  else {  <a  class="comments">/* upvalues */</a>
<a id=76></a>    <a href="../h_src/57609780.htm" class="localvar">idx</a> = <a href="../h_src/57445476.htm" class="macro">LUA_REGISTRYINDEX</a> - <a href="../h_src/57609780.htm" class="localvar">idx</a>;
<a id=77></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57609916.htm" class="localvar">L</a>, idx &lt;= <a href="../h_src/57631676.htm" class="macro">MAXUPVAL</a> + 1, &quot;upvalue index too large&quot;);
<a id=78></a>    if (<a href="../h_src/57512808.htm" class="macro">ttisCclosure</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57609644.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57651532.htm" class="variable">func</a>.<a href="../h_src/57531984.htm" class="variable">p</a>))) {  <a  class="comments">/* C closure? */</a>
<a id=79></a>      <a href="../h_src/57508728.htm" class="type">CClosure</a> *<a href="../h_src/57609236.htm" class="localvar">func</a> = <a href="../h_src/57511992.htm" class="macro">clCvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57609644.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57651532.htm" class="variable">func</a>.<a href="../h_src/57531984.htm" class="variable">p</a>));
<a id=80></a>      return (<a href="../h_src/57609780.htm" class="localvar">idx</a> &lt;= <a href="../h_src/57609236.htm" class="localvar">func</a>-&gt;<a href="../h_src/57509068.htm" class="variable">nupvalues</a>) ? &amp;<a href="../h_src/57609236.htm" class="localvar">func</a>-&gt;<a href="../h_src/57508796.htm" class="variable">upvalue</a>[<a href="../h_src/57609780.htm" class="localvar">idx</a>-1]
<a id=81></a>                                      : &amp;<a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57609916.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57646228.htm" class="variable">nilvalue</a>;
    }
<a id=83></a>    else {  <a  class="comments">/* light C function or Lua function (through a hook)?) */</a>
<a id=84></a>      <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57609916.htm" class="localvar">L</a>, <a href="../h_src/57512944.htm" class="macro">ttislcf</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(ci-&gt;func.p)), &quot;caller not a C function&quot;);
<a id=85></a>      return &amp;<a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57609916.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57646228.htm" class="variable">nilvalue</a>;  <a  class="comments">/* no upvalues */</a>
    }
  }
}



<a id=92></a><a  class="comments">/*</a>
<a id=93></a><a  class="comments">** Convert a valid actual index (not a pseudo-index) to its address.</a>
<a id=94></a><a  class="comments">*/</a>
<a id=95></a><a href="../h_src/57545312.htm" class="macro">l_sinline</a> <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57609100.htm" class="function">index2stack</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57608964.htm" class="localvar">L</a>, int <a href="../h_src/57608828.htm" class="localvar">idx</a>) {
<a id=96></a>  <a href="../h_src/57537764.htm" class="type">CallInfo</a> *<a href="../h_src/57608692.htm" class="localvar">ci</a> = <a href="../h_src/57608964.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>;
<a id=97></a>  if (<a href="../h_src/57608828.htm" class="localvar">idx</a> &gt; 0) {
<a id=98></a>    <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57608556.htm" class="localvar">o</a> = <a href="../h_src/57608692.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57651532.htm" class="variable">func</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + <a href="../h_src/57608828.htm" class="localvar">idx</a>;
<a id=99></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57608964.htm" class="localvar">L</a>, o &lt; L-&gt;top.p, &quot;invalid index&quot;);
<a id=100></a>    return <a href="../h_src/57608556.htm" class="localvar">o</a>;
  }
<a id=102></a>  else {    <a  class="comments">/* non-positive index */</a>
<a id=103></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57608964.htm" class="localvar">L</a>, idx != 0 &amp;&amp; -idx &lt;= L-&gt;top.p - (ci-&gt;func.p + 1),
                 &quot;invalid index&quot;);
<a id=105></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57608964.htm" class="localvar">L</a>, !<a href="../h_src/57610324.htm" class="macro">ispseudo</a>(idx), &quot;invalid index&quot;);
<a id=106></a>    return <a href="../h_src/57608964.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + <a href="../h_src/57608828.htm" class="localvar">idx</a>;
  }
}


<a id=111></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57439016.htm" class="function">lua_checkstack</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57608420.htm" class="localvar">L</a>, int <a href="../h_src/57608284.htm" class="localvar">n</a>) {
<a id=112></a>  int <a href="../h_src/57608148.htm" class="localvar">res</a>;
<a id=113></a>  <a href="../h_src/57537764.htm" class="type">CallInfo</a> *<a href="../h_src/57608012.htm" class="localvar">ci</a>;
<a id=114></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=115></a>  <a href="../h_src/57608012.htm" class="localvar">ci</a> = <a href="../h_src/57608420.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>;
<a id=116></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57608420.htm" class="localvar">L</a>, n &gt;= 0, &quot;negative 'n'&quot;);
<a id=117></a>  if (<a href="../h_src/57608420.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642352.htm" class="variable">stack_last</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - <a href="../h_src/57608420.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> &gt; <a href="../h_src/57608284.htm" class="localvar">n</a>)  <a  class="comments">/* stack large enough? */</a>
<a id=118></a>    <a href="../h_src/57608148.htm" class="localvar">res</a> = 1;  <a  class="comments">/* yes; check is OK */</a>
<a id=119></a>  else  <a  class="comments">/* need to grow stack */</a>
<a id=120></a>    <a href="../h_src/57608148.htm" class="localvar">res</a> = <a href="../h_src/57632764.htm" class="function">luaD_growstack</a>(<a href="../h_src/57608420.htm" class="localvar">L</a>, <a href="../h_src/57608284.htm" class="localvar">n</a>, 0);
<a id=121></a>  if (<a href="../h_src/57608148.htm" class="localvar">res</a> &amp;&amp; <a href="../h_src/57608012.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57651464.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> &lt; <a href="../h_src/57608420.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + <a href="../h_src/57608284.htm" class="localvar">n</a>)
<a id=122></a>    <a href="../h_src/57608012.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57651464.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> = <a href="../h_src/57608420.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + <a href="../h_src/57608284.htm" class="localvar">n</a>;  <a  class="comments">/* adjust frame top */</a>
<a id=123></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=124></a>  return <a href="../h_src/57608148.htm" class="localvar">res</a>;
}


<a id=128></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57438948.htm" class="function">lua_xmove</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57607876.htm" class="localvar">from</a>, <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57607740.htm" class="localvar">to</a>, int <a href="../h_src/57607604.htm" class="localvar">n</a>) {
<a id=129></a>  int <a href="../h_src/57607468.htm" class="localvar">i</a>;
<a id=130></a>  if (<a href="../h_src/57607876.htm" class="localvar">from</a> == <a href="../h_src/57607740.htm" class="localvar">to</a>) return;
<a id=131></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(to);
<a id=132></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57607876.htm" class="localvar">from</a>, n);
<a id=133></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57607876.htm" class="localvar">from</a>, <a href="../h_src/57641196.htm" class="macro">G</a>(from) == <a href="../h_src/57641196.htm" class="macro">G</a>(to), &quot;moving among independent states&quot;);
<a id=134></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57607876.htm" class="localvar">from</a>, to-&gt;ci-&gt;top.p - to-&gt;top.p &gt;= n, &quot;stack overflow&quot;);
<a id=135></a>  <a href="../h_src/57607876.htm" class="localvar">from</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> -= <a href="../h_src/57607604.htm" class="localvar">n</a>;
<a id=136></a>  for (<a href="../h_src/57607468.htm" class="localvar">i</a> = 0; <a href="../h_src/57607468.htm" class="localvar">i</a> &lt; <a href="../h_src/57607604.htm" class="localvar">n</a>; <a href="../h_src/57607468.htm" class="localvar">i</a>++) {
<a id=137></a>    <a href="../h_src/57533548.htm" class="macro">setobjs2s</a>(<a href="../h_src/57607740.htm" class="localvar">to</a>, <a href="../h_src/57607740.htm" class="localvar">to</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57607876.htm" class="localvar">from</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + <a href="../h_src/57607468.htm" class="localvar">i</a>);
<a id=138></a>    <a href="../h_src/57607740.htm" class="localvar">to</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>++;  <a  class="comments">/* stack already checked by previous 'api_check' */</a>
  }
<a id=140></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(to);
}


<a id=144></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> <a href="../h_src/57441736.htm" class="type">lua_CFunction</a> <a href="../h_src/57439560.htm" class="function">lua_atpanic</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57607060.htm" class="localvar">L</a>, <a href="../h_src/57441736.htm" class="type">lua_CFunction</a> <a href="../h_src/57606924.htm" class="localvar">panicf</a>) {
<a id=145></a>  <a href="../h_src/57441736.htm" class="type">lua_CFunction</a> <a href="../h_src/57606788.htm" class="localvar">old</a>;
<a id=146></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=147></a>  <a href="../h_src/57606788.htm" class="localvar">old</a> = <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57607060.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57643916.htm" class="variable">panic</a>;
<a id=148></a>  <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57607060.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57643916.htm" class="variable">panic</a> = <a href="../h_src/57606924.htm" class="localvar">panicf</a>;
<a id=149></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=150></a>  return <a href="../h_src/57606788.htm" class="localvar">old</a>;
}


<a id=154></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> <a href="../h_src/57442144.htm" class="type">lua_Number</a> <a href="../h_src/57439492.htm" class="function">lua_version</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57606584.htm" class="localvar">L</a>) {
<a id=155></a>  <a href="../h_src/57547896.htm" class="macro">UNUSED</a>(<a href="../h_src/57606584.htm" class="localvar">L</a>);
<a id=156></a>  return <a href="../h_src/57446564.htm" class="macro">LUA_VERSION_NUM</a>;
}



<a id=161></a><a  class="comments">/*</a>
<a id=162></a><a  class="comments">** basic stack manipulation</a>
<a id=163></a><a  class="comments">*/</a>


<a id=166></a><a  class="comments">/*</a>
<a id=167></a><a  class="comments">** convert an acceptable stack index into an absolute index</a>
<a id=168></a><a  class="comments">*/</a>
<a id=169></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57439424.htm" class="function">lua_absindex</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57606448.htm" class="localvar">L</a>, int <a href="../h_src/57606312.htm" class="localvar">idx</a>) {
<a id=170></a>  return (<a href="../h_src/57606312.htm" class="localvar">idx</a> &gt; 0 || <a href="../h_src/57610324.htm" class="macro">ispseudo</a>(<a href="../h_src/57606312.htm" class="localvar">idx</a>))
<a id=171></a>         ? <a href="../h_src/57606312.htm" class="localvar">idx</a>
<a id=172></a>         : <a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/57606448.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - <a href="../h_src/57606448.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>-&gt;<a href="../h_src/57651532.htm" class="variable">func</a>.<a href="../h_src/57531984.htm" class="variable">p</a>) + <a href="../h_src/57606312.htm" class="localvar">idx</a>;
}


<a id=176></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57439356.htm" class="function">lua_gettop</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57606176.htm" class="localvar">L</a>) {
<a id=177></a>  return <a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/57606176.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - (<a href="../h_src/57606176.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>-&gt;<a href="../h_src/57651532.htm" class="variable">func</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + 1));
}


<a id=181></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57439288.htm" class="function">lua_settop</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57606040.htm" class="localvar">L</a>, int <a href="../h_src/57605904.htm" class="localvar">idx</a>) {
<a id=182></a>  <a href="../h_src/57537764.htm" class="type">CallInfo</a> *<a href="../h_src/57605768.htm" class="localvar">ci</a>;
<a id=183></a>  <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57605632.htm" class="localvar">func</a>, <a href="../h_src/57605496.htm" class="localvar">newtop</a>;
<a id=184></a>  <a href="../h_aa/57441872.htm" class="type">ptrdiff_t</a> <a href="../h_src/57605360.htm" class="localvar">diff</a>;  <a  class="comments">/* difference for new top */</a>
<a id=185></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=186></a>  <a href="../h_src/57605768.htm" class="localvar">ci</a> = <a href="../h_src/57606040.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>;
<a id=187></a>  <a href="../h_src/57605632.htm" class="localvar">func</a> = <a href="../h_src/57605768.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57651532.htm" class="variable">func</a>.<a href="../h_src/57531984.htm" class="variable">p</a>;
<a id=188></a>  if (<a href="../h_src/57605904.htm" class="localvar">idx</a> &gt;= 0) {
<a id=189></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57606040.htm" class="localvar">L</a>, idx &lt;= ci-&gt;top.p - (func + 1), &quot;new top too large&quot;);
<a id=190></a>    <a href="../h_src/57605360.htm" class="localvar">diff</a> = ((<a href="../h_src/57605632.htm" class="localvar">func</a> + 1) + <a href="../h_src/57605904.htm" class="localvar">idx</a>) - <a href="../h_src/57606040.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>;
<a id=191></a>    for (; <a href="../h_src/57605360.htm" class="localvar">diff</a> &gt; 0; <a href="../h_src/57605360.htm" class="localvar">diff</a>--)
<a id=192></a>      <a href="../h_src/57530896.htm" class="macro">setnilvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57606040.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>++));  <a  class="comments">/* clear new slots */</a>
  }
  else {
<a id=195></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57606040.htm" class="localvar">L</a>, -(idx+1) &lt;= (L-&gt;top.p - (func + 1)), &quot;invalid new top&quot;);
<a id=196></a>    <a href="../h_src/57605360.htm" class="localvar">diff</a> = <a href="../h_src/57605904.htm" class="localvar">idx</a> + 1;  <a  class="comments">/* will &quot;subtract&quot; index (as it is negative) */</a>
  }
<a id=198></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57606040.htm" class="localvar">L</a>, L-&gt;tbclist.p &lt; L-&gt;top.p, &quot;previous pop of an unclosed slot&quot;);
<a id=199></a>  <a href="../h_src/57605496.htm" class="localvar">newtop</a> = <a href="../h_src/57606040.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + <a href="../h_src/57605360.htm" class="localvar">diff</a>;
<a id=200></a>  if (<a href="../h_src/57605360.htm" class="localvar">diff</a> &lt; 0 &amp;&amp; <a href="../h_src/57606040.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642148.htm" class="variable">tbclist</a>.<a href="../h_src/57531984.htm" class="variable">p</a> &gt;= <a href="../h_src/57605496.htm" class="localvar">newtop</a>) {
<a id=201></a>    <a href="../h_src/57548848.htm" class="macro">lua_assert</a>(<a href="../h_src/57637524.htm" class="macro">hastocloseCfunc</a>(ci-&gt;nresults));
<a id=202></a>    <a href="../h_src/57605496.htm" class="localvar">newtop</a> = <a href="../h_src/57630384.htm" class="function">luaF_close</a>(<a href="../h_src/57606040.htm" class="localvar">L</a>, <a href="../h_src/57605496.htm" class="localvar">newtop</a>, <a href="../h_src/57631132.htm" class="macro">CLOSEKTOP</a>, 0);
  }
<a id=204></a>  <a href="../h_src/57606040.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> = <a href="../h_src/57605496.htm" class="localvar">newtop</a>;  <a  class="comments">/* correct top only after closing any upvalue */</a>
<a id=205></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=209></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57429768.htm" class="function">lua_closeslot</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57605224.htm" class="localvar">L</a>, int <a href="../h_src/57605088.htm" class="localvar">idx</a>) {
<a id=210></a>  <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57604952.htm" class="localvar">level</a>;
<a id=211></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=212></a>  <a href="../h_src/57604952.htm" class="localvar">level</a> = <a href="../h_src/57609100.htm" class="function">index2stack</a>(<a href="../h_src/57605224.htm" class="localvar">L</a>, <a href="../h_src/57605088.htm" class="localvar">idx</a>);
<a id=213></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57605224.htm" class="localvar">L</a>, <a href="../h_src/57637524.htm" class="macro">hastocloseCfunc</a>(L-&gt;ci-&gt;nresults) &amp;&amp; L-&gt;tbclist.p == level,
     &quot;no variable to close at given level&quot;);
<a id=215></a>  <a href="../h_src/57604952.htm" class="localvar">level</a> = <a href="../h_src/57630384.htm" class="function">luaF_close</a>(<a href="../h_src/57605224.htm" class="localvar">L</a>, <a href="../h_src/57604952.htm" class="localvar">level</a>, <a href="../h_src/57631132.htm" class="macro">CLOSEKTOP</a>, 0);
<a id=216></a>  <a href="../h_src/57530896.htm" class="macro">setnilvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57604952.htm" class="localvar">level</a>));
<a id=217></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=221></a><a  class="comments">/*</a>
<a id=222></a><a  class="comments">** Reverse the stack segment from 'from' to 'to'</a>
<a id=223></a><a  class="comments">** (auxiliary to 'lua_rotate')</a>
<a id=224></a><a  class="comments">** Note that we move(copy) only the value inside the stack.</a>
<a id=225></a><a  class="comments">** (We do not move additional fields that may exist.)</a>
<a id=226></a><a  class="comments">*/</a>
<a id=227></a><a href="../h_src/57545312.htm" class="macro">l_sinline</a> void <a href="../h_src/57604816.htm" class="function">reverse</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57604680.htm" class="localvar">L</a>, <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57604544.htm" class="localvar">from</a>, <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57604408.htm" class="localvar">to</a>) {
<a id=228></a>  for (; <a href="../h_src/57604544.htm" class="localvar">from</a> &lt; <a href="../h_src/57604408.htm" class="localvar">to</a>; <a href="../h_src/57604544.htm" class="localvar">from</a>++, <a href="../h_src/57604408.htm" class="localvar">to</a>--) {
<a id=229></a>    <a href="../h_src/57535384.htm" class="type">TValue</a> <a href="../h_src/57604272.htm" class="localvar">temp</a>;
<a id=230></a>    <a href="../h_src/57533684.htm" class="macro">setobj</a>(<a href="../h_src/57604680.htm" class="localvar">L</a>, &amp;<a href="../h_src/57604272.htm" class="localvar">temp</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57604544.htm" class="localvar">from</a>));
<a id=231></a>    <a href="../h_src/57533548.htm" class="macro">setobjs2s</a>(<a href="../h_src/57604680.htm" class="localvar">L</a>, <a href="../h_src/57604544.htm" class="localvar">from</a>, <a href="../h_src/57604408.htm" class="localvar">to</a>);
<a id=232></a>    <a href="../h_src/57533412.htm" class="macro">setobj2s</a>(<a href="../h_src/57604680.htm" class="localvar">L</a>, <a href="../h_src/57604408.htm" class="localvar">to</a>, &amp;<a href="../h_src/57604272.htm" class="localvar">temp</a>);
  }
}


<a id=237></a><a  class="comments">/*</a>
<a id=238></a><a  class="comments">** Let x = AB, where A is a prefix of length 'n'. Then,</a>
<a id=239></a><a  class="comments">** rotate x n == BA. But BA == (A^r . B^r)^r.</a>
<a id=240></a><a  class="comments">*/</a>
<a id=241></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57439152.htm" class="function">lua_rotate</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57603320.htm" class="localvar">L</a>, int <a href="../h_src/57603184.htm" class="localvar">idx</a>, int <a href="../h_src/57603048.htm" class="localvar">n</a>) {
<a id=242></a>  <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57602912.htm" class="localvar">p</a>, <a href="../h_src/57602776.htm" class="localvar">t</a>, <a href="../h_src/57602640.htm" class="localvar">m</a>;
<a id=243></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=244></a>  <a href="../h_src/57602776.htm" class="localvar">t</a> = <a href="../h_src/57603320.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1;  <a  class="comments">/* end of stack segment being rotated */</a>
<a id=245></a>  <a href="../h_src/57602912.htm" class="localvar">p</a> = <a href="../h_src/57609100.htm" class="function">index2stack</a>(<a href="../h_src/57603320.htm" class="localvar">L</a>, <a href="../h_src/57603184.htm" class="localvar">idx</a>);  <a  class="comments">/* start of segment */</a>
<a id=246></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57603320.htm" class="localvar">L</a>, (n &gt;= 0 ? n : -n) &lt;= (t - p + 1), &quot;invalid 'n'&quot;);
<a id=247></a>  <a href="../h_src/57602640.htm" class="localvar">m</a> = (<a href="../h_src/57603048.htm" class="localvar">n</a> &gt;= 0 ? <a href="../h_src/57602776.htm" class="localvar">t</a> - <a href="../h_src/57603048.htm" class="localvar">n</a> : <a href="../h_src/57602912.htm" class="localvar">p</a> - <a href="../h_src/57603048.htm" class="localvar">n</a> - 1);  <a  class="comments">/* end of prefix */</a>
<a id=248></a>  <a href="../h_src/57604816.htm" class="function">reverse</a>(<a href="../h_src/57603320.htm" class="localvar">L</a>, <a href="../h_src/57602912.htm" class="localvar">p</a>, <a href="../h_src/57602640.htm" class="localvar">m</a>);  <a  class="comments">/* reverse the prefix with length 'n' */</a>
<a id=249></a>  <a href="../h_src/57604816.htm" class="function">reverse</a>(<a href="../h_src/57603320.htm" class="localvar">L</a>, <a href="../h_src/57602640.htm" class="localvar">m</a> + 1, <a href="../h_src/57602776.htm" class="localvar">t</a>);  <a  class="comments">/* reverse the suffix */</a>
<a id=250></a>  <a href="../h_src/57604816.htm" class="function">reverse</a>(<a href="../h_src/57603320.htm" class="localvar">L</a>, <a href="../h_src/57602912.htm" class="localvar">p</a>, <a href="../h_src/57602776.htm" class="localvar">t</a>);  <a  class="comments">/* reverse the entire segment */</a>
<a id=251></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=255></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57439084.htm" class="function">lua_copy</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57602504.htm" class="localvar">L</a>, int <a href="../h_src/57602368.htm" class="localvar">fromidx</a>, int <a href="../h_src/57602232.htm" class="localvar">toidx</a>) {
<a id=256></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57602096.htm" class="localvar">fr</a>, *<a href="../h_src/57601960.htm" class="localvar">to</a>;
<a id=257></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=258></a>  <a href="../h_src/57602096.htm" class="localvar">fr</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57602504.htm" class="localvar">L</a>, <a href="../h_src/57602368.htm" class="localvar">fromidx</a>);
<a id=259></a>  <a href="../h_src/57601960.htm" class="localvar">to</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57602504.htm" class="localvar">L</a>, <a href="../h_src/57602232.htm" class="localvar">toidx</a>);
<a id=260></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57602504.htm" class="localvar">L</a>, <a href="../h_src/57610460.htm" class="macro">isvalid</a>(L, to), &quot;invalid index&quot;);
<a id=261></a>  <a href="../h_src/57533684.htm" class="macro">setobj</a>(<a href="../h_src/57602504.htm" class="localvar">L</a>, <a href="../h_src/57601960.htm" class="localvar">to</a>, <a href="../h_src/57602096.htm" class="localvar">fr</a>);
<a id=262></a>  if (<a href="../h_src/57610188.htm" class="macro">isupvalue</a>(<a href="../h_src/57602232.htm" class="localvar">toidx</a>))  <a  class="comments">/* function upvalue? */</a>
<a id=263></a>    <a href="../h_src/57621340.htm" class="macro">luaC_barrier</a>(<a href="../h_src/57602504.htm" class="localvar">L</a>, <a href="../h_src/57511992.htm" class="macro">clCvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57602504.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>-&gt;<a href="../h_src/57651532.htm" class="variable">func</a>.<a href="../h_src/57531984.htm" class="variable">p</a>)), <a href="../h_src/57602096.htm" class="localvar">fr</a>);
<a id=264></a>  <a  class="comments">/* LUA_REGISTRYINDEX does not need gc barrier</a>
<a id=265></a><a  class="comments">     (collector revisits it before finishing collection) */</a>
<a id=266></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=270></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57439220.htm" class="function">lua_pushvalue</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57601552.htm" class="localvar">L</a>, int <a href="../h_src/57601416.htm" class="localvar">idx</a>) {
<a id=271></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=272></a>  <a href="../h_src/57533412.htm" class="macro">setobj2s</a>(<a href="../h_src/57601552.htm" class="localvar">L</a>, <a href="../h_src/57601552.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57601552.htm" class="localvar">L</a>, <a href="../h_src/57601416.htm" class="localvar">idx</a>));
<a id=273></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57601552.htm" class="localvar">L</a>);
<a id=274></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}



<a id=279></a><a  class="comments">/*</a>
<a id=280></a><a  class="comments">** access functions (stack -&gt; C)</a>
<a id=281></a><a  class="comments">*/</a>


<a id=284></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57438540.htm" class="function">lua_type</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57601008.htm" class="localvar">L</a>, int <a href="../h_src/57600872.htm" class="localvar">idx</a>) {
<a id=285></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57600736.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57601008.htm" class="localvar">L</a>, <a href="../h_src/57600872.htm" class="localvar">idx</a>);
<a id=286></a>  return (<a href="../h_src/57610460.htm" class="macro">isvalid</a>(<a href="../h_src/57601008.htm" class="localvar">L</a>, <a href="../h_src/57600736.htm" class="localvar">o</a>) ? <a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57600736.htm" class="localvar">o</a>) : <a href="../h_src/57444184.htm" class="macro">LUA_TNONE</a>);
}


<a id=290></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> const char *<a href="../h_src/57438472.htm" class="function">lua_typename</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57600600.htm" class="localvar">L</a>, int <a href="../h_src/57600464.htm" class="localvar">t</a>) {
<a id=291></a>  <a href="../h_src/57547896.htm" class="macro">UNUSED</a>(<a href="../h_src/57600600.htm" class="localvar">L</a>);
<a id=292></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57600600.htm" class="localvar">L</a>, <a href="../h_src/57444184.htm" class="macro">LUA_TNONE</a> &lt;= t &amp;&amp; t &lt; <a href="../h_src/57442824.htm" class="macro">LUA_NUMTYPES</a>, &quot;invalid type&quot;);
<a id=293></a>  return <a href="../h_src/57498392.htm" class="macro">ttypename</a>(<a href="../h_src/57600464.htm" class="localvar">t</a>);
}


<a id=297></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57438744.htm" class="function">lua_iscfunction</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57600328.htm" class="localvar">L</a>, int <a href="../h_src/57600192.htm" class="localvar">idx</a>) {
<a id=298></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57600056.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57600328.htm" class="localvar">L</a>, <a href="../h_src/57600192.htm" class="localvar">idx</a>);
<a id=299></a>  return (<a href="../h_src/57512944.htm" class="macro">ttislcf</a>(<a href="../h_src/57600056.htm" class="localvar">o</a>) || (<a href="../h_src/57512808.htm" class="macro">ttisCclosure</a>(<a href="../h_src/57600056.htm" class="localvar">o</a>)));
}


<a id=303></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57438676.htm" class="function">lua_isinteger</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57599920.htm" class="localvar">L</a>, int <a href="../h_src/57599784.htm" class="localvar">idx</a>) {
<a id=304></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57599648.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57599920.htm" class="localvar">L</a>, <a href="../h_src/57599784.htm" class="localvar">idx</a>);
<a id=305></a>  return <a href="../h_src/57526544.htm" class="macro">ttisinteger</a>(<a href="../h_src/57599648.htm" class="localvar">o</a>);
}


<a id=309></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57438880.htm" class="function">lua_isnumber</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57599512.htm" class="localvar">L</a>, int <a href="../h_src/57599376.htm" class="localvar">idx</a>) {
<a id=310></a>  <a href="../h_src/57442144.htm" class="type">lua_Number</a> <a href="../h_src/57599240.htm" class="localvar">n</a>;
<a id=311></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57599104.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57599512.htm" class="localvar">L</a>, <a href="../h_src/57599376.htm" class="localvar">idx</a>);
<a id=312></a>  return <a href="../h_src/57613112.htm" class="macro">tonumber</a>(<a href="../h_src/57599104.htm" class="localvar">o</a>, &amp;<a href="../h_src/57599240.htm" class="localvar">n</a>);
}


<a id=316></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57438812.htm" class="function">lua_isstring</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57598968.htm" class="localvar">L</a>, int <a href="../h_src/57598832.htm" class="localvar">idx</a>) {
<a id=317></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57598696.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57598968.htm" class="localvar">L</a>, <a href="../h_src/57598832.htm" class="localvar">idx</a>);
<a id=318></a>  return (<a href="../h_src/57524912.htm" class="macro">ttisstring</a>(<a href="../h_src/57598696.htm" class="localvar">o</a>) || <a href="../h_src/57614200.htm" class="macro">cvt2str</a>(<a href="../h_src/57598696.htm" class="localvar">o</a>));
}


<a id=322></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57438608.htm" class="function">lua_isuserdata</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57598560.htm" class="localvar">L</a>, int <a href="../h_src/57598424.htm" class="localvar">idx</a>) {
<a id=323></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57598288.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57598560.htm" class="localvar">L</a>, <a href="../h_src/57598424.htm" class="localvar">idx</a>);
<a id=324></a>  return (<a href="../h_src/57521716.htm" class="macro">ttisfulluserdata</a>(<a href="../h_src/57598288.htm" class="localvar">o</a>) || <a href="../h_src/57521852.htm" class="macro">ttislightuserdata</a>(<a href="../h_src/57598288.htm" class="localvar">o</a>));
}


<a id=328></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57435412.htm" class="function">lua_rawequal</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57598152.htm" class="localvar">L</a>, int <a href="../h_src/57598016.htm" class="localvar">index1</a>, int <a href="../h_src/57597880.htm" class="localvar">index2</a>) {
<a id=329></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57597744.htm" class="localvar">o1</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57598152.htm" class="localvar">L</a>, <a href="../h_src/57598016.htm" class="localvar">index1</a>);
<a id=330></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57597608.htm" class="localvar">o2</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57598152.htm" class="localvar">L</a>, <a href="../h_src/57597880.htm" class="localvar">index2</a>);
<a id=331></a>  return (<a href="../h_src/57610460.htm" class="macro">isvalid</a>(<a href="../h_src/57598152.htm" class="localvar">L</a>, <a href="../h_src/57597744.htm" class="localvar">o1</a>) &amp;&amp; <a href="../h_src/57610460.htm" class="macro">isvalid</a>(<a href="../h_src/57598152.htm" class="localvar">L</a>, <a href="../h_src/57597608.htm" class="localvar">o2</a>)) ? <a href="../h_src/57612432.htm" class="macro">luaV_rawequalobj</a>(<a href="../h_src/57597744.htm" class="localvar">o1</a>, <a href="../h_src/57597608.htm" class="localvar">o2</a>) : 0;
}


<a id=335></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57435888.htm" class="function">lua_arith</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57597472.htm" class="localvar">L</a>, int <a href="../h_src/57597336.htm" class="localvar">op</a>) {
<a id=336></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=337></a>  if (<a href="../h_src/57597336.htm" class="localvar">op</a> != <a href="../h_src/57436160.htm" class="macro">LUA_OPUNM</a> &amp;&amp; <a href="../h_src/57597336.htm" class="localvar">op</a> != <a href="../h_src/57436024.htm" class="macro">LUA_OPBNOT</a>)
<a id=338></a>    <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57597472.htm" class="localvar">L</a>, 2);  <a  class="comments">/* all other operations expect two operands */</a>
<a id=339></a>  else {  <a  class="comments">/* for unary operations, add fake 2nd operand */</a>
<a id=340></a>    <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57597472.htm" class="localvar">L</a>, 1);
<a id=341></a>    <a href="../h_src/57533548.htm" class="macro">setobjs2s</a>(<a href="../h_src/57597472.htm" class="localvar">L</a>, <a href="../h_src/57597472.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57597472.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1);
<a id=342></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57597472.htm" class="localvar">L</a>);
  }
<a id=344></a>  <a  class="comments">/* first operand at top - 2, second at top - 1; result go to top - 2 */</a>
<a id=345></a>  <a href="../h_src/57501724.htm" class="function">luaO_arith</a>(<a href="../h_src/57597472.htm" class="localvar">L</a>, <a href="../h_src/57597336.htm" class="localvar">op</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57597472.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 2), <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57597472.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1), <a href="../h_src/57597472.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 2);
<a id=346></a>  <a href="../h_src/57597472.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>--;  <a  class="comments">/* remove second operand */</a>
<a id=347></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=351></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57435344.htm" class="function">lua_compare</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57596928.htm" class="localvar">L</a>, int <a href="../h_src/57596792.htm" class="localvar">index1</a>, int <a href="../h_src/57596656.htm" class="localvar">index2</a>, int <a href="../h_src/57596520.htm" class="localvar">op</a>) {
<a id=352></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57596384.htm" class="localvar">o1</a>;
<a id=353></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57596248.htm" class="localvar">o2</a>;
<a id=354></a>  int <a href="../h_src/57596112.htm" class="localvar">i</a> = 0;
<a id=355></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);  <a  class="comments">/* may call tag method */</a>
<a id=356></a>  <a href="../h_src/57596384.htm" class="localvar">o1</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57596928.htm" class="localvar">L</a>, <a href="../h_src/57596792.htm" class="localvar">index1</a>);
<a id=357></a>  <a href="../h_src/57596248.htm" class="localvar">o2</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57596928.htm" class="localvar">L</a>, <a href="../h_src/57596656.htm" class="localvar">index2</a>);
<a id=358></a>  if (<a href="../h_src/57610460.htm" class="macro">isvalid</a>(<a href="../h_src/57596928.htm" class="localvar">L</a>, <a href="../h_src/57596384.htm" class="localvar">o1</a>) &amp;&amp; <a href="../h_src/57610460.htm" class="macro">isvalid</a>(<a href="../h_src/57596928.htm" class="localvar">L</a>, <a href="../h_src/57596248.htm" class="localvar">o2</a>)) {
<a id=359></a>    switch (<a href="../h_src/57596520.htm" class="localvar">op</a>) {
<a id=360></a>      case <a href="../h_src/57435820.htm" class="macro">LUA_OPEQ</a>: <a href="../h_src/57596112.htm" class="localvar">i</a> = <a href="../h_src/57611752.htm" class="function">luaV_equalobj</a>(<a href="../h_src/57596928.htm" class="localvar">L</a>, <a href="../h_src/57596384.htm" class="localvar">o1</a>, <a href="../h_src/57596248.htm" class="localvar">o2</a>); break;
<a id=361></a>      case <a href="../h_src/57435684.htm" class="macro">LUA_OPLT</a>: <a href="../h_src/57596112.htm" class="localvar">i</a> = <a href="../h_src/57611684.htm" class="function">luaV_lessthan</a>(<a href="../h_src/57596928.htm" class="localvar">L</a>, <a href="../h_src/57596384.htm" class="localvar">o1</a>, <a href="../h_src/57596248.htm" class="localvar">o2</a>); break;
<a id=362></a>      case <a href="../h_src/57435548.htm" class="macro">LUA_OPLE</a>: <a href="../h_src/57596112.htm" class="localvar">i</a> = <a href="../h_src/57611616.htm" class="function">luaV_lessequal</a>(<a href="../h_src/57596928.htm" class="localvar">L</a>, <a href="../h_src/57596384.htm" class="localvar">o1</a>, <a href="../h_src/57596248.htm" class="localvar">o2</a>); break;
<a id=363></a>      default: <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57596928.htm" class="localvar">L</a>, 0, &quot;invalid option&quot;);
    }
  }
<a id=366></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=367></a>  return <a href="../h_src/57596112.htm" class="localvar">i</a>;
}


<a id=371></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/57430108.htm" class="function">lua_stringtonumber</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57595976.htm" class="localvar">L</a>, const char *<a href="../h_src/57595840.htm" class="localvar">s</a>) {
<a id=372></a>  <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/57595704.htm" class="localvar">sz</a> = <a href="../h_src/57501656.htm" class="function">luaO_str2num</a>(<a href="../h_src/57595840.htm" class="localvar">s</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57595976.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>));
<a id=373></a>  if (<a href="../h_src/57595704.htm" class="localvar">sz</a> != 0)
<a id=374></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57595976.htm" class="localvar">L</a>);
<a id=375></a>  return <a href="../h_src/57595704.htm" class="localvar">sz</a>;
}


<a id=379></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> <a href="../h_src/57442144.htm" class="type">lua_Number</a> <a href="../h_src/57438404.htm" class="function">lua_tonumberx</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57595568.htm" class="localvar">L</a>, int <a href="../h_src/57595432.htm" class="localvar">idx</a>, int *<a href="../h_src/57595296.htm" class="localvar">pisnum</a>) {
<a id=380></a>  <a href="../h_src/57442144.htm" class="type">lua_Number</a> <a href="../h_src/57595160.htm" class="localvar">n</a> = 0;
<a id=381></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57595024.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57595568.htm" class="localvar">L</a>, <a href="../h_src/57595432.htm" class="localvar">idx</a>);
<a id=382></a>  int <a href="../h_src/57594888.htm" class="localvar">isnum</a> = <a href="../h_src/57613112.htm" class="macro">tonumber</a>(<a href="../h_src/57595024.htm" class="localvar">o</a>, &amp;<a href="../h_src/57595160.htm" class="localvar">n</a>);
<a id=383></a>  if (<a href="../h_src/57595296.htm" class="localvar">pisnum</a>)
<a id=384></a>    *<a href="../h_src/57595296.htm" class="localvar">pisnum</a> = <a href="../h_src/57594888.htm" class="localvar">isnum</a>;
<a id=385></a>  return <a href="../h_src/57595160.htm" class="localvar">n</a>;
}


<a id=389></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> <a href="../h_src/57442076.htm" class="type">lua_Integer</a> <a href="../h_src/57438336.htm" class="function">lua_tointegerx</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57594752.htm" class="localvar">L</a>, int <a href="../h_src/57594616.htm" class="localvar">idx</a>, int *<a href="../h_src/57594480.htm" class="localvar">pisnum</a>) {
<a id=390></a>  <a href="../h_src/57442076.htm" class="type">lua_Integer</a> <a href="../h_src/57594344.htm" class="localvar">res</a> = 0;
<a id=391></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57594208.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57594752.htm" class="localvar">L</a>, <a href="../h_src/57594616.htm" class="localvar">idx</a>);
<a id=392></a>  int <a href="../h_src/57594004.htm" class="localvar">isnum</a> = <a href="../h_src/57612840.htm" class="macro">tointeger</a>(<a href="../h_src/57594208.htm" class="localvar">o</a>, &amp;<a href="../h_src/57594344.htm" class="localvar">res</a>);
<a id=393></a>  if (<a href="../h_src/57594480.htm" class="localvar">pisnum</a>)
<a id=394></a>    *<a href="../h_src/57594480.htm" class="localvar">pisnum</a> = <a href="../h_src/57594004.htm" class="localvar">isnum</a>;
<a id=395></a>  return <a href="../h_src/57594344.htm" class="localvar">res</a>;
}


<a id=399></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57438268.htm" class="function">lua_toboolean</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57593868.htm" class="localvar">L</a>, int <a href="../h_src/57593732.htm" class="localvar">idx</a>) {
<a id=400></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57593596.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57593868.htm" class="localvar">L</a>, <a href="../h_src/57593732.htm" class="localvar">idx</a>);
<a id=401></a>  return !<a href="../h_src/57529400.htm" class="macro">l_isfalse</a>(<a href="../h_src/57593596.htm" class="localvar">o</a>);
}


<a id=405></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> const char *<a href="../h_src/57438200.htm" class="function">lua_tolstring</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57593460.htm" class="localvar">L</a>, int <a href="../h_src/57593324.htm" class="localvar">idx</a>, <a href="../h_aa/57441192.htm" class="type">size_t</a> *<a href="../h_src/57593188.htm" class="localvar">len</a>) {
<a id=406></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57593052.htm" class="localvar">o</a>;
<a id=407></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=408></a>  <a href="../h_src/57593052.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57593460.htm" class="localvar">L</a>, <a href="../h_src/57593324.htm" class="localvar">idx</a>);
<a id=409></a>  if (!<a href="../h_src/57524912.htm" class="macro">ttisstring</a>(<a href="../h_src/57593052.htm" class="localvar">o</a>)) {
<a id=410></a>    if (!<a href="../h_src/57614200.htm" class="macro">cvt2str</a>(<a href="../h_src/57593052.htm" class="localvar">o</a>)) {  <a  class="comments">/* not convertible? */</a>
<a id=411></a>      if (<a href="../h_src/57593188.htm" class="localvar">len</a> != NULL) *<a href="../h_src/57593188.htm" class="localvar">len</a> = 0;
<a id=412></a>      <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
      return NULL;
    }
<a id=415></a>    <a href="../h_src/57501520.htm" class="function">luaO_tostring</a>(<a href="../h_src/57593460.htm" class="localvar">L</a>, <a href="../h_src/57593052.htm" class="localvar">o</a>);
<a id=416></a>    <a href="../h_src/57621612.htm" class="macro">luaC_checkGC</a>(<a href="../h_src/57593460.htm" class="localvar">L</a>);
<a id=417></a>    <a href="../h_src/57593052.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57593460.htm" class="localvar">L</a>, <a href="../h_src/57593324.htm" class="localvar">idx</a>);  <a  class="comments">/* previous call may reallocate the stack */</a>
  }
<a id=419></a>  if (<a href="../h_src/57593188.htm" class="localvar">len</a> != NULL)
<a id=420></a>    *<a href="../h_src/57593188.htm" class="localvar">len</a> = <a href="../h_src/57522260.htm" class="macro">vslen</a>(<a href="../h_src/57593052.htm" class="localvar">o</a>);
<a id=421></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=422></a>  return <a href="../h_src/57522532.htm" class="macro">svalue</a>(<a href="../h_src/57593052.htm" class="localvar">o</a>);
}


<a id=426></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> <a href="../h_src/57438132.htm" class="function">lua_Unsigned</a> <a href="../h_src/57592916.htm" class="function">lua_rawlen</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57592848.htm" class="localvar">L</a>, int <a href="../h_src/57592712.htm" class="localvar">idx</a>) {
<a id=427></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57592576.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57592848.htm" class="localvar">L</a>, <a href="../h_src/57592712.htm" class="localvar">idx</a>);
<a id=428></a>  switch (<a href="../h_src/57534636.htm" class="macro">ttypetag</a>(<a href="../h_src/57592576.htm" class="localvar">o</a>)) {
<a id=429></a>    case <a href="../h_src/57525184.htm" class="macro">LUA_VSHRSTR</a>: return <a href="../h_src/57524368.htm" class="macro">tsvalue</a>(<a href="../h_src/57592576.htm" class="localvar">o</a>)-&gt;<a href="../h_src/57523416.htm" class="variable">shrlen</a>;
<a id=430></a>    case <a href="../h_src/57525048.htm" class="macro">LUA_VLNGSTR</a>: return <a href="../h_src/57524368.htm" class="macro">tsvalue</a>(<a href="../h_src/57592576.htm" class="localvar">o</a>)-&gt;<a href="../h_src/57522872.htm" class="variable">u</a>.<a href="../h_src/57523212.htm" class="variable">lnglen</a>;
<a id=431></a>    case <a href="../h_src/57521988.htm" class="macro">LUA_VUSERDATA</a>: return <a href="../h_src/57521444.htm" class="macro">uvalue</a>(<a href="../h_src/57592576.htm" class="localvar">o</a>)-&gt;<a href="../h_src/57519880.htm" class="variable">len</a>;
<a id=432></a>    case <a href="../h_src/57507436.htm" class="macro">LUA_VTABLE</a>: return <a href="../h_src/57592440.htm" class="function">luaH_getn</a>(<a href="../h_src/57507164.htm" class="macro">hvalue</a>(<a href="../h_src/57592576.htm" class="localvar">o</a>));
    default: return 0;
  }
}


<a id=438></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> <a href="../h_src/57441736.htm" class="type">lua_CFunction</a> <a href="../h_src/57438064.htm" class="function">lua_tocfunction</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57592372.htm" class="localvar">L</a>, int <a href="../h_src/57592236.htm" class="localvar">idx</a>) {
<a id=439></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57592100.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57592372.htm" class="localvar">L</a>, <a href="../h_src/57592236.htm" class="localvar">idx</a>);
<a id=440></a>  if (<a href="../h_src/57512944.htm" class="macro">ttislcf</a>(<a href="../h_src/57592100.htm" class="localvar">o</a>)) return <a href="../h_src/57512128.htm" class="macro">fvalue</a>(<a href="../h_src/57592100.htm" class="localvar">o</a>);
<a id=441></a>  else if (<a href="../h_src/57512808.htm" class="macro">ttisCclosure</a>(<a href="../h_src/57592100.htm" class="localvar">o</a>))
<a id=442></a>    return <a href="../h_src/57511992.htm" class="macro">clCvalue</a>(<a href="../h_src/57592100.htm" class="localvar">o</a>)-&gt;<a href="../h_src/57508932.htm" class="variable">f</a>;
<a id=443></a>  else return NULL;  <a  class="comments">/* not a C function */</a>
}


<a id=447></a><a href="../h_src/57545312.htm" class="macro">l_sinline</a> void *<a href="../h_src/57591896.htm" class="function">touserdata</a> (const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57591760.htm" class="localvar">o</a>) {
<a id=448></a>  switch (<a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57591760.htm" class="localvar">o</a>)) {
<a id=449></a>    case <a href="../h_src/57443096.htm" class="macro">LUA_TUSERDATA</a>: return <a href="../h_src/57517908.htm" class="macro">getudatamem</a>(<a href="../h_src/57521444.htm" class="macro">uvalue</a>(<a href="../h_src/57591760.htm" class="localvar">o</a>));
<a id=450></a>    case <a href="../h_src/57443776.htm" class="macro">LUA_TLIGHTUSERDATA</a>: return <a href="../h_src/57521580.htm" class="macro">pvalue</a>(<a href="../h_src/57591760.htm" class="localvar">o</a>);
    default: return NULL;
  }
}


<a id=456></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void *<a href="../h_src/57437996.htm" class="function">lua_touserdata</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57591624.htm" class="localvar">L</a>, int <a href="../h_src/57591488.htm" class="localvar">idx</a>) {
<a id=457></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57591352.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57591624.htm" class="localvar">L</a>, <a href="../h_src/57591488.htm" class="localvar">idx</a>);
<a id=458></a>  return <a href="../h_src/57591896.htm" class="function">touserdata</a>(<a href="../h_src/57591352.htm" class="localvar">o</a>);
}


<a id=462></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57437928.htm" class="function">lua_tothread</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57591216.htm" class="localvar">L</a>, int <a href="../h_src/57591080.htm" class="localvar">idx</a>) {
<a id=463></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57590944.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57591216.htm" class="localvar">L</a>, <a href="../h_src/57591080.htm" class="localvar">idx</a>);
<a id=464></a>  return (!<a href="../h_src/57528856.htm" class="macro">ttisthread</a>(<a href="../h_src/57590944.htm" class="localvar">o</a>)) ? NULL : <a href="../h_src/57528720.htm" class="macro">thvalue</a>(<a href="../h_src/57590944.htm" class="localvar">o</a>);
}


<a id=468></a><a  class="comments">/*</a>
<a id=469></a><a  class="comments">** Returns a pointer to the internal representation of an object.</a>
<a id=470></a><a  class="comments">** Note that ANSI C does not allow the conversion of a pointer to</a>
<a id=471></a><a  class="comments">** function to a 'void*', so the conversion here goes through</a>
<a id=472></a><a  class="comments">** a 'size_t'. (As the returned pointer is only informative, this</a>
<a id=473></a><a  class="comments">** conversion should not be a problem.)</a>
<a id=474></a><a  class="comments">*/</a>
<a id=475></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> const void *<a href="../h_src/57437860.htm" class="function">lua_topointer</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57590808.htm" class="localvar">L</a>, int <a href="../h_src/57590672.htm" class="localvar">idx</a>) {
<a id=476></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57590536.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57590808.htm" class="localvar">L</a>, <a href="../h_src/57590672.htm" class="localvar">idx</a>);
<a id=477></a>  switch (<a href="../h_src/57534636.htm" class="macro">ttypetag</a>(<a href="../h_src/57590536.htm" class="localvar">o</a>)) {
<a id=478></a>    case <a href="../h_src/57513488.htm" class="macro">LUA_VLCF</a>: return <a href="../h_src/57547488.htm" class="macro">cast_voidp</a>(<a href="../h_src/57546400.htm" class="macro">cast_sizet</a>(<a href="../h_src/57512128.htm" class="macro">fvalue</a>(<a href="../h_src/57590536.htm" class="localvar">o</a>)));
<a id=479></a>    case <a href="../h_src/57521988.htm" class="macro">LUA_VUSERDATA</a>: case <a href="../h_src/57522124.htm" class="macro">LUA_VLIGHTUSERDATA</a>:
<a id=480></a>      return <a href="../h_src/57591896.htm" class="function">touserdata</a>(<a href="../h_src/57590536.htm" class="localvar">o</a>);
    default: {
<a id=482></a>      if (<a href="../h_src/57527768.htm" class="macro">iscollectable</a>(<a href="../h_src/57590536.htm" class="localvar">o</a>))
<a id=483></a>        return <a href="../h_src/57527496.htm" class="macro">gcvalue</a>(<a href="../h_src/57590536.htm" class="localvar">o</a>);
      else
        return NULL;
    }
  }
}



<a id=492></a><a  class="comments">/*</a>
<a id=493></a><a  class="comments">** push functions (C -&gt; stack)</a>
<a id=494></a><a  class="comments">*/</a>


<a id=497></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57435276.htm" class="function">lua_pushnil</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57590332.htm" class="localvar">L</a>) {
<a id=498></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=499></a>  <a href="../h_src/57530896.htm" class="macro">setnilvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57590332.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>));
<a id=500></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57590332.htm" class="localvar">L</a>);
<a id=501></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=505></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57435208.htm" class="function">lua_pushnumber</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57590196.htm" class="localvar">L</a>, <a href="../h_src/57442144.htm" class="type">lua_Number</a> <a href="../h_src/57590060.htm" class="localvar">n</a>) {
<a id=506></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=507></a>  <a href="../h_src/57525728.htm" class="macro">setfltvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57590196.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>), <a href="../h_src/57535996.htm" class="variable">n</a>);
<a id=508></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57590196.htm" class="localvar">L</a>);
<a id=509></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=513></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57435140.htm" class="function">lua_pushinteger</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57589788.htm" class="localvar">L</a>, <a href="../h_src/57442076.htm" class="type">lua_Integer</a> <a href="../h_src/57589652.htm" class="localvar">n</a>) {
<a id=514></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=515></a>  <a href="../h_src/57525456.htm" class="macro">setivalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57589788.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>), <a href="../h_src/57589652.htm" class="localvar">n</a>);
<a id=516></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57589788.htm" class="localvar">L</a>);
<a id=517></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=521></a><a  class="comments">/*</a>
<a id=522></a><a  class="comments">** Pushes on the stack a string with given length. Avoid using 's' when</a>
<a id=523></a><a  class="comments">** 'len' == 0 (as 's' can be NULL in that case), due to later use of</a>
<a id=524></a><a  class="comments">** 'memcmp' and 'memcpy'.</a>
<a id=525></a><a  class="comments">*/</a>
<a id=526></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> const char *<a href="../h_src/57435072.htm" class="function">lua_pushlstring</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57589380.htm" class="localvar">L</a>, const char *<a href="../h_src/57589244.htm" class="localvar">s</a>, <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/57589108.htm" class="localvar">len</a>) {
<a id=527></a>  <a href="../h_src/57522736.htm" class="type">TString</a> *<a href="../h_src/57588972.htm" class="localvar">ts</a>;
<a id=528></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=529></a>  <a href="../h_src/57588972.htm" class="localvar">ts</a> = (<a href="../h_src/57589108.htm" class="localvar">len</a> == 0) ? <a href="../h_src/57618484.htm" class="function">luaS_new</a>(<a href="../h_src/57589380.htm" class="localvar">L</a>, &quot;&quot;) : <a href="../h_src/57618552.htm" class="function">luaS_newlstr</a>(<a href="../h_src/57589380.htm" class="localvar">L</a>, <a href="../h_src/57589244.htm" class="localvar">s</a>, <a href="../h_src/57589108.htm" class="localvar">len</a>);
<a id=530></a>  <a href="../h_src/57524096.htm" class="macro">setsvalue2s</a>(<a href="../h_src/57589380.htm" class="localvar">L</a>, <a href="../h_src/57589380.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57588972.htm" class="localvar">ts</a>);
<a id=531></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57589380.htm" class="localvar">L</a>);
<a id=532></a>  <a href="../h_src/57621612.htm" class="macro">luaC_checkGC</a>(<a href="../h_src/57589380.htm" class="localvar">L</a>);
<a id=533></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=534></a>  return <a href="../h_src/57522668.htm" class="macro">getstr</a>(<a href="../h_src/57588972.htm" class="localvar">ts</a>);
}


<a id=538></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> const char *<a href="../h_src/57435004.htm" class="function">lua_pushstring</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57588564.htm" class="localvar">L</a>, const char *<a href="../h_src/57588428.htm" class="localvar">s</a>) {
<a id=539></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=540></a>  if (<a href="../h_src/57588428.htm" class="localvar">s</a> == NULL)
<a id=541></a>    <a href="../h_src/57530896.htm" class="macro">setnilvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57588564.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>));
  else {
<a id=543></a>    <a href="../h_src/57522736.htm" class="type">TString</a> *<a href="../h_src/57588292.htm" class="localvar">ts</a>;
<a id=544></a>    <a href="../h_src/57588292.htm" class="localvar">ts</a> = <a href="../h_src/57618484.htm" class="function">luaS_new</a>(<a href="../h_src/57588564.htm" class="localvar">L</a>, <a href="../h_src/57588428.htm" class="localvar">s</a>);
<a id=545></a>    <a href="../h_src/57524096.htm" class="macro">setsvalue2s</a>(<a href="../h_src/57588564.htm" class="localvar">L</a>, <a href="../h_src/57588564.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57588292.htm" class="localvar">ts</a>);
<a id=546></a>    <a href="../h_src/57588428.htm" class="localvar">s</a> = <a href="../h_src/57522668.htm" class="macro">getstr</a>(<a href="../h_src/57588292.htm" class="localvar">ts</a>);  <a  class="comments">/* internal copy's address */</a>
  }
<a id=548></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57588564.htm" class="localvar">L</a>);
<a id=549></a>  <a href="../h_src/57621612.htm" class="macro">luaC_checkGC</a>(<a href="../h_src/57588564.htm" class="localvar">L</a>);
<a id=550></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=551></a>  return <a href="../h_src/57588428.htm" class="localvar">s</a>;
}


<a id=555></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> const char *<a href="../h_src/57434936.htm" class="function">lua_pushvfstring</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57587884.htm" class="localvar">L</a>, const char *<a href="../h_src/57587748.htm" class="localvar">fmt</a>,
<a id=556></a>                                      <a href="../h_aa/57434868.htm" class="type">va_list</a> <a href="../h_src/57587612.htm" class="localvar">argp</a>) {
<a id=557></a>  const char *<a href="../h_src/57587476.htm" class="localvar">ret</a>;
<a id=558></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=559></a>  <a href="../h_src/57587476.htm" class="localvar">ret</a> = <a href="../h_src/57501452.htm" class="function">luaO_pushvfstring</a>(<a href="../h_src/57587884.htm" class="localvar">L</a>, <a href="../h_src/57587748.htm" class="localvar">fmt</a>, <a href="../h_src/57587612.htm" class="localvar">argp</a>);
<a id=560></a>  <a href="../h_src/57621612.htm" class="macro">luaC_checkGC</a>(<a href="../h_src/57587884.htm" class="localvar">L</a>);
<a id=561></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=562></a>  return <a href="../h_src/57587476.htm" class="localvar">ret</a>;
}


<a id=566></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> const char *<a href="../h_src/57434732.htm" class="function">lua_pushfstring</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57587340.htm" class="localvar">L</a>, const char *<a href="../h_src/57587204.htm" class="localvar">fmt</a>, <a href="../h_src/57587068.htm" class="localvar">...</a>) {
<a id=567></a>  const char *<a href="../h_src/57586932.htm" class="localvar">ret</a>;
<a id=568></a>  <a href="../h_aa/57434868.htm" class="type">va_list</a> <a href="../h_src/57586796.htm" class="localvar">argp</a>;
<a id=569></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=570></a>  va_start(<a href="../h_src/57586796.htm" class="localvar">argp</a>, <a href="../h_src/57587204.htm" class="localvar">fmt</a>);
<a id=571></a>  <a href="../h_src/57586932.htm" class="localvar">ret</a> = <a href="../h_src/57501452.htm" class="function">luaO_pushvfstring</a>(<a href="../h_src/57587340.htm" class="localvar">L</a>, <a href="../h_src/57587204.htm" class="localvar">fmt</a>, <a href="../h_src/57586796.htm" class="localvar">argp</a>);
<a id=572></a>  va_end(<a href="../h_src/57586796.htm" class="localvar">argp</a>);
<a id=573></a>  <a href="../h_src/57621612.htm" class="macro">luaC_checkGC</a>(<a href="../h_src/57587340.htm" class="localvar">L</a>);
<a id=574></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=575></a>  return <a href="../h_src/57586932.htm" class="localvar">ret</a>;
}


<a id=579></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57434664.htm" class="function">lua_pushcclosure</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57586524.htm" class="localvar">L</a>, <a href="../h_src/57441736.htm" class="type">lua_CFunction</a> <a href="../h_src/57586388.htm" class="localvar">fn</a>, int <a href="../h_src/57586252.htm" class="localvar">n</a>) {
<a id=580></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=581></a>  if (<a href="../h_src/57586252.htm" class="localvar">n</a> == 0) {
<a id=582></a>    <a href="../h_src/57511448.htm" class="macro">setfvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57586524.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>), <a href="../h_src/57586388.htm" class="localvar">fn</a>);
<a id=583></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57586524.htm" class="localvar">L</a>);
  }
  else {
<a id=586></a>    <a href="../h_src/57508728.htm" class="type">CClosure</a> *<a href="../h_src/57585980.htm" class="localvar">cl</a>;
<a id=587></a>    <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57586524.htm" class="localvar">L</a>, n);
<a id=588></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57586524.htm" class="localvar">L</a>, n &lt;= <a href="../h_src/57631676.htm" class="macro">MAXUPVAL</a>, &quot;upvalue index too large&quot;);
<a id=589></a>    <a href="../h_src/57585980.htm" class="localvar">cl</a> = <a href="../h_src/57630860.htm" class="function">luaF_newCclosure</a>(<a href="../h_src/57586524.htm" class="localvar">L</a>, <a href="../h_src/57586252.htm" class="localvar">n</a>);
<a id=590></a>    <a href="../h_src/57585980.htm" class="localvar">cl</a>-&gt;<a href="../h_src/57508932.htm" class="variable">f</a> = <a href="../h_src/57586388.htm" class="localvar">fn</a>;
<a id=591></a>    <a href="../h_src/57586524.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> -= <a href="../h_src/57586252.htm" class="localvar">n</a>;
<a id=592></a>    while (<a href="../h_src/57586252.htm" class="localvar">n</a>--) {
<a id=593></a>      <a href="../h_src/57533140.htm" class="macro">setobj2n</a>(L, &amp;<a href="../h_src/57585980.htm" class="localvar">cl</a>-&gt;<a href="../h_src/57508796.htm" class="variable">upvalue</a>[n], <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57586524.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + <a href="../h_src/57586252.htm" class="localvar">n</a>));
<a id=594></a>      <a  class="comments">/* does not need barrier because closure is white */</a>
<a id=595></a>      <a href="../h_src/57548848.htm" class="macro">lua_assert</a>(<a href="../h_src/57626372.htm" class="macro">iswhite</a>(cl));
    }
<a id=597></a>    <a href="../h_src/57511312.htm" class="macro">setclCvalue</a>(<a href="../h_src/57586524.htm" class="localvar">L</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57586524.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>), <a href="../h_src/57585980.htm" class="localvar">cl</a>);
<a id=598></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57586524.htm" class="localvar">L</a>);
<a id=599></a>    <a href="../h_src/57621612.htm" class="macro">luaC_checkGC</a>(<a href="../h_src/57586524.htm" class="localvar">L</a>);
  }
<a id=601></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=605></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57434596.htm" class="function">lua_pushboolean</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57585300.htm" class="localvar">L</a>, int <a href="../h_src/57585164.htm" class="localvar">b</a>) {
<a id=606></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=607></a>  if (<a href="../h_src/57585164.htm" class="localvar">b</a>)
<a id=608></a>    <a href="../h_src/57529128.htm" class="macro">setbtvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57585300.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>));
  else
<a id=610></a>    <a href="../h_src/57529264.htm" class="macro">setbfvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57585300.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>));
<a id=611></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57585300.htm" class="localvar">L</a>);
<a id=612></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=616></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57434528.htm" class="function">lua_pushlightuserdata</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57585028.htm" class="localvar">L</a>, void *<a href="../h_src/57584892.htm" class="localvar">p</a>) {
<a id=617></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=618></a>  <a href="../h_src/57521172.htm" class="macro">setpvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57585028.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>), <a href="../h_src/57584892.htm" class="localvar">p</a>);
<a id=619></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57585028.htm" class="localvar">L</a>);
<a id=620></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=624></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57434460.htm" class="function">lua_pushthread</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57584620.htm" class="localvar">L</a>) {
<a id=625></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=626></a>  <a href="../h_src/57528584.htm" class="macro">setthvalue</a>(<a href="../h_src/57584620.htm" class="localvar">L</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57584620.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>), <a href="../h_src/57584620.htm" class="localvar">L</a>);
<a id=627></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57584620.htm" class="localvar">L</a>);
<a id=628></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=629></a>  return (<a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57584620.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57643848.htm" class="variable">mainthread</a> == <a href="../h_src/57584620.htm" class="localvar">L</a>);
}



<a id=634></a><a  class="comments">/*</a>
<a id=635></a><a  class="comments">** get functions (Lua -&gt; stack)</a>
<a id=636></a><a  class="comments">*/</a>


<a id=639></a><a href="../h_src/57545312.htm" class="macro">l_sinline</a> int <a href="../h_src/57584212.htm" class="function">auxgetstr</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57584076.htm" class="localvar">L</a>, const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57583940.htm" class="localvar">t</a>, const char *<a href="../h_src/57583804.htm" class="localvar">k</a>) {
<a id=640></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57583668.htm" class="localvar">slot</a>;
<a id=641></a>  <a href="../h_src/57522736.htm" class="type">TString</a> *<a href="../h_src/57583532.htm" class="localvar">str</a> = <a href="../h_src/57618484.htm" class="function">luaS_new</a>(<a href="../h_src/57584076.htm" class="localvar">L</a>, <a href="../h_src/57583804.htm" class="localvar">k</a>);
<a id=642></a>  if (<a href="../h_src/57612296.htm" class="macro">luaV_fastget</a>(L, <a href="../h_src/57583940.htm" class="localvar">t</a>, <a href="../h_src/57583532.htm" class="localvar">str</a>, <a href="../h_src/57583668.htm" class="localvar">slot</a>, <a href="../h_src/57616852.htm" class="function">luaH_getstr</a>)) {
<a id=643></a>    <a href="../h_src/57533412.htm" class="macro">setobj2s</a>(<a href="../h_src/57584076.htm" class="localvar">L</a>, <a href="../h_src/57584076.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57583668.htm" class="localvar">slot</a>);
<a id=644></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57584076.htm" class="localvar">L</a>);
  }
  else {
<a id=647></a>    <a href="../h_src/57524096.htm" class="macro">setsvalue2s</a>(<a href="../h_src/57584076.htm" class="localvar">L</a>, <a href="../h_src/57584076.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57583532.htm" class="localvar">str</a>);
<a id=648></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57584076.htm" class="localvar">L</a>);
<a id=649></a>    <a href="../h_src/57611140.htm" class="function">luaV_finishget</a>(<a href="../h_src/57584076.htm" class="localvar">L</a>, <a href="../h_src/57583940.htm" class="localvar">t</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57584076.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1), <a href="../h_src/57584076.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1, <a href="../h_src/57583668.htm" class="localvar">slot</a>);
  }
<a id=651></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=652></a>  return <a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57584076.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
}


<a id=656></a><a  class="comments">/*</a>
<a id=657></a><a  class="comments">** Get the global table in the registry. Since all predefined</a>
<a id=658></a><a  class="comments">** indices in the registry were inserted right when the registry</a>
<a id=659></a><a  class="comments">** was created and never removed, they must always be in the array</a>
<a id=660></a><a  class="comments">** part of the registry.</a>
<a id=661></a><a  class="comments">*/</a>
<a id=662></a>#define <a href="../h_src/57582852.htm" class="macro">getGtable</a>(L)  \
	(&amp;hvalue(&amp;G(L)-&gt;l_registry)-&gt;array[LUA_RIDX_GLOBALS - 1])


<a id=666></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57434392.htm" class="function">lua_getglobal</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57582716.htm" class="localvar">L</a>, const char *<a href="../h_src/57582580.htm" class="localvar">name</a>) {
<a id=667></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57582444.htm" class="localvar">G</a>;
<a id=668></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=669></a>  <a href="../h_src/57641196.htm" class="macro">G</a> = <a href="../h_src/57582852.htm" class="macro">getGtable</a>(<a href="../h_src/57582716.htm" class="localvar">L</a>);
<a id=670></a>  return <a href="../h_src/57584212.htm" class="function">auxgetstr</a>(<a href="../h_src/57582716.htm" class="localvar">L</a>, <a href="../h_src/57582444.htm" class="localvar">G</a>, <a href="../h_src/57582580.htm" class="localvar">name</a>);
}


<a id=674></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57434324.htm" class="function">lua_gettable</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57582308.htm" class="localvar">L</a>, int <a href="../h_src/57582172.htm" class="localvar">idx</a>) {
<a id=675></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57582036.htm" class="localvar">slot</a>;
<a id=676></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57581900.htm" class="localvar">t</a>;
<a id=677></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=678></a>  <a href="../h_src/57581900.htm" class="localvar">t</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57582308.htm" class="localvar">L</a>, <a href="../h_src/57582172.htm" class="localvar">idx</a>);
<a id=679></a>  if (<a href="../h_src/57612296.htm" class="macro">luaV_fastget</a>(L, <a href="../h_src/57581900.htm" class="localvar">t</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57582308.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1), <a href="../h_src/57582036.htm" class="localvar">slot</a>, <a href="../h_src/57616784.htm" class="function">luaH_get</a>)) {
<a id=680></a>    <a href="../h_src/57533412.htm" class="macro">setobj2s</a>(<a href="../h_src/57582308.htm" class="localvar">L</a>, <a href="../h_src/57582308.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1, <a href="../h_src/57582036.htm" class="localvar">slot</a>);
  }
  else
<a id=683></a>    <a href="../h_src/57611140.htm" class="function">luaV_finishget</a>(<a href="../h_src/57582308.htm" class="localvar">L</a>, <a href="../h_src/57581900.htm" class="localvar">t</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57582308.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1), <a href="../h_src/57582308.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1, <a href="../h_src/57582036.htm" class="localvar">slot</a>);
<a id=684></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=685></a>  return <a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57582308.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
}


<a id=689></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57434256.htm" class="function">lua_getfield</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57581492.htm" class="localvar">L</a>, int <a href="../h_src/57581356.htm" class="localvar">idx</a>, const char *<a href="../h_src/57581220.htm" class="localvar">k</a>) {
<a id=690></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=691></a>  return <a href="../h_src/57584212.htm" class="function">auxgetstr</a>(<a href="../h_src/57581492.htm" class="localvar">L</a>, <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57581492.htm" class="localvar">L</a>, <a href="../h_src/57581356.htm" class="localvar">idx</a>), <a href="../h_src/57581220.htm" class="localvar">k</a>);
}


<a id=695></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57434188.htm" class="function">lua_geti</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57581084.htm" class="localvar">L</a>, int <a href="../h_src/57580948.htm" class="localvar">idx</a>, <a href="../h_src/57442076.htm" class="type">lua_Integer</a> <a href="../h_src/57580812.htm" class="localvar">n</a>) {
<a id=696></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57580676.htm" class="localvar">t</a>;
<a id=697></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57580540.htm" class="localvar">slot</a>;
<a id=698></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=699></a>  <a href="../h_src/57580676.htm" class="localvar">t</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57581084.htm" class="localvar">L</a>, <a href="../h_src/57580948.htm" class="localvar">idx</a>);
<a id=700></a>  if (<a href="../h_src/57612160.htm" class="macro">luaV_fastgeti</a>(L, <a href="../h_src/57580676.htm" class="localvar">t</a>, <a href="../h_src/57580812.htm" class="localvar">n</a>, <a href="../h_src/57580540.htm" class="localvar">slot</a>)) {
<a id=701></a>    <a href="../h_src/57533412.htm" class="macro">setobj2s</a>(<a href="../h_src/57581084.htm" class="localvar">L</a>, <a href="../h_src/57581084.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57580540.htm" class="localvar">slot</a>);
  }
  else {
<a id=704></a>    <a href="../h_src/57535384.htm" class="type">TValue</a> <a href="../h_src/57580132.htm" class="localvar">aux</a>;
<a id=705></a>    <a href="../h_src/57525456.htm" class="macro">setivalue</a>(&amp;<a href="../h_src/57580132.htm" class="localvar">aux</a>, <a href="../h_src/57580812.htm" class="localvar">n</a>);
<a id=706></a>    <a href="../h_src/57611140.htm" class="function">luaV_finishget</a>(<a href="../h_src/57581084.htm" class="localvar">L</a>, <a href="../h_src/57580676.htm" class="localvar">t</a>, &amp;<a href="../h_src/57580132.htm" class="localvar">aux</a>, <a href="../h_src/57581084.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57580540.htm" class="localvar">slot</a>);
  }
<a id=708></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57581084.htm" class="localvar">L</a>);
<a id=709></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=710></a>  return <a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57581084.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
}


<a id=714></a><a href="../h_src/57545312.htm" class="macro">l_sinline</a> int <a href="../h_src/57579860.htm" class="function">finishrawget</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57579724.htm" class="localvar">L</a>, const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57579588.htm" class="localvar">val</a>) {
<a id=715></a>  if (<a href="../h_src/57530488.htm" class="macro">isempty</a>(<a href="../h_src/57579588.htm" class="localvar">val</a>))  <a  class="comments">/* avoid copying empty items to the stack */</a>
<a id=716></a>    <a href="../h_src/57530896.htm" class="macro">setnilvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57579724.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>));
  else
<a id=718></a>    <a href="../h_src/57533412.htm" class="macro">setobj2s</a>(<a href="../h_src/57579724.htm" class="localvar">L</a>, <a href="../h_src/57579724.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57532732.htm" class="variable">val</a>);
<a id=719></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57579724.htm" class="localvar">L</a>);
<a id=720></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=721></a>  return <a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57579724.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
}


<a id=725></a>static <a href="../h_src/57504308.htm" class="type">Table</a> *<a href="../h_src/57579180.htm" class="function">gettable</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57579044.htm" class="localvar">L</a>, int <a href="../h_src/57578908.htm" class="localvar">idx</a>) {
<a id=726></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57578772.htm" class="localvar">t</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57579044.htm" class="localvar">L</a>, <a href="../h_src/57578908.htm" class="localvar">idx</a>);
<a id=727></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57579044.htm" class="localvar">L</a>, <a href="../h_src/57507300.htm" class="macro">ttistable</a>(t), &quot;table expected&quot;);
<a id=728></a>  return <a href="../h_src/57507164.htm" class="macro">hvalue</a>(<a href="../h_src/57578772.htm" class="localvar">t</a>);
}


<a id=732></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57434120.htm" class="function">lua_rawget</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57578636.htm" class="localvar">L</a>, int <a href="../h_src/57578500.htm" class="localvar">idx</a>) {
<a id=733></a>  <a href="../h_src/57504308.htm" class="type">Table</a> *<a href="../h_src/57578364.htm" class="localvar">t</a>;
<a id=734></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57578228.htm" class="localvar">val</a>;
<a id=735></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=736></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57578636.htm" class="localvar">L</a>, 1);
<a id=737></a>  <a href="../h_src/57578364.htm" class="localvar">t</a> = <a href="../h_src/57579180.htm" class="function">gettable</a>(<a href="../h_src/57578636.htm" class="localvar">L</a>, <a href="../h_src/57578500.htm" class="localvar">idx</a>);
<a id=738></a>  <a href="../h_src/57578228.htm" class="localvar">val</a> = <a href="../h_src/57616784.htm" class="function">luaH_get</a>(<a href="../h_src/57578364.htm" class="localvar">t</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57578636.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
<a id=739></a>  <a href="../h_src/57578636.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>--;  <a  class="comments">/* remove key */</a>
<a id=740></a>  return <a href="../h_src/57579860.htm" class="function">finishrawget</a>(<a href="../h_src/57578636.htm" class="localvar">L</a>, <a href="../h_src/57578228.htm" class="localvar">val</a>);
}


<a id=744></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57434052.htm" class="function">lua_rawgeti</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57578092.htm" class="localvar">L</a>, int <a href="../h_src/57577956.htm" class="localvar">idx</a>, <a href="../h_src/57442076.htm" class="type">lua_Integer</a> <a href="../h_src/57577820.htm" class="localvar">n</a>) {
<a id=745></a>  <a href="../h_src/57504308.htm" class="type">Table</a> *<a href="../h_src/57577684.htm" class="localvar">t</a>;
<a id=746></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=747></a>  <a href="../h_src/57577684.htm" class="localvar">t</a> = <a href="../h_src/57579180.htm" class="function">gettable</a>(<a href="../h_src/57578092.htm" class="localvar">L</a>, <a href="../h_src/57577956.htm" class="localvar">idx</a>);
<a id=748></a>  return <a href="../h_src/57579860.htm" class="function">finishrawget</a>(<a href="../h_src/57578092.htm" class="localvar">L</a>, <a href="../h_src/57617056.htm" class="function">luaH_getint</a>(<a href="../h_src/57577684.htm" class="localvar">t</a>, <a href="../h_src/57577820.htm" class="localvar">n</a>));
}


<a id=752></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57433984.htm" class="function">lua_rawgetp</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57577548.htm" class="localvar">L</a>, int <a href="../h_src/57577412.htm" class="localvar">idx</a>, const void *<a href="../h_src/57737252.htm" class="localvar">p</a>) {
<a id=753></a>  <a href="../h_src/57504308.htm" class="type">Table</a> *<a href="../h_src/57737116.htm" class="localvar">t</a>;
<a id=754></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> <a href="../h_src/57736980.htm" class="localvar">k</a>;
<a id=755></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=756></a>  <a href="../h_src/57737116.htm" class="localvar">t</a> = <a href="../h_src/57579180.htm" class="function">gettable</a>(<a href="../h_src/57577548.htm" class="localvar">L</a>, <a href="../h_src/57577412.htm" class="localvar">idx</a>);
<a id=757></a>  <a href="../h_src/57521172.htm" class="macro">setpvalue</a>(&amp;<a href="../h_src/57736980.htm" class="localvar">k</a>, <a href="../h_src/57547488.htm" class="macro">cast_voidp</a>(<a href="../h_src/57536200.htm" class="variable">p</a>));
<a id=758></a>  return <a href="../h_src/57579860.htm" class="function">finishrawget</a>(<a href="../h_src/57577548.htm" class="localvar">L</a>, <a href="../h_src/57616784.htm" class="function">luaH_get</a>(<a href="../h_src/57737116.htm" class="localvar">t</a>, &amp;<a href="../h_src/57736980.htm" class="localvar">k</a>));
}


<a id=762></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57433916.htm" class="function">lua_createtable</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57736708.htm" class="localvar">L</a>, int <a href="../h_src/57736572.htm" class="localvar">narray</a>, int <a href="../h_src/57736436.htm" class="localvar">nrec</a>) {
<a id=763></a>  <a href="../h_src/57504308.htm" class="type">Table</a> *<a href="../h_src/57736300.htm" class="localvar">t</a>;
<a id=764></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=765></a>  <a href="../h_src/57736300.htm" class="localvar">t</a> = <a href="../h_src/57616512.htm" class="function">luaH_new</a>(<a href="../h_src/57736708.htm" class="localvar">L</a>);
<a id=766></a>  <a href="../h_src/57506892.htm" class="macro">sethvalue2s</a>(<a href="../h_src/57736708.htm" class="localvar">L</a>, <a href="../h_src/57736708.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57736300.htm" class="localvar">t</a>);
<a id=767></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57736708.htm" class="localvar">L</a>);
<a id=768></a>  if (<a href="../h_src/57736572.htm" class="localvar">narray</a> &gt; 0 || <a href="../h_src/57736436.htm" class="localvar">nrec</a> &gt; 0)
<a id=769></a>    <a href="../h_src/57616444.htm" class="function">luaH_resize</a>(<a href="../h_src/57736708.htm" class="localvar">L</a>, <a href="../h_src/57736300.htm" class="localvar">t</a>, <a href="../h_src/57736572.htm" class="localvar">narray</a>, <a href="../h_src/57736436.htm" class="localvar">nrec</a>);
<a id=770></a>  <a href="../h_src/57621612.htm" class="macro">luaC_checkGC</a>(<a href="../h_src/57736708.htm" class="localvar">L</a>);
<a id=771></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=775></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57433780.htm" class="function">lua_getmetatable</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57735892.htm" class="localvar">L</a>, int <a href="../h_src/57735756.htm" class="localvar">objindex</a>) {
<a id=776></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57735620.htm" class="localvar">obj</a>;
<a id=777></a>  <a href="../h_src/57504308.htm" class="type">Table</a> *<a href="../h_src/57735484.htm" class="localvar">mt</a>;
<a id=778></a>  int <a href="../h_src/57735348.htm" class="localvar">res</a> = 0;
<a id=779></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=780></a>  <a href="../h_src/57735620.htm" class="localvar">obj</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57735892.htm" class="localvar">L</a>, <a href="../h_src/57735756.htm" class="localvar">objindex</a>);
<a id=781></a>  switch (<a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57735620.htm" class="localvar">obj</a>)) {
<a id=782></a>    case <a href="../h_src/57443368.htm" class="macro">LUA_TTABLE</a>:
<a id=783></a>      <a href="../h_src/57735484.htm" class="localvar">mt</a> = <a href="../h_src/57507164.htm" class="macro">hvalue</a>(<a href="../h_src/57735620.htm" class="localvar">obj</a>)-&gt;<a href="../h_src/57504444.htm" class="variable">metatable</a>;
      break;
<a id=785></a>    case <a href="../h_src/57443096.htm" class="macro">LUA_TUSERDATA</a>:
<a id=786></a>      <a href="../h_src/57735484.htm" class="localvar">mt</a> = <a href="../h_src/57521444.htm" class="macro">uvalue</a>(<a href="../h_src/57735620.htm" class="localvar">obj</a>)-&gt;<a href="../h_src/57519540.htm" class="variable">metatable</a>;
      break;
    default:
<a id=789></a>      <a href="../h_src/57735484.htm" class="localvar">mt</a> = <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57735892.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57643440.htm" class="variable">mt</a>[<a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57735620.htm" class="localvar">obj</a>)];
      break;
  }
<a id=792></a>  if (<a href="../h_src/57735484.htm" class="localvar">mt</a> != NULL) {
<a id=793></a>    <a href="../h_src/57506892.htm" class="macro">sethvalue2s</a>(<a href="../h_src/57735892.htm" class="localvar">L</a>, <a href="../h_src/57735892.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57735484.htm" class="localvar">mt</a>);
<a id=794></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57735892.htm" class="localvar">L</a>);
<a id=795></a>    <a href="../h_src/57735348.htm" class="localvar">res</a> = 1;
  }
<a id=797></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=798></a>  return <a href="../h_src/57735348.htm" class="localvar">res</a>;
}


<a id=802></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57433712.htm" class="function">lua_getiuservalue</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57734940.htm" class="localvar">L</a>, int <a href="../h_src/57734804.htm" class="localvar">idx</a>, int <a href="../h_src/57734668.htm" class="localvar">n</a>) {
<a id=803></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57734532.htm" class="localvar">o</a>;
<a id=804></a>  int <a href="../h_src/57734396.htm" class="localvar">t</a>;
<a id=805></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=806></a>  <a href="../h_src/57734532.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57734940.htm" class="localvar">L</a>, <a href="../h_src/57734804.htm" class="localvar">idx</a>);
<a id=807></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57734940.htm" class="localvar">L</a>, <a href="../h_src/57521716.htm" class="macro">ttisfulluserdata</a>(o), &quot;full userdata expected&quot;);
<a id=808></a>  if (<a href="../h_src/57734668.htm" class="localvar">n</a> &lt;= 0 || <a href="../h_src/57734668.htm" class="localvar">n</a> &gt; <a href="../h_src/57521444.htm" class="macro">uvalue</a>(<a href="../h_src/57734532.htm" class="localvar">o</a>)-&gt;<a href="../h_src/57519948.htm" class="variable">nuvalue</a>) {
<a id=809></a>    <a href="../h_src/57530896.htm" class="macro">setnilvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57734940.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>));
<a id=810></a>    <a href="../h_src/57734396.htm" class="localvar">t</a> = <a href="../h_src/57444184.htm" class="macro">LUA_TNONE</a>;
  }
  else {
<a id=813></a>    <a href="../h_src/57533412.htm" class="macro">setobj2s</a>(<a href="../h_src/57734940.htm" class="localvar">L</a>, <a href="../h_src/57734940.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, &amp;<a href="../h_src/57521444.htm" class="macro">uvalue</a>(<a href="../h_src/57734532.htm" class="localvar">o</a>)-&gt;<a href="../h_src/57519336.htm" class="variable">uv</a>[<a href="../h_src/57734668.htm" class="localvar">n</a> - 1].uv);
<a id=814></a>    <a href="../h_src/57734396.htm" class="localvar">t</a> = <a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57734940.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>));
  }
<a id=816></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57734940.htm" class="localvar">L</a>);
<a id=817></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=818></a>  return <a href="../h_src/57734396.htm" class="localvar">t</a>;
}


<a id=822></a><a  class="comments">/*</a>
<a id=823></a><a  class="comments">** set functions (stack -&gt; Lua)</a>
<a id=824></a><a  class="comments">*/</a>

<a id=826></a><a  class="comments">/*</a>
<a id=827></a><a  class="comments">** t[k] = value at the top of the stack (where 'k' is a string)</a>
<a id=828></a><a  class="comments">*/</a>
<a id=829></a>static void <a href="../h_src/57733988.htm" class="function">auxsetstr</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57733852.htm" class="localvar">L</a>, const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57733716.htm" class="localvar">t</a>, const char *<a href="../h_src/57733580.htm" class="localvar">k</a>) {
<a id=830></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57733444.htm" class="localvar">slot</a>;
<a id=831></a>  <a href="../h_src/57522736.htm" class="type">TString</a> *<a href="../h_src/57733308.htm" class="localvar">str</a> = <a href="../h_src/57618484.htm" class="function">luaS_new</a>(<a href="../h_src/57733852.htm" class="localvar">L</a>, <a href="../h_src/57733580.htm" class="localvar">k</a>);
<a id=832></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57733852.htm" class="localvar">L</a>, 1);
<a id=833></a>  if (<a href="../h_src/57612296.htm" class="macro">luaV_fastget</a>(L, <a href="../h_src/57733716.htm" class="localvar">t</a>, <a href="../h_src/57733308.htm" class="localvar">str</a>, <a href="../h_src/57733444.htm" class="localvar">slot</a>, <a href="../h_src/57616852.htm" class="function">luaH_getstr</a>)) {
<a id=834></a>    <a href="../h_src/57612024.htm" class="macro">luaV_finishfastset</a>(<a href="../h_src/57733852.htm" class="localvar">L</a>, <a href="../h_src/57733716.htm" class="localvar">t</a>, <a href="../h_src/57733444.htm" class="localvar">slot</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57733852.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
<a id=835></a>    <a href="../h_src/57733852.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>--;  <a  class="comments">/* pop value */</a>
  }
  else {
<a id=838></a>    <a href="../h_src/57524096.htm" class="macro">setsvalue2s</a>(<a href="../h_src/57733852.htm" class="localvar">L</a>, <a href="../h_src/57733852.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57733308.htm" class="localvar">str</a>);  <a  class="comments">/* push 'str' (to make it a TValue) */</a><a href="../h_src/57535384.htm" class="type">TValue</a>) */
<a id=839></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57733852.htm" class="localvar">L</a>);
<a id=840></a>    <a href="../h_src/57611072.htm" class="function">luaV_finishset</a>(<a href="../h_src/57733852.htm" class="localvar">L</a>, <a href="../h_src/57733716.htm" class="localvar">t</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57733852.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1), <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57733852.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 2), <a href="../h_src/57733444.htm" class="localvar">slot</a>);
<a id=841></a>    <a href="../h_src/57733852.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> -= 2;  <a  class="comments">/* pop value and key */</a>
  }
<a id=843></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);  <a  class="comments">/* lock done by caller */</a>
}


<a id=847></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57433644.htm" class="function">lua_setglobal</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57732628.htm" class="localvar">L</a>, const char *<a href="../h_src/57732492.htm" class="localvar">name</a>) {
<a id=848></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57732356.htm" class="localvar">G</a>;
<a id=849></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);  <a  class="comments">/* unlock done in 'auxsetstr' */</a>
<a id=850></a>  <a href="../h_src/57641196.htm" class="macro">G</a> = <a href="../h_src/57582852.htm" class="macro">getGtable</a>(<a href="../h_src/57732628.htm" class="localvar">L</a>);
<a id=851></a>  <a href="../h_src/57733988.htm" class="function">auxsetstr</a>(<a href="../h_src/57732628.htm" class="localvar">L</a>, <a href="../h_src/57732356.htm" class="localvar">G</a>, <a href="../h_src/57732492.htm" class="localvar">name</a>);
}


<a id=855></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57433576.htm" class="function">lua_settable</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57732220.htm" class="localvar">L</a>, int <a href="../h_src/57732084.htm" class="localvar">idx</a>) {
<a id=856></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57731948.htm" class="localvar">t</a>;
<a id=857></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57731812.htm" class="localvar">slot</a>;
<a id=858></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=859></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57732220.htm" class="localvar">L</a>, 2);
<a id=860></a>  <a href="../h_src/57731948.htm" class="localvar">t</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57732220.htm" class="localvar">L</a>, <a href="../h_src/57732084.htm" class="localvar">idx</a>);
<a id=861></a>  if (<a href="../h_src/57612296.htm" class="macro">luaV_fastget</a>(L, <a href="../h_src/57731948.htm" class="localvar">t</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57732220.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 2), <a href="../h_src/57731812.htm" class="localvar">slot</a>, <a href="../h_src/57616784.htm" class="function">luaH_get</a>)) {
<a id=862></a>    <a href="../h_src/57612024.htm" class="macro">luaV_finishfastset</a>(<a href="../h_src/57732220.htm" class="localvar">L</a>, <a href="../h_src/57731948.htm" class="localvar">t</a>, <a href="../h_src/57731812.htm" class="localvar">slot</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57732220.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
  }
  else
<a id=865></a>    <a href="../h_src/57611072.htm" class="function">luaV_finishset</a>(<a href="../h_src/57732220.htm" class="localvar">L</a>, <a href="../h_src/57731948.htm" class="localvar">t</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57732220.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 2), <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57732220.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1), <a href="../h_src/57731812.htm" class="localvar">slot</a>);
<a id=866></a>  <a href="../h_src/57732220.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> -= 2;  <a  class="comments">/* pop index and value */</a>
<a id=867></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=871></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57433508.htm" class="function">lua_setfield</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57731404.htm" class="localvar">L</a>, int <a href="../h_src/57731268.htm" class="localvar">idx</a>, const char *<a href="../h_src/57731132.htm" class="localvar">k</a>) {
<a id=872></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);  <a  class="comments">/* unlock done in 'auxsetstr' */</a>
<a id=873></a>  <a href="../h_src/57733988.htm" class="function">auxsetstr</a>(<a href="../h_src/57731404.htm" class="localvar">L</a>, <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57731404.htm" class="localvar">L</a>, <a href="../h_src/57731268.htm" class="localvar">idx</a>), <a href="../h_src/57731132.htm" class="localvar">k</a>);
}


<a id=877></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57433440.htm" class="function">lua_seti</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57730996.htm" class="localvar">L</a>, int <a href="../h_src/57730860.htm" class="localvar">idx</a>, <a href="../h_src/57442076.htm" class="type">lua_Integer</a> <a href="../h_src/57730724.htm" class="localvar">n</a>) {
<a id=878></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57730588.htm" class="localvar">t</a>;
<a id=879></a>  const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57730452.htm" class="localvar">slot</a>;
<a id=880></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=881></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57730996.htm" class="localvar">L</a>, 1);
<a id=882></a>  <a href="../h_src/57730588.htm" class="localvar">t</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57730996.htm" class="localvar">L</a>, <a href="../h_src/57730860.htm" class="localvar">idx</a>);
<a id=883></a>  if (<a href="../h_src/57612160.htm" class="macro">luaV_fastgeti</a>(L, <a href="../h_src/57730588.htm" class="localvar">t</a>, <a href="../h_src/57730724.htm" class="localvar">n</a>, <a href="../h_src/57730452.htm" class="localvar">slot</a>)) {
<a id=884></a>    <a href="../h_src/57612024.htm" class="macro">luaV_finishfastset</a>(<a href="../h_src/57730996.htm" class="localvar">L</a>, <a href="../h_src/57730588.htm" class="localvar">t</a>, <a href="../h_src/57730452.htm" class="localvar">slot</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57730996.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
  }
  else {
<a id=887></a>    <a href="../h_src/57535384.htm" class="type">TValue</a> <a href="../h_src/57730044.htm" class="localvar">aux</a>;
<a id=888></a>    <a href="../h_src/57525456.htm" class="macro">setivalue</a>(&amp;<a href="../h_src/57730044.htm" class="localvar">aux</a>, <a href="../h_src/57730724.htm" class="localvar">n</a>);
<a id=889></a>    <a href="../h_src/57611072.htm" class="function">luaV_finishset</a>(<a href="../h_src/57730996.htm" class="localvar">L</a>, <a href="../h_src/57730588.htm" class="localvar">t</a>, &amp;<a href="../h_src/57730044.htm" class="localvar">aux</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57730996.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1), <a href="../h_src/57730452.htm" class="localvar">slot</a>);
  }
<a id=891></a>  <a href="../h_src/57730996.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>--;  <a  class="comments">/* pop value */</a>
<a id=892></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=896></a>static void <a href="../h_src/57729772.htm" class="function">aux_rawset</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57729636.htm" class="localvar">L</a>, int <a href="../h_src/57729500.htm" class="localvar">idx</a>, <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57729364.htm" class="localvar">key</a>, int <a href="../h_src/57729228.htm" class="localvar">n</a>) {
<a id=897></a>  <a href="../h_src/57504308.htm" class="type">Table</a> *<a href="../h_src/57729092.htm" class="localvar">t</a>;
<a id=898></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=899></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57729636.htm" class="localvar">L</a>, n);
<a id=900></a>  <a href="../h_src/57729092.htm" class="localvar">t</a> = <a href="../h_src/57579180.htm" class="function">gettable</a>(<a href="../h_src/57729636.htm" class="localvar">L</a>, <a href="../h_src/57729500.htm" class="localvar">idx</a>);
<a id=901></a>  <a href="../h_src/57616648.htm" class="function">luaH_set</a>(<a href="../h_src/57729636.htm" class="localvar">L</a>, <a href="../h_src/57729092.htm" class="localvar">t</a>, <a href="../h_src/57729364.htm" class="localvar">key</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57729636.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
<a id=902></a>  <a href="../h_src/57617600.htm" class="macro">invalidateTMcache</a>(<a href="../h_src/57729092.htm" class="localvar">t</a>);
<a id=903></a>  <a href="../h_src/57621068.htm" class="macro">luaC_barrierback</a>(<a href="../h_src/57729636.htm" class="localvar">L</a>, <a href="../h_src/57638884.htm" class="macro">obj2gco</a>(<a href="../h_src/57729092.htm" class="localvar">t</a>), <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57729636.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
<a id=904></a>  <a href="../h_src/57729636.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> -= <a href="../h_src/57729228.htm" class="localvar">n</a>;
<a id=905></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=909></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57433372.htm" class="function">lua_rawset</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57728956.htm" class="localvar">L</a>, int <a href="../h_src/57728820.htm" class="localvar">idx</a>) {
<a id=910></a>  <a href="../h_src/57729772.htm" class="function">aux_rawset</a>(<a href="../h_src/57728956.htm" class="localvar">L</a>, <a href="../h_src/57728820.htm" class="localvar">idx</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57728956.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 2), 2);
}


<a id=914></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57433236.htm" class="function">lua_rawsetp</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57728684.htm" class="localvar">L</a>, int <a href="../h_src/57728548.htm" class="localvar">idx</a>, const void *<a href="../h_src/57728412.htm" class="localvar">p</a>) {
<a id=915></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> <a href="../h_src/57728276.htm" class="localvar">k</a>;
<a id=916></a>  <a href="../h_src/57521172.htm" class="macro">setpvalue</a>(&amp;<a href="../h_src/57728276.htm" class="localvar">k</a>, <a href="../h_src/57547488.htm" class="macro">cast_voidp</a>(<a href="../h_src/57536200.htm" class="variable">p</a>));
<a id=917></a>  <a href="../h_src/57729772.htm" class="function">aux_rawset</a>(<a href="../h_src/57728684.htm" class="localvar">L</a>, <a href="../h_src/57728548.htm" class="localvar">idx</a>, &amp;<a href="../h_src/57728276.htm" class="localvar">k</a>, 1);
}


<a id=921></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57433304.htm" class="function">lua_rawseti</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57728004.htm" class="localvar">L</a>, int <a href="../h_src/57727868.htm" class="localvar">idx</a>, <a href="../h_src/57442076.htm" class="type">lua_Integer</a> <a href="../h_src/57727732.htm" class="localvar">n</a>) {
<a id=922></a>  <a href="../h_src/57504308.htm" class="type">Table</a> *<a href="../h_src/57727596.htm" class="localvar">t</a>;
<a id=923></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=924></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57728004.htm" class="localvar">L</a>, 1);
<a id=925></a>  <a href="../h_src/57727596.htm" class="localvar">t</a> = <a href="../h_src/57579180.htm" class="function">gettable</a>(<a href="../h_src/57728004.htm" class="localvar">L</a>, <a href="../h_src/57727868.htm" class="localvar">idx</a>);
<a id=926></a>  <a href="../h_src/57616988.htm" class="function">luaH_setint</a>(<a href="../h_src/57728004.htm" class="localvar">L</a>, <a href="../h_src/57727596.htm" class="localvar">t</a>, <a href="../h_src/57727732.htm" class="localvar">n</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57728004.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
<a id=927></a>  <a href="../h_src/57621068.htm" class="macro">luaC_barrierback</a>(<a href="../h_src/57728004.htm" class="localvar">L</a>, <a href="../h_src/57638884.htm" class="macro">obj2gco</a>(<a href="../h_src/57727596.htm" class="localvar">t</a>), <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57728004.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
<a id=928></a>  <a href="../h_src/57728004.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>--;
<a id=929></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=933></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57433168.htm" class="function">lua_setmetatable</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57727460.htm" class="localvar">L</a>, int <a href="../h_src/57727324.htm" class="localvar">objindex</a>) {
<a id=934></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57727188.htm" class="localvar">obj</a>;
<a id=935></a>  <a href="../h_src/57504308.htm" class="type">Table</a> *<a href="../h_src/57727052.htm" class="localvar">mt</a>;
<a id=936></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=937></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57727460.htm" class="localvar">L</a>, 1);
<a id=938></a>  <a href="../h_src/57727188.htm" class="localvar">obj</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57727460.htm" class="localvar">L</a>, <a href="../h_src/57727324.htm" class="localvar">objindex</a>);
<a id=939></a>  if (<a href="../h_src/57531168.htm" class="macro">ttisnil</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57727460.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1)))
<a id=940></a>    <a href="../h_src/57727052.htm" class="localvar">mt</a> = NULL;
  else {
<a id=942></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57727460.htm" class="localvar">L</a>, <a href="../h_src/57507300.htm" class="macro">ttistable</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(L-&gt;top.p - 1)), &quot;table expected&quot;);
<a id=943></a>    <a href="../h_src/57727052.htm" class="localvar">mt</a> = <a href="../h_src/57507164.htm" class="macro">hvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57727460.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
  }
<a id=945></a>  switch (<a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57727188.htm" class="localvar">obj</a>)) {
<a id=946></a>    case <a href="../h_src/57443368.htm" class="macro">LUA_TTABLE</a>: {
<a id=947></a>      <a href="../h_src/57507164.htm" class="macro">hvalue</a>(<a href="../h_src/57727188.htm" class="localvar">obj</a>)-&gt;<a href="../h_src/57504444.htm" class="variable">metatable</a> = <a href="../h_src/57727052.htm" class="localvar">mt</a>;
<a id=948></a>      if (<a href="../h_src/57727052.htm" class="localvar">mt</a>) {
<a id=949></a>        <a href="../h_src/57621476.htm" class="macro">luaC_objbarrier</a>(<a href="../h_src/57727460.htm" class="localvar">L</a>, <a href="../h_src/57527496.htm" class="macro">gcvalue</a>(<a href="../h_src/57727188.htm" class="localvar">obj</a>), <a href="../h_src/57727052.htm" class="localvar">mt</a>);
<a id=950></a>        <a href="../h_src/57620320.htm" class="function">luaC_checkfinalizer</a>(<a href="../h_src/57727460.htm" class="localvar">L</a>, <a href="../h_src/57527496.htm" class="macro">gcvalue</a>(<a href="../h_src/57727188.htm" class="localvar">obj</a>), <a href="../h_src/57727052.htm" class="localvar">mt</a>);
      }
      break;
    }
<a id=954></a>    case <a href="../h_src/57443096.htm" class="macro">LUA_TUSERDATA</a>: {
<a id=955></a>      <a href="../h_src/57521444.htm" class="macro">uvalue</a>(<a href="../h_src/57727188.htm" class="localvar">obj</a>)-&gt;<a href="../h_src/57519540.htm" class="variable">metatable</a> = <a href="../h_src/57727052.htm" class="localvar">mt</a>;
<a id=956></a>      if (<a href="../h_src/57727052.htm" class="localvar">mt</a>) {
<a id=957></a>        <a href="../h_src/57621476.htm" class="macro">luaC_objbarrier</a>(<a href="../h_src/57727460.htm" class="localvar">L</a>, <a href="../h_src/57521444.htm" class="macro">uvalue</a>(<a href="../h_src/57727188.htm" class="localvar">obj</a>), <a href="../h_src/57727052.htm" class="localvar">mt</a>);
<a id=958></a>        <a href="../h_src/57620320.htm" class="function">luaC_checkfinalizer</a>(<a href="../h_src/57727460.htm" class="localvar">L</a>, <a href="../h_src/57527496.htm" class="macro">gcvalue</a>(<a href="../h_src/57727188.htm" class="localvar">obj</a>), <a href="../h_src/57727052.htm" class="localvar">mt</a>);
      }
      break;
    }
    default: {
<a id=963></a>      <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57727460.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57643440.htm" class="variable">mt</a>[<a href="../h_src/57534500.htm" class="macro">ttype</a>(<a href="../h_src/57727188.htm" class="localvar">obj</a>)] = <a href="../h_src/57727052.htm" class="localvar">mt</a>;
      break;
    }
  }
<a id=967></a>  <a href="../h_src/57727460.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>--;
<a id=968></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
  return 1;
}


<a id=973></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57433100.htm" class="function">lua_setiuservalue</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57726916.htm" class="localvar">L</a>, int <a href="../h_src/57726780.htm" class="localvar">idx</a>, int <a href="../h_src/57726644.htm" class="localvar">n</a>) {
<a id=974></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57726508.htm" class="localvar">o</a>;
<a id=975></a>  int <a href="../h_src/57726372.htm" class="localvar">res</a>;
<a id=976></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=977></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57726916.htm" class="localvar">L</a>, 1);
<a id=978></a>  <a href="../h_src/57726508.htm" class="localvar">o</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57726916.htm" class="localvar">L</a>, <a href="../h_src/57726780.htm" class="localvar">idx</a>);
<a id=979></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57726916.htm" class="localvar">L</a>, <a href="../h_src/57521716.htm" class="macro">ttisfulluserdata</a>(o), &quot;full userdata expected&quot;);
<a id=980></a>  if (!(<a href="../h_src/57547080.htm" class="macro">cast_uint</a>(<a href="../h_src/57726644.htm" class="localvar">n</a>) - 1u &lt; <a href="../h_src/57547080.htm" class="macro">cast_uint</a>(<a href="../h_src/57521444.htm" class="macro">uvalue</a>(<a href="../h_src/57726508.htm" class="localvar">o</a>)-&gt;<a href="../h_src/57519948.htm" class="variable">nuvalue</a>)))
<a id=981></a>    <a href="../h_src/57726372.htm" class="localvar">res</a> = 0;  <a  class="comments">/* 'n' not in [1, uvalue(o)-&gt;nuvalue] */</a>
  else {
<a id=983></a>    <a href="../h_src/57533684.htm" class="macro">setobj</a>(<a href="../h_src/57726916.htm" class="localvar">L</a>, &amp;<a href="../h_src/57521444.htm" class="macro">uvalue</a>(<a href="../h_src/57726508.htm" class="localvar">o</a>)-&gt;<a href="../h_src/57519336.htm" class="variable">uv</a>[<a href="../h_src/57726644.htm" class="localvar">n</a> - 1].uv, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57726916.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
<a id=984></a>    <a href="../h_src/57621068.htm" class="macro">luaC_barrierback</a>(<a href="../h_src/57726916.htm" class="localvar">L</a>, <a href="../h_src/57527496.htm" class="macro">gcvalue</a>(<a href="../h_src/57726508.htm" class="localvar">o</a>), <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57726916.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
<a id=985></a>    <a href="../h_src/57726372.htm" class="localvar">res</a> = 1;
  }
<a id=987></a>  <a href="../h_src/57726916.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>--;
<a id=988></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=989></a>  return <a href="../h_src/57726372.htm" class="localvar">res</a>;
}


<a id=993></a><a  class="comments">/*</a>
<a id=994></a><a  class="comments">** 'load' and 'call' functions (run Lua code)</a>
<a id=995></a><a  class="comments">*/</a>


<a id=998></a>#define <a href="../h_src/57725964.htm" class="macro">checkresults</a>(L,na,nr) \
     api_check(L, (nr) == LUA_MULTRET \
               || (L-&gt;ci-&gt;top.p - L-&gt;top.p &gt;= (nr) - (na)), \
	&quot;results from function overflow current stack size&quot;)


<a id=1004></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57433032.htm" class="function">lua_callk</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57725828.htm" class="localvar">L</a>, int <a href="../h_src/57725692.htm" class="localvar">nargs</a>, int <a href="../h_src/57725556.htm" class="localvar">nresults</a>,
<a id=1005></a>                        <a href="../h_src/57441940.htm" class="type">lua_KContext</a> <a href="../h_src/57725420.htm" class="localvar">ctx</a>, <a href="../h_src/57441464.htm" class="type">lua_KFunction</a> <a href="../h_src/57725284.htm" class="localvar">k</a>) {
<a id=1006></a>  <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57725148.htm" class="localvar">func</a>;
<a id=1007></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1008></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57725828.htm" class="localvar">L</a>, k == NULL || !<a href="../h_src/57647452.htm" class="macro">isLua</a>(L-&gt;ci),
    &quot;cannot use continuations inside hooks&quot;);
<a id=1010></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57725828.htm" class="localvar">L</a>, nargs+1);
<a id=1011></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57725828.htm" class="localvar">L</a>, L-&gt;status == <a href="../h_src/57445204.htm" class="macro">LUA_OK</a>, &quot;cannot do calls on non-normal thread&quot;);
<a id=1012></a>  <a href="../h_src/57725964.htm" class="macro">checkresults</a>(<a href="../h_src/57725828.htm" class="localvar">L</a>, nargs, nresults);
<a id=1013></a>  <a href="../h_src/57725148.htm" class="localvar">func</a> = <a href="../h_src/57725828.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - (<a href="../h_src/57725692.htm" class="localvar">nargs</a>+1);
<a id=1014></a>  if (<a href="../h_src/57725284.htm" class="localvar">k</a> != NULL &amp;&amp; <a href="../h_src/57653776.htm" class="macro">yieldable</a>(<a href="../h_src/57725828.htm" class="localvar">L</a>)) {  <a  class="comments">/* need to prepare continuation? */</a>
<a id=1015></a>    <a href="../h_src/57725828.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650444.htm" class="variable">c</a>.<a href="../h_src/57650716.htm" class="variable">k</a> = <a href="../h_src/57725284.htm" class="localvar">k</a>;  <a  class="comments">/* save continuation */</a>
<a id=1016></a>    <a href="../h_src/57725828.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650444.htm" class="variable">c</a>.<a href="../h_src/57650580.htm" class="variable">ctx</a> = <a href="../h_src/57725420.htm" class="localvar">ctx</a>;  <a  class="comments">/* save context */</a>
<a id=1017></a>    <a href="../h_src/57633240.htm" class="function">luaD_call</a>(<a href="../h_src/57725828.htm" class="localvar">L</a>, <a href="../h_src/57725148.htm" class="localvar">func</a>, <a href="../h_src/57725556.htm" class="localvar">nresults</a>);  <a  class="comments">/* do the call */</a>
  }
<a id=1019></a>  else  <a  class="comments">/* no continuation or no yieldable */</a>
<a id=1020></a>    <a href="../h_src/57633172.htm" class="function">luaD_callnoyield</a>(<a href="../h_src/57725828.htm" class="localvar">L</a>, <a href="../h_src/57725148.htm" class="localvar">func</a>, <a href="../h_src/57725556.htm" class="localvar">nresults</a>);  <a  class="comments">/* just do the call */</a>
<a id=1021></a>  <a href="../h_src/57637796.htm" class="macro">adjustresults</a>(<a href="../h_src/57725828.htm" class="localvar">L</a>, <a href="../h_src/57725556.htm" class="localvar">nresults</a>);
<a id=1022></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}



<a id=1027></a><a  class="comments">/*</a>
<a id=1028></a><a  class="comments">** Execute a protected call.</a>
<a id=1029></a><a  class="comments">*/</a>
<a id=1030></a>struct <a href="../h_src/57725012.htm" class="class">CallS</a> {  <a  class="comments">/* data to 'f_call' */</a>
<a id=1031></a>  <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57724876.htm" class="variable">func</a>;
<a id=1032></a>  int <a href="../h_src/57724808.htm" class="variable">nresults</a>;
};


<a id=1036></a>static void <a href="../h_src/57724740.htm" class="function">f_call</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57724604.htm" class="localvar">L</a>, void *<a href="../h_src/57724468.htm" class="localvar">ud</a>) {
<a id=1037></a>  struct <a href="../h_src/57725012.htm" class="class">CallS</a> *<a href="../h_src/57724196.htm" class="localvar">c</a> = <a href="../h_src/57547760.htm" class="macro">cast</a>(struct <a href="../h_src/57725012.htm" class="class">CallS</a> *, <a href="../h_src/57724468.htm" class="localvar">ud</a>);
<a id=1038></a>  <a href="../h_src/57633172.htm" class="function">luaD_callnoyield</a>(<a href="../h_src/57724604.htm" class="localvar">L</a>, <a href="../h_src/57724196.htm" class="localvar">c</a>-&gt;<a href="../h_src/57724876.htm" class="variable">func</a>, <a href="../h_src/57724196.htm" class="localvar">c</a>-&gt;<a href="../h_src/57724808.htm" class="variable">nresults</a>);
}



<a id=1043></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57432828.htm" class="function">lua_pcallk</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57724060.htm" class="localvar">L</a>, int <a href="../h_src/57723924.htm" class="localvar">nargs</a>, int <a href="../h_src/57723788.htm" class="localvar">nresults</a>, int <a href="../h_src/57723652.htm" class="localvar">errfunc</a>,
<a id=1044></a>                        <a href="../h_src/57441940.htm" class="type">lua_KContext</a> <a href="../h_src/57723516.htm" class="localvar">ctx</a>, <a href="../h_src/57441464.htm" class="type">lua_KFunction</a> <a href="../h_src/57723380.htm" class="localvar">k</a>) {
<a id=1045></a>  struct <a href="../h_src/57725012.htm" class="class">CallS</a> <a href="../h_src/57723244.htm" class="localvar">c</a>;
<a id=1046></a>  int <a href="../h_src/57723108.htm" class="localvar">status</a>;
<a id=1047></a>  <a href="../h_aa/57441872.htm" class="type">ptrdiff_t</a> <a href="../h_src/57722972.htm" class="localvar">func</a>;
<a id=1048></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1049></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, k == NULL || !<a href="../h_src/57647452.htm" class="macro">isLua</a>(L-&gt;ci),
    &quot;cannot use continuations inside hooks&quot;);
<a id=1051></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, nargs+1);
<a id=1052></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, L-&gt;status == <a href="../h_src/57445204.htm" class="macro">LUA_OK</a>, &quot;cannot do calls on non-normal thread&quot;);
<a id=1053></a>  <a href="../h_src/57725964.htm" class="macro">checkresults</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, nargs, nresults);
<a id=1054></a>  if (<a href="../h_src/57723652.htm" class="localvar">errfunc</a> == 0)
<a id=1055></a>    <a href="../h_src/57722972.htm" class="localvar">func</a> = 0;
  else {
<a id=1057></a>    <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57722836.htm" class="localvar">o</a> = <a href="../h_src/57609100.htm" class="function">index2stack</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, <a href="../h_src/57723652.htm" class="localvar">errfunc</a>);
<a id=1058></a>    <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, <a href="../h_src/57513216.htm" class="macro">ttisfunction</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(o)), &quot;error handler must be a function&quot;);
<a id=1059></a>    <a href="../h_src/57722972.htm" class="localvar">func</a> = <a href="../h_src/57634396.htm" class="macro">savestack</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, <a href="../h_src/57722836.htm" class="localvar">o</a>);
  }
<a id=1061></a>  <a href="../h_src/57723244.htm" class="localvar">c</a>.<a href="../h_src/57724876.htm" class="variable">func</a> = <a href="../h_src/57724060.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - (<a href="../h_src/57723924.htm" class="localvar">nargs</a>+1);  <a  class="comments">/* function to be called */</a>
<a id=1062></a>  if (<a href="../h_src/57723380.htm" class="localvar">k</a> == NULL || !<a href="../h_src/57653776.htm" class="macro">yieldable</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>)) {  <a  class="comments">/* no continuation or no yieldable? */</a>
<a id=1063></a>    <a href="../h_src/57723244.htm" class="localvar">c</a>.<a href="../h_src/57724808.htm" class="variable">nresults</a> = <a href="../h_src/57723788.htm" class="localvar">nresults</a>;  <a  class="comments">/* do a 'conventional' protected call */</a>
<a id=1064></a>    <a href="../h_src/57723108.htm" class="localvar">status</a> = <a href="../h_src/57632968.htm" class="function">luaD_pcall</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, <a href="../h_src/57724740.htm" class="function">f_call</a>, &amp;<a href="../h_src/57723244.htm" class="localvar">c</a>, <a href="../h_src/57634396.htm" class="macro">savestack</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, <a href="../h_src/57723244.htm" class="localvar">c</a>.<a href="../h_src/57724876.htm" class="variable">func</a>), <a href="../h_src/57722972.htm" class="localvar">func</a>);
  }
<a id=1066></a>  else {  <a  class="comments">/* prepare continuation (call is already protected by 'resume') */</a>
<a id=1067></a>    <a href="../h_src/57537764.htm" class="type">CallInfo</a> *<a href="../h_src/57722700.htm" class="localvar">ci</a> = <a href="../h_src/57724060.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>;
<a id=1068></a>    <a href="../h_src/57722700.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650444.htm" class="variable">c</a>.<a href="../h_src/57650716.htm" class="variable">k</a> = <a href="../h_src/57723380.htm" class="localvar">k</a>;  <a  class="comments">/* save continuation */</a>
<a id=1069></a>    <a href="../h_src/57722700.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650444.htm" class="variable">c</a>.<a href="../h_src/57650580.htm" class="variable">ctx</a> = <a href="../h_src/57723516.htm" class="localvar">ctx</a>;  <a  class="comments">/* save context */</a>
<a id=1070></a>    <a  class="comments">/* save information for error recovery */</a>
<a id=1071></a>    <a href="../h_src/57722700.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57649560.htm" class="variable">u2</a>.<a href="../h_src/57650172.htm" class="variable">funcidx</a> = <a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/57634396.htm" class="macro">savestack</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, <a href="../h_src/57723244.htm" class="localvar">c</a>.<a href="../h_src/57724876.htm" class="variable">func</a>));
<a id=1072></a>    <a href="../h_src/57722700.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650444.htm" class="variable">c</a>.<a href="../h_src/57650648.htm" class="variable">old_errfunc</a> = <a href="../h_src/57724060.htm" class="localvar">L</a>-&gt;<a href="../h_src/57641604.htm" class="variable">errfunc</a>;
<a id=1073></a>    <a href="../h_src/57724060.htm" class="localvar">L</a>-&gt;<a href="../h_src/57641604.htm" class="variable">errfunc</a> = <a href="../h_src/57722972.htm" class="localvar">func</a>;
<a id=1074></a>    <a href="../h_src/57647180.htm" class="macro">setoah</a>(<a href="../h_src/57722700.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57649424.htm" class="variable">callstatus</a>, <a href="../h_src/57724060.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642760.htm" class="variable">allowhook</a>);  <a  class="comments">/* save value of 'allowhook' */</a>
<a id=1075></a>    <a href="../h_src/57722700.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57649424.htm" class="variable">callstatus</a> |= <a href="../h_src/57648812.htm" class="macro">CIST_YPCALL</a>;  <a  class="comments">/* function can do error recovery */</a>
<a id=1076></a>    <a href="../h_src/57633240.htm" class="function">luaD_call</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, <a href="../h_src/57723244.htm" class="localvar">c</a>.<a href="../h_src/57724876.htm" class="variable">func</a>, <a href="../h_src/57723788.htm" class="localvar">nresults</a>);  <a  class="comments">/* do the call */</a>
<a id=1077></a>    <a href="../h_src/57722700.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57649424.htm" class="variable">callstatus</a> &amp;= ~<a href="../h_src/57648812.htm" class="macro">CIST_YPCALL</a>;
<a id=1078></a>    <a href="../h_src/57724060.htm" class="localvar">L</a>-&gt;<a href="../h_src/57641604.htm" class="variable">errfunc</a> = <a href="../h_src/57722700.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650444.htm" class="variable">c</a>.<a href="../h_src/57650648.htm" class="variable">old_errfunc</a>;
<a id=1079></a>    <a href="../h_src/57723108.htm" class="localvar">status</a> = <a href="../h_src/57445204.htm" class="macro">LUA_OK</a>;  <a  class="comments">/* if it is here, there were no errors */</a>
  }
<a id=1081></a>  <a href="../h_src/57637796.htm" class="macro">adjustresults</a>(<a href="../h_src/57724060.htm" class="localvar">L</a>, <a href="../h_src/57723788.htm" class="localvar">nresults</a>);
<a id=1082></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=1083></a>  return <a href="../h_src/57723108.htm" class="localvar">status</a>;
}


<a id=1087></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57432624.htm" class="function">lua_load</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57722564.htm" class="localvar">L</a>, <a href="../h_src/57441396.htm" class="type">lua_Reader</a> <a href="../h_src/57722428.htm" class="localvar">reader</a>, void *<a href="../h_src/57722292.htm" class="localvar">data</a>,
<a id=1088></a>                      const char *<a href="../h_src/57722156.htm" class="localvar">chunkname</a>, const char *<a href="../h_src/57722020.htm" class="localvar">mode</a>) {
<a id=1089></a>  <a href="../h_src/57656088.htm" class="type">ZIO</a> <a href="../h_src/57721884.htm" class="localvar">z</a>;
<a id=1090></a>  int <a href="../h_src/57721748.htm" class="localvar">status</a>;
<a id=1091></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1092></a>  if (!<a href="../h_src/57722156.htm" class="localvar">chunkname</a>) <a href="../h_src/57722156.htm" class="localvar">chunkname</a> = &quot;?&quot;;
<a id=1093></a>  <a href="../h_src/57654388.htm" class="function">luaZ_init</a>(<a href="../h_src/57722564.htm" class="localvar">L</a>, &amp;<a href="../h_src/57721884.htm" class="localvar">z</a>, <a href="../h_src/57722428.htm" class="localvar">reader</a>, <a href="../h_src/57722292.htm" class="localvar">data</a>);
<a id=1094></a>  <a href="../h_src/57721748.htm" class="localvar">status</a> = <a href="../h_src/57633580.htm" class="function">luaD_protectedparser</a>(<a href="../h_src/57722564.htm" class="localvar">L</a>, &amp;<a href="../h_src/57721884.htm" class="localvar">z</a>, <a href="../h_src/57722156.htm" class="localvar">chunkname</a>, <a href="../h_src/57722020.htm" class="localvar">mode</a>);
<a id=1095></a>  if (<a href="../h_src/57721748.htm" class="localvar">status</a> == <a href="../h_src/57445204.htm" class="macro">LUA_OK</a>) {  <a  class="comments">/* no errors? */</a>
<a id=1096></a>    <a href="../h_src/57507980.htm" class="type">LClosure</a> *<a href="../h_src/57721612.htm" class="localvar">f</a> = <a href="../h_src/57512264.htm" class="macro">clLvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57722564.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));  <a  class="comments">/* get new function */</a>
<a id=1097></a>    if (<a href="../h_src/57721612.htm" class="localvar">f</a>-&gt;<a href="../h_src/57508320.htm" class="variable">nupvalues</a> &gt;= 1) {  <a  class="comments">/* does it have an upvalue? */</a>
<a id=1098></a>      <a  class="comments">/* get global table from registry */</a>
<a id=1099></a>      const <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57721476.htm" class="localvar">gt</a> = <a href="../h_src/57582852.htm" class="macro">getGtable</a>(<a href="../h_src/57722564.htm" class="localvar">L</a>);
<a id=1100></a>      <a  class="comments">/* set global table as 1st upvalue of 'f' (may be LUA_ENV) */</a>
<a id=1101></a>      <a href="../h_src/57533684.htm" class="macro">setobj</a>(<a href="../h_src/57722564.htm" class="localvar">L</a>, <a href="../h_src/57721612.htm" class="localvar">f</a>-&gt;<a href="../h_src/57508048.htm" class="variable">upvals</a>[0]-&gt;<a href="../h_src/57510564.htm" class="variable">v</a>.<a href="../h_src/57510768.htm" class="variable">p</a>, <a href="../h_src/57721476.htm" class="localvar">gt</a>);
<a id=1102></a>      <a href="../h_src/57621340.htm" class="macro">luaC_barrier</a>(<a href="../h_src/57722564.htm" class="localvar">L</a>, <a href="../h_src/57721612.htm" class="localvar">f</a>-&gt;<a href="../h_src/57508048.htm" class="variable">upvals</a>[0], <a href="../h_src/57721476.htm" class="localvar">gt</a>);
    }
  }
<a id=1105></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=1106></a>  return <a href="../h_src/57721748.htm" class="localvar">status</a>;
}


<a id=1110></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57432556.htm" class="function">lua_dump</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57721068.htm" class="localvar">L</a>, <a href="../h_src/57440920.htm" class="type">lua_Writer</a> <a href="../h_src/57720932.htm" class="localvar">writer</a>, void *<a href="../h_src/57720796.htm" class="localvar">data</a>, int <a href="../h_src/57720660.htm" class="localvar">strip</a>) {
<a id=1111></a>  int <a href="../h_src/57720524.htm" class="localvar">status</a>;
<a id=1112></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57720388.htm" class="localvar">o</a>;
<a id=1113></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1114></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57721068.htm" class="localvar">L</a>, 1);
<a id=1115></a>  <a href="../h_src/57720388.htm" class="localvar">o</a> = <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57721068.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1);
<a id=1116></a>  if (<a href="../h_src/57512536.htm" class="macro">isLfunction</a>(<a href="../h_src/57720388.htm" class="localvar">o</a>))
<a id=1117></a>    <a href="../h_src/57720524.htm" class="localvar">status</a> = <a href="../h_src/57614744.htm" class="function">luaU_dump</a>(<a href="../h_src/57721068.htm" class="localvar">L</a>, <a href="../h_src/57507572.htm" class="macro">getproto</a>(<a href="../h_src/57720388.htm" class="localvar">o</a>), <a href="../h_src/57720932.htm" class="localvar">writer</a>, <a href="../h_src/57720796.htm" class="localvar">data</a>, <a href="../h_src/57720660.htm" class="localvar">strip</a>);
  else
<a id=1119></a>    <a href="../h_src/57720524.htm" class="localvar">status</a> = 1;
<a id=1120></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=1121></a>  return <a href="../h_src/57720524.htm" class="localvar">status</a>;
}


<a id=1125></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57432352.htm" class="function">lua_status</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57720252.htm" class="localvar">L</a>) {
<a id=1126></a>  return <a href="../h_src/57720252.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642828.htm" class="variable">status</a>;
}


<a id=1130></a><a  class="comments">/*</a>
<a id=1131></a><a  class="comments">** Garbage-collection function</a>
<a id=1132></a><a  class="comments">*/</a>
<a id=1133></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57430448.htm" class="function">lua_gc</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57720116.htm" class="localvar">L</a>, int <a href="../h_src/57719980.htm" class="localvar">what</a>, <a href="../h_src/57719844.htm" class="localvar">...</a>) {
<a id=1134></a>  <a href="../h_aa/57434868.htm" class="type">va_list</a> <a href="../h_src/57719708.htm" class="localvar">argp</a>;
<a id=1135></a>  int <a href="../h_src/57719572.htm" class="localvar">res</a> = 0;
<a id=1136></a>  <a href="../h_src/57643100.htm" class="type">global_State</a> *<a href="../h_src/57719436.htm" class="localvar">g</a> = <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57720116.htm" class="localvar">L</a>);
<a id=1137></a>  if (<a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645684.htm" class="variable">gcstp</a> &amp; <a href="../h_src/57622156.htm" class="macro">GCSTPGC</a>)  <a  class="comments">/* internal stop? */</a>
<a id=1138></a>    return -1;  <a  class="comments">/* all options are invalid when stopped */</a>
<a id=1139></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1140></a>  va_start(<a href="../h_src/57719708.htm" class="localvar">argp</a>, <a href="../h_src/57719980.htm" class="localvar">what</a>);
<a id=1141></a>  switch (<a href="../h_src/57719980.htm" class="localvar">what</a>) {
<a id=1142></a>    case <a href="../h_src/57431944.htm" class="macro">LUA_GCSTOP</a>: {
<a id=1143></a>      <a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645684.htm" class="variable">gcstp</a> = <a href="../h_src/57622292.htm" class="macro">GCSTPUSR</a>;  <a  class="comments">/* stopped by the user */</a>
      break;
    }
<a id=1146></a>    case <a href="../h_src/57431808.htm" class="macro">LUA_GCRESTART</a>: {
<a id=1147></a>      <a href="../h_src/57638612.htm" class="function">luaE_setdebt</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>, 0);
<a id=1148></a>      <a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645684.htm" class="variable">gcstp</a> = 0;  <a  class="comments">/* (GCSTPGC must be already zero here) */</a>
      break;
    }
<a id=1151></a>    case <a href="../h_src/57431672.htm" class="macro">LUA_GCCOLLECT</a>: {
<a id=1152></a>      <a href="../h_src/57620660.htm" class="function">luaC_fullgc</a>(<a href="../h_src/57720116.htm" class="localvar">L</a>, 0);
      break;
    }
<a id=1155></a>    case <a href="../h_src/57431536.htm" class="macro">LUA_GCCOUNT</a>: {
<a id=1156></a>      <a  class="comments">/* GC values are expressed in Kbytes: #bytes/2^10 */</a>
<a id=1157></a>      <a href="../h_src/57719572.htm" class="localvar">res</a> = <a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/57638748.htm" class="macro">gettotalbytes</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>) &gt;&gt; 10);
      break;
    }
<a id=1160></a>    case <a href="../h_src/57431400.htm" class="macro">LUA_GCCOUNTB</a>: {
<a id=1161></a>      <a href="../h_src/57719572.htm" class="localvar">res</a> = <a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/57638748.htm" class="macro">gettotalbytes</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>) &amp; 0x3ff);
      break;
    }
<a id=1164></a>    case <a href="../h_src/57431264.htm" class="macro">LUA_GCSTEP</a>: {
<a id=1165></a>      int <a href="../h_src/57719300.htm" class="localvar">data</a> = va_arg(<a href="../h_src/57719708.htm" class="localvar">argp</a>, int);
<a id=1166></a>      <a href="../h_src/57550548.htm" class="type">l_mem</a> <a href="../h_src/57719164.htm" class="localvar">debt</a> = 1;  <a  class="comments">/* =1 to signal that it did an actual step */</a>
<a id=1167></a>      <a href="../h_src/57550480.htm" class="type">lu_byte</a> <a href="../h_src/57719028.htm" class="localvar">oldstp</a> = <a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645684.htm" class="variable">gcstp</a>;
<a id=1168></a>      <a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645684.htm" class="variable">gcstp</a> = 0;  <a  class="comments">/* allow GC to run (GCSTPGC must be zero here) */</a>
<a id=1169></a>      if (<a href="../h_src/57719300.htm" class="localvar">data</a> == 0) {
<a id=1170></a>        <a href="../h_src/57638612.htm" class="function">luaE_setdebt</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>, 0);  <a  class="comments">/* do a basic step */</a>
<a id=1171></a>        <a href="../h_src/57620796.htm" class="function">luaC_step</a>(<a href="../h_src/57720116.htm" class="localvar">L</a>);
      }
<a id=1173></a>      else {  <a  class="comments">/* add 'data' to total debt */</a>
<a id=1174></a>        <a href="../h_src/57719164.htm" class="localvar">debt</a> = <a href="../h_src/57547760.htm" class="macro">cast</a>(<a href="../h_src/57550548.htm" class="type">l_mem</a>, <a href="../h_src/57719300.htm" class="localvar">data</a>) * 1024 + <a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57646568.htm" class="variable">GCdebt</a>;
<a id=1175></a>        <a href="../h_src/57638612.htm" class="function">luaE_setdebt</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>, <a href="../h_src/57719164.htm" class="localvar">debt</a>);
<a id=1176></a>        <a href="../h_src/57621612.htm" class="macro">luaC_checkGC</a>(<a href="../h_src/57720116.htm" class="localvar">L</a>);
      }
<a id=1178></a>      <a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645684.htm" class="variable">gcstp</a> = <a href="../h_src/57719028.htm" class="localvar">oldstp</a>;  <a  class="comments">/* restore previous state */</a>
<a id=1179></a>      if (<a href="../h_src/57719164.htm" class="localvar">debt</a> &gt; 0 &amp;&amp; <a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57646024.htm" class="variable">gcstate</a> == <a href="../h_src/57628684.htm" class="macro">GCSpause</a>)  <a  class="comments">/* end of cycle? */</a>
<a id=1180></a>        <a href="../h_src/57719572.htm" class="localvar">res</a> = 1;  <a  class="comments">/* signal it */</a>
      break;
    }
<a id=1183></a>    case <a href="../h_src/57431128.htm" class="macro">LUA_GCSETPAUSE</a>: {
<a id=1184></a>      int <a href="../h_src/57718892.htm" class="localvar">data</a> = va_arg(<a href="../h_src/57719708.htm" class="localvar">argp</a>, int);
<a id=1185></a>      <a href="../h_src/57719572.htm" class="localvar">res</a> = <a href="../h_src/57622972.htm" class="macro">getgcparam</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645548.htm" class="variable">gcpause</a>);
<a id=1186></a>      <a href="../h_src/57622836.htm" class="macro">setgcparam</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645548.htm" class="variable">gcpause</a>, <a href="../h_src/57718892.htm" class="localvar">data</a>);
      break;
    }
<a id=1189></a>    case <a href="../h_src/57430992.htm" class="macro">LUA_GCSETSTEPMUL</a>: {
<a id=1190></a>      int <a href="../h_src/57718756.htm" class="localvar">data</a> = va_arg(<a href="../h_src/57719708.htm" class="localvar">argp</a>, int);
<a id=1191></a>      <a href="../h_src/57719572.htm" class="localvar">res</a> = <a href="../h_src/57622972.htm" class="macro">getgcparam</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645480.htm" class="variable">gcstepmul</a>);
<a id=1192></a>      <a href="../h_src/57622836.htm" class="macro">setgcparam</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645480.htm" class="variable">gcstepmul</a>, <a href="../h_src/57718756.htm" class="localvar">data</a>);
      break;
    }
<a id=1195></a>    case <a href="../h_src/57430856.htm" class="macro">LUA_GCISRUNNING</a>: {
<a id=1196></a>      <a href="../h_src/57719572.htm" class="localvar">res</a> = <a href="../h_src/57621884.htm" class="macro">gcrunning</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>);
      break;
    }
<a id=1199></a>    case <a href="../h_src/57430720.htm" class="macro">LUA_GCGEN</a>: {
<a id=1200></a>      int <a href="../h_src/57718620.htm" class="localvar">minormul</a> = va_arg(<a href="../h_src/57719708.htm" class="localvar">argp</a>, int);
<a id=1201></a>      int <a href="../h_src/57718484.htm" class="localvar">majormul</a> = va_arg(<a href="../h_src/57719708.htm" class="localvar">argp</a>, int);
<a id=1202></a>      <a href="../h_src/57719572.htm" class="localvar">res</a> = <a href="../h_src/57622428.htm" class="macro">isdecGCmodegen</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>) ? <a href="../h_src/57430720.htm" class="macro">LUA_GCGEN</a> : <a href="../h_src/57430584.htm" class="macro">LUA_GCINC</a>;
<a id=1203></a>      if (<a href="../h_src/57718620.htm" class="localvar">minormul</a> != 0)
<a id=1204></a>        <a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645820.htm" class="variable">genminormul</a> = <a href="../h_src/57718620.htm" class="localvar">minormul</a>;
<a id=1205></a>      if (<a href="../h_src/57718484.htm" class="localvar">majormul</a> != 0)
<a id=1206></a>        <a href="../h_src/57622836.htm" class="macro">setgcparam</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645752.htm" class="variable">genmajormul</a>, <a href="../h_src/57718484.htm" class="localvar">majormul</a>);
<a id=1207></a>      <a href="../h_src/57620252.htm" class="function">luaC_changemode</a>(<a href="../h_src/57720116.htm" class="localvar">L</a>, <a href="../h_src/57652144.htm" class="macro">KGC_GEN</a>);
      break;
    }
<a id=1210></a>    case <a href="../h_src/57430584.htm" class="macro">LUA_GCINC</a>: {
<a id=1211></a>      int <a href="../h_src/57718348.htm" class="localvar">pause</a> = va_arg(<a href="../h_src/57719708.htm" class="localvar">argp</a>, int);
<a id=1212></a>      int <a href="../h_src/57718212.htm" class="localvar">stepmul</a> = va_arg(<a href="../h_src/57719708.htm" class="localvar">argp</a>, int);
<a id=1213></a>      int <a href="../h_src/57718076.htm" class="localvar">stepsize</a> = va_arg(<a href="../h_src/57719708.htm" class="localvar">argp</a>, int);
<a id=1214></a>      <a href="../h_src/57719572.htm" class="localvar">res</a> = <a href="../h_src/57622428.htm" class="macro">isdecGCmodegen</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>) ? <a href="../h_src/57430720.htm" class="macro">LUA_GCGEN</a> : <a href="../h_src/57430584.htm" class="macro">LUA_GCINC</a>;
<a id=1215></a>      if (<a href="../h_src/57718348.htm" class="localvar">pause</a> != 0)
<a id=1216></a>        <a href="../h_src/57622836.htm" class="macro">setgcparam</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645548.htm" class="variable">gcpause</a>, <a href="../h_src/57718348.htm" class="localvar">pause</a>);
<a id=1217></a>      if (<a href="../h_src/57718212.htm" class="localvar">stepmul</a> != 0)
<a id=1218></a>        <a href="../h_src/57622836.htm" class="macro">setgcparam</a>(<a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645480.htm" class="variable">gcstepmul</a>, <a href="../h_src/57718212.htm" class="localvar">stepmul</a>);
<a id=1219></a>      if (<a href="../h_src/57718076.htm" class="localvar">stepsize</a> != 0)
<a id=1220></a>        <a href="../h_src/57719436.htm" class="localvar">g</a>-&gt;<a href="../h_src/57645412.htm" class="variable">gcstepsize</a> = <a href="../h_src/57718076.htm" class="localvar">stepsize</a>;
<a id=1221></a>      <a href="../h_src/57620252.htm" class="function">luaC_changemode</a>(<a href="../h_src/57720116.htm" class="localvar">L</a>, <a href="../h_src/57652280.htm" class="macro">KGC_INC</a>);
      break;
    }
<a id=1224></a>    default: <a href="../h_src/57719572.htm" class="localvar">res</a> = -1;  <a  class="comments">/* invalid option */</a>
  }
<a id=1226></a>  va_end(<a href="../h_src/57719708.htm" class="localvar">argp</a>);
<a id=1227></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=1228></a>  return <a href="../h_src/57719572.htm" class="localvar">res</a>;
}



<a id=1233></a><a  class="comments">/*</a>
<a id=1234></a><a  class="comments">** miscellaneous functions</a>
<a id=1235></a><a  class="comments">*/</a>


<a id=1238></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57430380.htm" class="function">lua_error</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57717940.htm" class="localvar">L</a>) {
<a id=1239></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57717804.htm" class="localvar">errobj</a>;
<a id=1240></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1241></a>  <a href="../h_src/57717804.htm" class="localvar">errobj</a> = <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57717940.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1);
<a id=1242></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57717940.htm" class="localvar">L</a>, 1);
<a id=1243></a>  <a  class="comments">/* error object is the memory error message? */</a>
<a id=1244></a>  if (<a href="../h_src/57524776.htm" class="macro">ttisshrstring</a>(<a href="../h_src/57717804.htm" class="localvar">errobj</a>) &amp;&amp; <a href="../h_src/57619300.htm" class="macro">eqshrstr</a>(<a href="../h_src/57524368.htm" class="macro">tsvalue</a>(<a href="../h_src/57717804.htm" class="localvar">errobj</a>), <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57717940.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57643780.htm" class="variable">memerrmsg</a>))
<a id=1245></a>    <a href="../h_src/57496556.htm" class="macro">luaM_error</a>(<a href="../h_src/57717940.htm" class="localvar">L</a>);  <a  class="comments">/* raise a memory error */</a>
  else
<a id=1247></a>    <a href="../h_src/57635144.htm" class="function">luaG_errormsg</a>(<a href="../h_src/57717940.htm" class="localvar">L</a>);  <a  class="comments">/* raise a regular error */</a>
<a id=1248></a>  <a  class="comments">/* code unreachable; will unlock when control actually leaves the kernel */</a>
<a id=1249></a>  return 0;  <a  class="comments">/* to avoid warnings */</a>
}


<a id=1253></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> int <a href="../h_src/57430312.htm" class="function">lua_next</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57717668.htm" class="localvar">L</a>, int <a href="../h_src/57717532.htm" class="localvar">idx</a>) {
<a id=1254></a>  <a href="../h_src/57504308.htm" class="type">Table</a> *<a href="../h_src/57717396.htm" class="localvar">t</a>;
<a id=1255></a>  int <a href="../h_src/57717260.htm" class="localvar">more</a>;
<a id=1256></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1257></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57717668.htm" class="localvar">L</a>, 1);
<a id=1258></a>  <a href="../h_src/57717396.htm" class="localvar">t</a> = <a href="../h_src/57579180.htm" class="function">gettable</a>(<a href="../h_src/57717668.htm" class="localvar">L</a>, <a href="../h_src/57717532.htm" class="localvar">idx</a>);
<a id=1259></a>  <a href="../h_src/57717260.htm" class="localvar">more</a> = <a href="../h_src/57616240.htm" class="function">luaH_next</a>(<a href="../h_src/57717668.htm" class="localvar">L</a>, <a href="../h_src/57717396.htm" class="localvar">t</a>, <a href="../h_src/57717668.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1);
<a id=1260></a>  if (<a href="../h_src/57717260.htm" class="localvar">more</a>) {
<a id=1261></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57717668.htm" class="localvar">L</a>);
  }
<a id=1263></a>  else  <a  class="comments">/* no more elements */</a>
<a id=1264></a>    <a href="../h_src/57717668.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> -= 1;  <a  class="comments">/* remove key */</a>
<a id=1265></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=1266></a>  return <a href="../h_src/57717260.htm" class="localvar">more</a>;
}


<a id=1270></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57429836.htm" class="function">lua_toclose</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57717124.htm" class="localvar">L</a>, int <a href="../h_src/57716988.htm" class="localvar">idx</a>) {
<a id=1271></a>  int <a href="../h_src/57716852.htm" class="localvar">nresults</a>;
<a id=1272></a>  <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/57716716.htm" class="localvar">o</a>;
<a id=1273></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1274></a>  <a href="../h_src/57716716.htm" class="localvar">o</a> = <a href="../h_src/57609100.htm" class="function">index2stack</a>(<a href="../h_src/57717124.htm" class="localvar">L</a>, <a href="../h_src/57716988.htm" class="localvar">idx</a>);
<a id=1275></a>  <a href="../h_src/57716852.htm" class="localvar">nresults</a> = <a href="../h_src/57717124.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>-&gt;<a href="../h_src/57649492.htm" class="variable">nresults</a>;
<a id=1276></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57717124.htm" class="localvar">L</a>, L-&gt;tbclist.p &lt; o, &quot;given index below or equal a marked one&quot;);
<a id=1277></a>  <a href="../h_src/57630520.htm" class="function">luaF_newtbcupval</a>(<a href="../h_src/57717124.htm" class="localvar">L</a>, <a href="../h_src/57716716.htm" class="localvar">o</a>);  <a  class="comments">/* create new to-be-closed upvalue */</a>
<a id=1278></a>  if (!<a href="../h_src/57637524.htm" class="macro">hastocloseCfunc</a>(<a href="../h_src/57716852.htm" class="localvar">nresults</a>))  <a  class="comments">/* function not marked yet? */</a>
<a id=1279></a>    <a href="../h_src/57717124.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>-&gt;<a href="../h_src/57649492.htm" class="variable">nresults</a> = <a href="../h_src/57637388.htm" class="macro">codeNresults</a>(<a href="../h_src/57716852.htm" class="localvar">nresults</a>);  <a  class="comments">/* mark it */</a>
<a id=1280></a>  <a href="../h_src/57548848.htm" class="macro">lua_assert</a>(<a href="../h_src/57637524.htm" class="macro">hastocloseCfunc</a>(L-&gt;ci-&gt;nresults));
<a id=1281></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=1285></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57430244.htm" class="function">lua_concat</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57716580.htm" class="localvar">L</a>, int <a href="../h_src/57716444.htm" class="localvar">n</a>) {
<a id=1286></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1287></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57716580.htm" class="localvar">L</a>, n);
<a id=1288></a>  if (<a href="../h_src/57716444.htm" class="localvar">n</a> &gt; 0)
<a id=1289></a>    <a href="../h_src/57610868.htm" class="function">luaV_concat</a>(<a href="../h_src/57716580.htm" class="localvar">L</a>, <a href="../h_src/57716444.htm" class="localvar">n</a>);
<a id=1290></a>  else {  <a  class="comments">/* nothing to concatenate */</a>
<a id=1291></a>    <a href="../h_src/57524096.htm" class="macro">setsvalue2s</a>(<a href="../h_src/57716580.htm" class="localvar">L</a>, <a href="../h_src/57716580.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57618552.htm" class="function">luaS_newlstr</a>(<a href="../h_src/57716580.htm" class="localvar">L</a>, &quot;&quot;, 0));  <a  class="comments">/* push empty string */</a>
<a id=1292></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57716580.htm" class="localvar">L</a>);
  }
<a id=1294></a>  <a href="../h_src/57621612.htm" class="macro">luaC_checkGC</a>(<a href="../h_src/57716580.htm" class="localvar">L</a>);
<a id=1295></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=1299></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57430176.htm" class="function">lua_len</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57716036.htm" class="localvar">L</a>, int <a href="../h_src/57715900.htm" class="localvar">idx</a>) {
<a id=1300></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57715764.htm" class="localvar">t</a>;
<a id=1301></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1302></a>  <a href="../h_src/57715764.htm" class="localvar">t</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57716036.htm" class="localvar">L</a>, <a href="../h_src/57715900.htm" class="localvar">idx</a>);
<a id=1303></a>  <a href="../h_src/57610528.htm" class="function">luaV_objlen</a>(<a href="../h_src/57716036.htm" class="localvar">L</a>, <a href="../h_src/57716036.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57715764.htm" class="localvar">t</a>);
<a id=1304></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57716036.htm" class="localvar">L</a>);
<a id=1305></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=1309></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> <a href="../h_src/57440852.htm" class="type">lua_Alloc</a> <a href="../h_src/57430040.htm" class="function">lua_getallocf</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57715628.htm" class="localvar">L</a>, void **<a href="../h_src/57715492.htm" class="localvar">ud</a>) {
<a id=1310></a>  <a href="../h_src/57440852.htm" class="type">lua_Alloc</a> <a href="../h_src/57715356.htm" class="localvar">f</a>;
<a id=1311></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1312></a>  if (<a href="../h_src/57715492.htm" class="localvar">ud</a>) *<a href="../h_src/57715492.htm" class="localvar">ud</a> = <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57715628.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57646704.htm" class="variable">ud</a>;
<a id=1313></a>  <a href="../h_src/57715356.htm" class="localvar">f</a> = <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57715628.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57646772.htm" class="variable">frealloc</a>;
<a id=1314></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=1315></a>  return <a href="../h_src/57715356.htm" class="localvar">f</a>;
}


<a id=1319></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57429904.htm" class="function">lua_setallocf</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57715152.htm" class="localvar">L</a>, <a href="../h_src/57440852.htm" class="type">lua_Alloc</a> <a href="../h_src/57715016.htm" class="localvar">f</a>, void *<a href="../h_src/57714880.htm" class="localvar">ud</a>) {
<a id=1320></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1321></a>  <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57715152.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57646704.htm" class="variable">ud</a> = <a href="../h_src/57714880.htm" class="localvar">ud</a>;
<a id=1322></a>  <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57715152.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57646772.htm" class="variable">frealloc</a> = <a href="../h_src/57715016.htm" class="localvar">f</a>;
<a id=1323></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=1327></a>void <a href="../h_src/57432080.htm" class="function">lua_setwarnf</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57714744.htm" class="localvar">L</a>, <a href="../h_src/57440648.htm" class="type">lua_WarnFunction</a> <a href="../h_src/57714608.htm" class="localvar">f</a>, void *<a href="../h_src/57714472.htm" class="localvar">ud</a>) {
<a id=1328></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1329></a>  <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57714744.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57643168.htm" class="variable">ud_warn</a> = <a href="../h_src/57714472.htm" class="localvar">ud</a>;
<a id=1330></a>  <a href="../h_src/57641196.htm" class="macro">G</a>(<a href="../h_src/57714744.htm" class="localvar">L</a>)-&gt;<a href="../h_src/57643236.htm" class="variable">warnf</a> = <a href="../h_src/57714608.htm" class="localvar">f</a>;
<a id=1331></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}


<a id=1335></a>void <a href="../h_src/57432012.htm" class="function">lua_warning</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57714336.htm" class="localvar">L</a>, const char *<a href="../h_src/57714200.htm" class="localvar">msg</a>, int <a href="../h_src/57714064.htm" class="localvar">tocont</a>) {
<a id=1336></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1337></a>  <a href="../h_src/57638136.htm" class="function">luaE_warning</a>(<a href="../h_src/57714336.htm" class="localvar">L</a>, <a href="../h_src/57714200.htm" class="localvar">msg</a>, <a href="../h_src/57714064.htm" class="localvar">tocont</a>);
<a id=1338></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
}



<a id=1343></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void *<a href="../h_src/57433848.htm" class="function">lua_newuserdatauv</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57713928.htm" class="localvar">L</a>, <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/57713792.htm" class="localvar">size</a>, int <a href="../h_src/57713656.htm" class="localvar">nuvalue</a>) {
<a id=1344></a>  <a href="../h_src/57519268.htm" class="type">Udata</a> *<a href="../h_src/57713520.htm" class="localvar">u</a>;
<a id=1345></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1346></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57713928.htm" class="localvar">L</a>, 0 &lt;= nuvalue &amp;&amp; nuvalue &lt; USHRT_MAX, &quot;invalid value&quot;);
<a id=1347></a>  <a href="../h_src/57713520.htm" class="localvar">u</a> = <a href="../h_src/57618620.htm" class="function">luaS_newudata</a>(<a href="../h_src/57713928.htm" class="localvar">L</a>, <a href="../h_src/57713792.htm" class="localvar">size</a>, <a href="../h_src/57713656.htm" class="localvar">nuvalue</a>);
<a id=1348></a>  <a href="../h_src/57521036.htm" class="macro">setuvalue</a>(<a href="../h_src/57713928.htm" class="localvar">L</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57713928.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>), <a href="../h_src/57713520.htm" class="localvar">u</a>);
<a id=1349></a>  <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57713928.htm" class="localvar">L</a>);
<a id=1350></a>  <a href="../h_src/57621612.htm" class="macro">luaC_checkGC</a>(<a href="../h_src/57713928.htm" class="localvar">L</a>);
<a id=1351></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=1352></a>  return <a href="../h_src/57517908.htm" class="macro">getudatamem</a>(<a href="../h_src/57713520.htm" class="localvar">u</a>);
}



<a id=1357></a>static const char *<a href="../h_src/57713112.htm" class="function">aux_upvalue</a> (<a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57712976.htm" class="localvar">fi</a>, int <a href="../h_src/57712840.htm" class="localvar">n</a>, <a href="../h_src/57535384.htm" class="type">TValue</a> **<a href="../h_src/57712636.htm" class="localvar">val</a>,
<a id=1358></a>                                <a href="../h_src/57527972.htm" class="type">GCObject</a> **<a href="../h_src/57712500.htm" class="localvar">owner</a>) {
<a id=1359></a>  switch (<a href="../h_src/57534636.htm" class="macro">ttypetag</a>(<a href="../h_src/57712976.htm" class="localvar">fi</a>)) {
<a id=1360></a>    case <a href="../h_src/57513352.htm" class="macro">LUA_VCCL</a>: {  <a  class="comments">/* C closure */</a>
<a id=1361></a>      <a href="../h_src/57508728.htm" class="type">CClosure</a> *<a href="../h_src/57712364.htm" class="localvar">f</a> = <a href="../h_src/57511992.htm" class="macro">clCvalue</a>(<a href="../h_src/57712976.htm" class="localvar">fi</a>);
<a id=1362></a>      if (!(<a href="../h_src/57547080.htm" class="macro">cast_uint</a>(<a href="../h_src/57712840.htm" class="localvar">n</a>) - 1u &lt; <a href="../h_src/57547080.htm" class="macro">cast_uint</a>(<a href="../h_src/57712364.htm" class="localvar">f</a>-&gt;<a href="../h_src/57509068.htm" class="variable">nupvalues</a>)))
<a id=1363></a>        return NULL;  <a  class="comments">/* 'n' not in [1, f-&gt;nupvalues] */</a>
<a id=1364></a>      *<a href="../h_src/57712636.htm" class="localvar">val</a> = &amp;<a href="../h_src/57712364.htm" class="localvar">f</a>-&gt;<a href="../h_src/57508796.htm" class="variable">upvalue</a>[<a href="../h_src/57712840.htm" class="localvar">n</a>-1];
<a id=1365></a>      if (<a href="../h_src/57712500.htm" class="localvar">owner</a>) *<a href="../h_src/57712500.htm" class="localvar">owner</a> = <a href="../h_src/57638884.htm" class="macro">obj2gco</a>(<a href="../h_src/57712364.htm" class="localvar">f</a>);
      return &quot;&quot;;
    }
<a id=1368></a>    case <a href="../h_src/57513624.htm" class="macro">LUA_VLCL</a>: {  <a  class="comments">/* Lua closure */</a>
<a id=1369></a>      <a href="../h_src/57507980.htm" class="type">LClosure</a> *<a href="../h_src/57712228.htm" class="localvar">f</a> = <a href="../h_src/57512264.htm" class="macro">clLvalue</a>(<a href="../h_src/57712976.htm" class="localvar">fi</a>);
<a id=1370></a>      <a href="../h_src/57522736.htm" class="type">TString</a> *<a href="../h_src/57712092.htm" class="localvar">name</a>;
<a id=1371></a>      <a href="../h_src/57513828.htm" class="type">Proto</a> *<a href="../h_src/57711956.htm" class="localvar">p</a> = <a href="../h_src/57712228.htm" class="localvar">f</a>-&gt;<a href="../h_src/57508184.htm" class="variable">p</a>;
<a id=1372></a>      if (!(<a href="../h_src/57547080.htm" class="macro">cast_uint</a>(<a href="../h_src/57712840.htm" class="localvar">n</a>) - 1u  &lt; <a href="../h_src/57547080.htm" class="macro">cast_uint</a>(<a href="../h_src/57711956.htm" class="localvar">p</a>-&gt;<a href="../h_src/57515732.htm" class="variable">sizeupvalues</a>)))
<a id=1373></a>        return NULL;  <a  class="comments">/* 'n' not in [1, p-&gt;sizeupvalues] */</a>
<a id=1374></a>      *<a href="../h_src/57712636.htm" class="localvar">val</a> = <a href="../h_src/57712228.htm" class="localvar">f</a>-&gt;<a href="../h_src/57508048.htm" class="variable">upvals</a>[<a href="../h_src/57712840.htm" class="localvar">n</a>-1]-&gt;<a href="../h_src/57510564.htm" class="variable">v</a>.<a href="../h_src/57510768.htm" class="variable">p</a>;
<a id=1375></a>      if (<a href="../h_src/57712500.htm" class="localvar">owner</a>) *<a href="../h_src/57712500.htm" class="localvar">owner</a> = <a href="../h_src/57638884.htm" class="macro">obj2gco</a>(<a href="../h_src/57712228.htm" class="localvar">f</a>-&gt;<a href="../h_src/57508048.htm" class="variable">upvals</a>[<a href="../h_src/57712840.htm" class="localvar">n</a> - 1]);
<a id=1376></a>      <a href="../h_src/57712092.htm" class="localvar">name</a> = <a href="../h_src/57711956.htm" class="localvar">p</a>-&gt;<a href="../h_src/57514440.htm" class="variable">upvalues</a>[<a href="../h_src/57712840.htm" class="localvar">n</a>-1].<a href="../h_src/57517364.htm" class="variable">name</a>;
<a id=1377></a>      return (<a href="../h_src/57712092.htm" class="localvar">name</a> == NULL) ? &quot;(no name)&quot; : <a href="../h_src/57522668.htm" class="macro">getstr</a>(<a href="../h_src/57712092.htm" class="localvar">name</a>);
    }
<a id=1379></a>    default: return NULL;  <a  class="comments">/* not a closure */</a>
  }
}


<a id=1384></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> const char *<a href="../h_src/57424396.htm" class="function">lua_getupvalue</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57711820.htm" class="localvar">L</a>, int <a href="../h_src/57711684.htm" class="localvar">funcindex</a>, int <a href="../h_src/57711548.htm" class="localvar">n</a>) {
<a id=1385></a>  const char *<a href="../h_src/57711412.htm" class="localvar">name</a>;
<a id=1386></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57711276.htm" class="localvar">val</a> = NULL;  <a  class="comments">/* to avoid warnings */</a>
<a id=1387></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1388></a>  <a href="../h_src/57711412.htm" class="localvar">name</a> = <a href="../h_src/57713112.htm" class="function">aux_upvalue</a>(<a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57711820.htm" class="localvar">L</a>, <a href="../h_src/57711684.htm" class="localvar">funcindex</a>), <a href="../h_src/57711548.htm" class="localvar">n</a>, &amp;<a href="../h_src/57711276.htm" class="localvar">val</a>, NULL);
<a id=1389></a>  if (<a href="../h_src/57711412.htm" class="localvar">name</a>) {
<a id=1390></a>    <a href="../h_src/57533412.htm" class="macro">setobj2s</a>(<a href="../h_src/57711820.htm" class="localvar">L</a>, <a href="../h_src/57711820.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>, <a href="../h_src/57711276.htm" class="localvar">val</a>);
<a id=1391></a>    <a href="../h_src/57637932.htm" class="macro">api_incr_top</a>(<a href="../h_src/57711820.htm" class="localvar">L</a>);
  }
<a id=1393></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=1394></a>  return <a href="../h_src/57711412.htm" class="localvar">name</a>;
}


<a id=1398></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> const char *<a href="../h_src/57424328.htm" class="function">lua_setupvalue</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57710868.htm" class="localvar">L</a>, int <a href="../h_src/57710732.htm" class="localvar">funcindex</a>, int <a href="../h_src/57710596.htm" class="localvar">n</a>) {
<a id=1399></a>  const char *<a href="../h_src/57710460.htm" class="localvar">name</a>;
<a id=1400></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57710324.htm" class="localvar">val</a> = NULL;  <a  class="comments">/* to avoid warnings */</a>
<a id=1401></a>  <a href="../h_src/57527972.htm" class="type">GCObject</a> *<a href="../h_src/57710188.htm" class="localvar">owner</a> = NULL;  <a  class="comments">/* to avoid warnings */</a>
<a id=1402></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57710052.htm" class="localvar">fi</a>;
<a id=1403></a>  <a href="../h_src/57543408.htm" class="macro">lua_lock</a>(L);
<a id=1404></a>  <a href="../h_src/57710052.htm" class="localvar">fi</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57710868.htm" class="localvar">L</a>, <a href="../h_src/57710732.htm" class="localvar">funcindex</a>);
<a id=1405></a>  <a href="../h_src/57637660.htm" class="macro">api_checknelems</a>(<a href="../h_src/57710868.htm" class="localvar">L</a>, 1);
<a id=1406></a>  <a href="../h_src/57710460.htm" class="localvar">name</a> = <a href="../h_src/57713112.htm" class="function">aux_upvalue</a>(<a href="../h_src/57710052.htm" class="localvar">fi</a>, <a href="../h_src/57710596.htm" class="localvar">n</a>, &amp;<a href="../h_src/57710324.htm" class="localvar">val</a>, &amp;<a href="../h_src/57710188.htm" class="localvar">owner</a>);
<a id=1407></a>  if (<a href="../h_src/57710460.htm" class="localvar">name</a>) {
<a id=1408></a>    <a href="../h_src/57710868.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>--;
<a id=1409></a>    <a href="../h_src/57533684.htm" class="macro">setobj</a>(<a href="../h_src/57710868.htm" class="localvar">L</a>, <a href="../h_src/57710324.htm" class="localvar">val</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/57710868.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>));
<a id=1410></a>    <a href="../h_src/57621340.htm" class="macro">luaC_barrier</a>(<a href="../h_src/57710868.htm" class="localvar">L</a>, <a href="../h_src/57710188.htm" class="localvar">owner</a>, <a href="../h_src/57710324.htm" class="localvar">val</a>);
  }
<a id=1412></a>  <a href="../h_src/57543272.htm" class="macro">lua_unlock</a>(L);
<a id=1413></a>  return <a href="../h_src/57710460.htm" class="localvar">name</a>;
}


<a id=1417></a>static <a href="../h_src/57509612.htm" class="type">UpVal</a> **<a href="../h_src/57709644.htm" class="function">getupvalref</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57709508.htm" class="localvar">L</a>, int <a href="../h_src/57709372.htm" class="localvar">fidx</a>, int <a href="../h_src/57709236.htm" class="localvar">n</a>, <a href="../h_src/57507980.htm" class="type">LClosure</a> **<a href="../h_src/57709032.htm" class="localvar">pf</a>) {
<a id=1418></a>  static const <a href="../h_src/57509612.htm" class="type">UpVal</a> *const <a href="../h_src/57708896.htm" class="localvar">nullup</a> = NULL;
<a id=1419></a>  <a href="../h_src/57507980.htm" class="type">LClosure</a> *<a href="../h_src/57708760.htm" class="localvar">f</a>;
<a id=1420></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57708624.htm" class="localvar">fi</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57709508.htm" class="localvar">L</a>, <a href="../h_src/57709372.htm" class="localvar">fidx</a>);
<a id=1421></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57709508.htm" class="localvar">L</a>, <a href="../h_src/57513080.htm" class="macro">ttisLclosure</a>(fi), &quot;Lua function expected&quot;);
<a id=1422></a>  <a href="../h_src/57708760.htm" class="localvar">f</a> = <a href="../h_src/57512264.htm" class="macro">clLvalue</a>(<a href="../h_src/57708624.htm" class="localvar">fi</a>);
<a id=1423></a>  if (<a href="../h_src/57709032.htm" class="localvar">pf</a>) *<a href="../h_src/57709032.htm" class="localvar">pf</a> = <a href="../h_src/57708760.htm" class="localvar">f</a>;
<a id=1424></a>  if (1 &lt;= <a href="../h_src/57709236.htm" class="localvar">n</a> &amp;&amp; <a href="../h_src/57709236.htm" class="localvar">n</a> &lt;= <a href="../h_src/57708760.htm" class="localvar">f</a>-&gt;<a href="../h_src/57508184.htm" class="variable">p</a>-&gt;<a href="../h_src/57515732.htm" class="variable">sizeupvalues</a>)
<a id=1425></a>    return &amp;<a href="../h_src/57708760.htm" class="localvar">f</a>-&gt;<a href="../h_src/57508048.htm" class="variable">upvals</a>[<a href="../h_src/57709236.htm" class="localvar">n</a> - 1];  <a  class="comments">/* get its upvalue pointer */</a>
  else
<a id=1427></a>    return (<a href="../h_src/57509612.htm" class="type">UpVal</a>**)&amp;<a href="../h_src/57708896.htm" class="localvar">nullup</a>;
}


<a id=1431></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void *<a href="../h_src/57424260.htm" class="function">lua_upvalueid</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57708488.htm" class="localvar">L</a>, int <a href="../h_src/57708352.htm" class="localvar">fidx</a>, int <a href="../h_src/57708216.htm" class="localvar">n</a>) {
<a id=1432></a>  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/57708080.htm" class="localvar">fi</a> = <a href="../h_src/57610052.htm" class="function">index2value</a>(<a href="../h_src/57708488.htm" class="localvar">L</a>, <a href="../h_src/57708352.htm" class="localvar">fidx</a>);
<a id=1433></a>  switch (<a href="../h_src/57534636.htm" class="macro">ttypetag</a>(<a href="../h_src/57708080.htm" class="localvar">fi</a>)) {
<a id=1434></a>    case <a href="../h_src/57513624.htm" class="macro">LUA_VLCL</a>: {  <a  class="comments">/* lua closure */</a>
<a id=1435></a>      return *<a href="../h_src/57709644.htm" class="function">getupvalref</a>(<a href="../h_src/57708488.htm" class="localvar">L</a>, <a href="../h_src/57708352.htm" class="localvar">fidx</a>, <a href="../h_src/57708216.htm" class="localvar">n</a>, NULL);
    }
<a id=1437></a>    case <a href="../h_src/57513352.htm" class="macro">LUA_VCCL</a>: {  <a  class="comments">/* C closure */</a>
<a id=1438></a>      <a href="../h_src/57508728.htm" class="type">CClosure</a> *<a href="../h_src/57707944.htm" class="localvar">f</a> = <a href="../h_src/57511992.htm" class="macro">clCvalue</a>(<a href="../h_src/57708080.htm" class="localvar">fi</a>);
<a id=1439></a>      if (1 &lt;= <a href="../h_src/57708216.htm" class="localvar">n</a> &amp;&amp; <a href="../h_src/57708216.htm" class="localvar">n</a> &lt;= <a href="../h_src/57707944.htm" class="localvar">f</a>-&gt;<a href="../h_src/57509068.htm" class="variable">nupvalues</a>)
<a id=1440></a>        return &amp;<a href="../h_src/57707944.htm" class="localvar">f</a>-&gt;<a href="../h_src/57508796.htm" class="variable">upvalue</a>[<a href="../h_src/57708216.htm" class="localvar">n</a> - 1];
<a id=1441></a>      <a  class="comments">/* else */</a>
<a id=1442></a>    }  <a  class="comments">/* FALLTHROUGH */</a>
<a id=1443></a>    case <a href="../h_src/57513488.htm" class="macro">LUA_VLCF</a>:
<a id=1444></a>      return NULL;  <a  class="comments">/* light C functions have no upvalues */</a>
    default: {
<a id=1446></a>      <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57708488.htm" class="localvar">L</a>, 0, &quot;function expected&quot;);
      return NULL;
    }
  }
}


<a id=1453></a><a href="../h_src/57551840.htm" class="macro">LUA_API</a> void <a href="../h_src/57424192.htm" class="function">lua_upvaluejoin</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/57707808.htm" class="localvar">L</a>, int <a href="../h_src/57707672.htm" class="localvar">fidx1</a>, int <a href="../h_src/57707536.htm" class="localvar">n1</a>,
<a id=1454></a>                                            int <a href="../h_src/57707400.htm" class="localvar">fidx2</a>, int <a href="../h_src/57707264.htm" class="localvar">n2</a>) {
<a id=1455></a>  <a href="../h_src/57507980.htm" class="type">LClosure</a> *<a href="../h_src/57707128.htm" class="localvar">f1</a>;
<a id=1456></a>  <a href="../h_src/57509612.htm" class="type">UpVal</a> **<a href="../h_src/57706992.htm" class="localvar">up1</a> = <a href="../h_src/57709644.htm" class="function">getupvalref</a>(<a href="../h_src/57707808.htm" class="localvar">L</a>, <a href="../h_src/57707672.htm" class="localvar">fidx1</a>, <a href="../h_src/57707536.htm" class="localvar">n1</a>, &amp;<a href="../h_src/57707128.htm" class="localvar">f1</a>);
<a id=1457></a>  <a href="../h_src/57509612.htm" class="type">UpVal</a> **<a href="../h_src/57706856.htm" class="localvar">up2</a> = <a href="../h_src/57709644.htm" class="function">getupvalref</a>(<a href="../h_src/57707808.htm" class="localvar">L</a>, <a href="../h_src/57707400.htm" class="localvar">fidx2</a>, <a href="../h_src/57707264.htm" class="localvar">n2</a>, NULL);
<a id=1458></a>  <a href="../h_src/57548168.htm" class="macro">api_check</a>(<a href="../h_src/57707808.htm" class="localvar">L</a>, *up1 != NULL &amp;&amp; *up2 != NULL, &quot;invalid upvalue index&quot;);
<a id=1459></a>  *<a href="../h_src/57706992.htm" class="localvar">up1</a> = *<a href="../h_src/57706856.htm" class="localvar">up2</a>;
<a id=1460></a>  <a href="../h_src/57621476.htm" class="macro">luaC_objbarrier</a>(<a href="../h_src/57707808.htm" class="localvar">L</a>, <a href="../h_src/57707128.htm" class="localvar">f1</a>, *<a href="../h_src/57706992.htm" class="localvar">up1</a>);
}


</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

