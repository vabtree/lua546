<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>ldblib.c</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/58287060.htm" class="file" target="_self">Info</a></li>
<li><a href="../h_im/58287060.htm" class="file" target="_self">Global Interface</a></li>
<li><a href="../h_rx/58287060.htm" class="file" target="_self">File Inclusion</a></li>
<li><a href="../h_nm/58287060.htm" class="file" target="_self">Internals</a></li>
<li><a href="../h_uf/58287060.htm" class="file" target="_self">Use of Elements</a></li>
<li><a href="../h_df/58287060.htm" class="file" target="_self">Dependencies</a></li>
<li id="current"><a href="../h_src/58287060.htm" class="file" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/58287060.htm" class="file" target="_self">Source Code</a></li>
<li><a href="../h_sc/58287060.htm" class="file" target="_self">Source Checks</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<pre class=src>
<a id=1></a><a  class="comments">/*</a>
<a id=2></a><a  class="comments">** $Id: ldblib.c $</a>
<a id=3></a><a  class="comments">** Interface from Lua to its debug API</a>
<a id=4></a><a  class="comments">** See Copyright Notice in lua.h</a>
<a id=5></a><a  class="comments">*/</a>

<a id=7></a>#define <a href="../h_src/58286992.htm" class="macro">ldblib_c</a>
<a id=8></a>#define <a href="../h_src/58286856.htm" class="macro">LUA_LIB</a>

<a id=10></a>#include &quot;<a href="../h_src/57461592.htm" class="file">lprefix.h</a>&quot;


#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

<a id=17></a>#include &quot;<a href="../h_src/57460028.htm" class="file">lua.h</a>&quot;

<a id=19></a>#include &quot;<a href="../h_src/57422356.htm" class="file">lauxlib.h</a>&quot;
<a id=20></a>#include &quot;<a href="../h_src/57410932.htm" class="file">lualib.h</a>&quot;


<a id=23></a><a  class="comments">/*</a>
<a id=24></a><a  class="comments">** The hook table at registry[HOOKKEY] maps threads to their current</a>
<a id=25></a><a  class="comments">** hook function.</a>
<a id=26></a><a  class="comments">*/</a>
<a id=27></a>static const char *const <a href="../h_src/58286720.htm" class="variable">HOOKKEY</a> = &quot;_HOOKKEY&quot;;


<a id=30></a><a  class="comments">/*</a>
<a id=31></a><a  class="comments">** If L1 != L, L1 can be in any state, and therefore there are no</a>
<a id=32></a><a  class="comments">** guarantees about its stack space; any push in L1 must be</a>
<a id=33></a><a  class="comments">** checked.</a>
<a id=34></a><a  class="comments">*/</a>
<a id=35></a>static void <a href="../h_src/58286652.htm" class="function">checkstack</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58286516.htm" class="localvar">L</a>, <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58286380.htm" class="localvar">L1</a>, int <a href="../h_src/58286244.htm" class="localvar">n</a>) {
<a id=36></a>  if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(<a href="../h_src/58286516.htm" class="localvar">L</a> != <a href="../h_src/58286380.htm" class="localvar">L1</a> &amp;&amp; !<a href="../h_src/57439016.htm" class="function">lua_checkstack</a>(<a href="../h_src/58286380.htm" class="localvar">L1</a>, <a href="../h_src/58286244.htm" class="localvar">n</a>)))
<a id=37></a>    <a href="../h_src/57419296.htm" class="function">luaL_error</a>(<a href="../h_src/58286516.htm" class="localvar">L</a>, &quot;stack overflow&quot;);
}


<a id=41></a>static int <a href="../h_src/58286108.htm" class="function">db_getregistry</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58285972.htm" class="localvar">L</a>) {
<a id=42></a>  <a href="../h_src/57439220.htm" class="function">lua_pushvalue</a>(<a href="../h_src/58285972.htm" class="localvar">L</a>, <a href="../h_src/57445476.htm" class="macro">LUA_REGISTRYINDEX</a>);
  return 1;
}


<a id=47></a>static int <a href="../h_src/58285836.htm" class="function">db_getmetatable</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58285700.htm" class="localvar">L</a>) {
<a id=48></a>  <a href="../h_src/57419704.htm" class="function">luaL_checkany</a>(<a href="../h_src/58285700.htm" class="localvar">L</a>, 1);
<a id=49></a>  if (!<a href="../h_src/57433780.htm" class="function">lua_getmetatable</a>(<a href="../h_src/58285700.htm" class="localvar">L</a>, 1)) {
<a id=50></a>    <a href="../h_src/57435276.htm" class="function">lua_pushnil</a>(<a href="../h_src/58285700.htm" class="localvar">L</a>);  <a  class="comments">/* no metatable */</a>
  }
  return 1;
}


<a id=56></a>static int <a href="../h_src/58285564.htm" class="function">db_setmetatable</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58285428.htm" class="localvar">L</a>) {
<a id=57></a>  int <a href="../h_src/58285292.htm" class="localvar">t</a> = <a href="../h_src/57438540.htm" class="function">lua_type</a>(<a href="../h_src/58285428.htm" class="localvar">L</a>, 2);
<a id=58></a>  <a href="../h_src/57417120.htm" class="macro">luaL_argexpected</a>(<a href="../h_src/58285428.htm" class="localvar">L</a>, <a href="../h_src/58285292.htm" class="localvar">t</a> == <a href="../h_src/57444048.htm" class="macro">LUA_TNIL</a> || t == <a href="../h_src/57443368.htm" class="macro">LUA_TTABLE</a>, 2, &quot;nil or table&quot;);
<a id=59></a>  <a href="../h_src/57439288.htm" class="function">lua_settop</a>(<a href="../h_src/58285428.htm" class="localvar">L</a>, 2);
<a id=60></a>  <a href="../h_src/57433168.htm" class="function">lua_setmetatable</a>(<a href="../h_src/58285428.htm" class="localvar">L</a>, 1);
<a id=61></a>  return 1;  <a  class="comments">/* return 1st argument */</a>
}


<a id=65></a>static int <a href="../h_src/58285156.htm" class="function">db_getuservalue</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58285020.htm" class="localvar">L</a>) {
<a id=66></a>  int <a href="../h_src/58284884.htm" class="localvar">n</a> = (int)<a href="../h_src/57419908.htm" class="function">luaL_optinteger</a>(<a href="../h_src/58285020.htm" class="localvar">L</a>, 2, 1);
<a id=67></a>  if (<a href="../h_src/57438540.htm" class="function">lua_type</a>(<a href="../h_src/58285020.htm" class="localvar">L</a>, 1) != <a href="../h_src/57443096.htm" class="macro">LUA_TUSERDATA</a>)
<a id=68></a>    <a href="../h_src/57415760.htm" class="macro">luaL_pushfail</a>(<a href="../h_src/58285020.htm" class="localvar">L</a>);
<a id=69></a>  else if (<a href="../h_src/57433712.htm" class="function">lua_getiuservalue</a>(<a href="../h_src/58285020.htm" class="localvar">L</a>, 1, <a href="../h_src/58284884.htm" class="localvar">n</a>) != <a href="../h_src/57444184.htm" class="macro">LUA_TNONE</a>) {
<a id=70></a>    <a href="../h_src/57434596.htm" class="function">lua_pushboolean</a>(<a href="../h_src/58285020.htm" class="localvar">L</a>, 1);
    return 2;
  }
  return 1;
}


<a id=77></a>static int <a href="../h_src/58284748.htm" class="function">db_setuservalue</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58284612.htm" class="localvar">L</a>) {
<a id=78></a>  int <a href="../h_src/58284476.htm" class="localvar">n</a> = (int)<a href="../h_src/57419908.htm" class="function">luaL_optinteger</a>(<a href="../h_src/58284612.htm" class="localvar">L</a>, 3, 1);
<a id=79></a>  <a href="../h_src/57419772.htm" class="function">luaL_checktype</a>(<a href="../h_src/58284612.htm" class="localvar">L</a>, 1, <a href="../h_src/57443096.htm" class="macro">LUA_TUSERDATA</a>);
<a id=80></a>  <a href="../h_src/57419704.htm" class="function">luaL_checkany</a>(<a href="../h_src/58284612.htm" class="localvar">L</a>, 2);
<a id=81></a>  <a href="../h_src/57439288.htm" class="function">lua_settop</a>(<a href="../h_src/58284612.htm" class="localvar">L</a>, 2);
<a id=82></a>  if (!<a href="../h_src/57433100.htm" class="function">lua_setiuservalue</a>(<a href="../h_src/58284612.htm" class="localvar">L</a>, 1, <a href="../h_src/58284476.htm" class="localvar">n</a>))
<a id=83></a>    <a href="../h_src/57415760.htm" class="macro">luaL_pushfail</a>(<a href="../h_src/58284612.htm" class="localvar">L</a>);
  return 1;
}


<a id=88></a><a  class="comments">/*</a>
<a id=89></a><a  class="comments">** Auxiliary function used by several library functions: check for</a>
<a id=90></a><a  class="comments">** an optional thread as function's first argument and set 'arg' with</a>
<a id=91></a><a  class="comments">** 1 if this argument is present (so that functions can skip it to</a>
<a id=92></a><a  class="comments">** access their other arguments)</a>
<a id=93></a><a  class="comments">*/</a>
<a id=94></a>static <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58284340.htm" class="function">getthread</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58284204.htm" class="localvar">L</a>, int *<a href="../h_src/58284068.htm" class="localvar">arg</a>) {
<a id=95></a>  if (<a href="../h_src/57428068.htm" class="macro">lua_isthread</a>(<a href="../h_src/58284204.htm" class="localvar">L</a>, 1)) {
<a id=96></a>    *<a href="../h_src/58284068.htm" class="localvar">arg</a> = 1;
<a id=97></a>    return <a href="../h_src/57437928.htm" class="function">lua_tothread</a>(<a href="../h_src/58284204.htm" class="localvar">L</a>, 1);
  }
  else {
<a id=100></a>    *<a href="../h_src/58284068.htm" class="localvar">arg</a> = 0;
<a id=101></a>    return <a href="../h_src/58284204.htm" class="localvar">L</a>;  <a  class="comments">/* function will operate over current thread */</a>
  }
}


<a id=106></a><a  class="comments">/*</a>
<a id=107></a><a  class="comments">** Variations of 'lua_settable', used by 'db_getinfo' to put results</a>
<a id=108></a><a  class="comments">** from 'lua_getinfo' into result table. Key is always a string;</a>
<a id=109></a><a  class="comments">** value can be a string, an int, or a boolean.</a>
<a id=110></a><a  class="comments">*/</a>
<a id=111></a>static void <a href="../h_src/58283932.htm" class="function">settabss</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58283796.htm" class="localvar">L</a>, const char *<a href="../h_src/58283660.htm" class="localvar">k</a>, const char *<a href="../h_src/58283524.htm" class="localvar">v</a>) {
<a id=112></a>  <a href="../h_src/57435004.htm" class="function">lua_pushstring</a>(<a href="../h_src/58283796.htm" class="localvar">L</a>, <a href="../h_src/58283524.htm" class="localvar">v</a>);
<a id=113></a>  <a href="../h_src/57433508.htm" class="function">lua_setfield</a>(<a href="../h_src/58283796.htm" class="localvar">L</a>, -2, <a href="../h_src/58283660.htm" class="localvar">k</a>);
}

<a id=116></a>static void <a href="../h_src/58283388.htm" class="function">settabsi</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58283252.htm" class="localvar">L</a>, const char *<a href="../h_src/58283116.htm" class="localvar">k</a>, int <a href="../h_src/58282980.htm" class="localvar">v</a>) {
<a id=117></a>  <a href="../h_src/57435140.htm" class="function">lua_pushinteger</a>(<a href="../h_src/58283252.htm" class="localvar">L</a>, <a href="../h_src/58282980.htm" class="localvar">v</a>);
<a id=118></a>  <a href="../h_src/57433508.htm" class="function">lua_setfield</a>(<a href="../h_src/58283252.htm" class="localvar">L</a>, -2, <a href="../h_src/58283116.htm" class="localvar">k</a>);
}

<a id=121></a>static void <a href="../h_src/58282844.htm" class="function">settabsb</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58282708.htm" class="localvar">L</a>, const char *<a href="../h_src/58282572.htm" class="localvar">k</a>, int <a href="../h_src/58282436.htm" class="localvar">v</a>) {
<a id=122></a>  <a href="../h_src/57434596.htm" class="function">lua_pushboolean</a>(<a href="../h_src/58282708.htm" class="localvar">L</a>, <a href="../h_src/58282436.htm" class="localvar">v</a>);
<a id=123></a>  <a href="../h_src/57433508.htm" class="function">lua_setfield</a>(<a href="../h_src/58282708.htm" class="localvar">L</a>, -2, <a href="../h_src/58282572.htm" class="localvar">k</a>);
}


<a id=127></a><a  class="comments">/*</a>
<a id=128></a><a  class="comments">** In function 'db_getinfo', the call to 'lua_getinfo' may push</a>
<a id=129></a><a  class="comments">** results on the stack; later it creates the result table to put</a>
<a id=130></a><a  class="comments">** these objects. Function 'treatstackoption' puts the result from</a>
<a id=131></a><a  class="comments">** 'lua_getinfo' on top of the result table so that it can call</a>
<a id=132></a><a  class="comments">** 'lua_setfield'.</a>
<a id=133></a><a  class="comments">*/</a>
<a id=134></a>static void <a href="../h_src/58282300.htm" class="function">treatstackoption</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58282164.htm" class="localvar">L</a>, <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58282028.htm" class="localvar">L1</a>, const char *<a href="../h_src/58281892.htm" class="localvar">fname</a>) {
<a id=135></a>  if (<a href="../h_src/58282164.htm" class="localvar">L</a> == <a href="../h_src/58282028.htm" class="localvar">L1</a>)
<a id=136></a>    <a href="../h_src/57439152.htm" class="function">lua_rotate</a>(<a href="../h_src/58282164.htm" class="localvar">L</a>, -2, 1);  <a  class="comments">/* exchange object and table */</a>
  else
<a id=138></a>    <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/58282028.htm" class="localvar">L1</a>, <a href="../h_src/58282164.htm" class="localvar">L</a>, 1);  <a  class="comments">/* move object to the &quot;main&quot; stack */</a>
<a id=139></a>  <a href="../h_src/57433508.htm" class="function">lua_setfield</a>(<a href="../h_src/58282164.htm" class="localvar">L</a>, -2, <a href="../h_src/58281892.htm" class="localvar">fname</a>);  <a  class="comments">/* put object into table */</a>
}


<a id=143></a><a  class="comments">/*</a>
<a id=144></a><a  class="comments">** Calls 'lua_getinfo' and collects all results in a new table.</a>
<a id=145></a><a  class="comments">** L1 needs stack space for an optional input (function) plus</a>
<a id=146></a><a  class="comments">** two optional outputs (function and line table) from function</a>
<a id=147></a><a  class="comments">** 'lua_getinfo'.</a>
<a id=148></a><a  class="comments">*/</a>
<a id=149></a>static int <a href="../h_src/58281756.htm" class="function">db_getinfo</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58281620.htm" class="localvar">L</a>) {
<a id=150></a>  <a href="../h_src/57440308.htm" class="type">lua_Debug</a> <a href="../h_src/58281484.htm" class="localvar">ar</a>;
<a id=151></a>  int <a href="../h_src/143276164.htm" class="localvar">arg</a>;
<a id=152></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143276028.htm" class="localvar">L1</a> = <a href="../h_src/58284340.htm" class="function">getthread</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &amp;<a href="../h_src/143276164.htm" class="localvar">arg</a>);
<a id=153></a>  const char *<a href="../h_src/143275892.htm" class="localvar">options</a> = <a href="../h_src/57416848.htm" class="macro">luaL_optstring</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/143276164.htm" class="localvar">arg</a>+2, &quot;flnSrtu&quot;);
<a id=154></a>  <a href="../h_src/58286652.htm" class="function">checkstack</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/143276028.htm" class="localvar">L1</a>, 3);
<a id=155></a>  <a href="../h_src/57417256.htm" class="macro">luaL_argcheck</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/143275892.htm" class="localvar">options</a>[0] != '&gt;', <a href="../h_src/143276164.htm" class="localvar">arg</a> + 2, &quot;invalid option '&gt;'&quot;);
<a id=156></a>  if (<a href="../h_src/57428748.htm" class="macro">lua_isfunction</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/143276164.htm" class="localvar">arg</a> + 1)) {  <a  class="comments">/* info about a function? */</a>
<a id=157></a>    <a href="../h_src/143275892.htm" class="localvar">options</a> = <a href="../h_src/57434732.htm" class="function">lua_pushfstring</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;&gt;%s&quot;, <a href="../h_src/143275892.htm" class="localvar">options</a>);  <a  class="comments">/* add '&gt;' to 'options' */</a>
<a id=158></a>    <a href="../h_src/57439220.htm" class="function">lua_pushvalue</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/143276164.htm" class="localvar">arg</a> + 1);  <a  class="comments">/* move function to 'L1' stack */</a>
<a id=159></a>    <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/143276028.htm" class="localvar">L1</a>, 1);
  }
<a id=161></a>  else {  <a  class="comments">/* stack level */</a>
<a id=162></a>    if (!<a href="../h_src/57424668.htm" class="function">lua_getstack</a>(<a href="../h_src/143276028.htm" class="localvar">L1</a>, (int)<a href="../h_src/57419976.htm" class="function">luaL_checkinteger</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/143276164.htm" class="localvar">arg</a> + 1), &amp;<a href="../h_src/58281484.htm" class="localvar">ar</a>)) {
<a id=163></a>      <a href="../h_src/57415760.htm" class="macro">luaL_pushfail</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>);  <a  class="comments">/* level out of range */</a>
      return 1;
    }
  }
<a id=167></a>  if (!<a href="../h_src/57424600.htm" class="function">lua_getinfo</a>(<a href="../h_src/143276028.htm" class="localvar">L1</a>, <a href="../h_src/143275892.htm" class="localvar">options</a>, &amp;<a href="../h_src/58281484.htm" class="localvar">ar</a>))
<a id=168></a>    return <a href="../h_src/57420384.htm" class="function">luaL_argerror</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/143276164.htm" class="localvar">arg</a>+2, &quot;invalid option&quot;);
<a id=169></a>  <a href="../h_src/57429156.htm" class="macro">lua_newtable</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>);  <a  class="comments">/* table to collect results */</a>
<a id=170></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143275892.htm" class="localvar">options</a>, 'S')) {
<a id=171></a>    <a href="../h_src/57435072.htm" class="function">lua_pushlstring</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423512.htm" class="variable">source</a>, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423444.htm" class="variable">srclen</a>);
<a id=172></a>    <a href="../h_src/57433508.htm" class="function">lua_setfield</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, -2, &quot;source&quot;);
<a id=173></a>    <a href="../h_src/58283932.htm" class="function">settabss</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;short_src&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57422764.htm" class="variable">short_src</a>);
<a id=174></a>    <a href="../h_src/58283388.htm" class="function">settabsi</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;linedefined&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423308.htm" class="variable">linedefined</a>);
<a id=175></a>    <a href="../h_src/58283388.htm" class="function">settabsi</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;lastlinedefined&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423240.htm" class="variable">lastlinedefined</a>);
<a id=176></a>    <a href="../h_src/58283932.htm" class="function">settabss</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;what&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423580.htm" class="variable">what</a>);
  }
<a id=178></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143275892.htm" class="localvar">options</a>, 'l'))
<a id=179></a>    <a href="../h_src/58283388.htm" class="function">settabsi</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;currentline&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423376.htm" class="variable">currentline</a>);
<a id=180></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143275892.htm" class="localvar">options</a>, 'u')) {
<a id=181></a>    <a href="../h_src/58283388.htm" class="function">settabsi</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;nups&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423172.htm" class="variable">nups</a>);
<a id=182></a>    <a href="../h_src/58283388.htm" class="function">settabsi</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;nparams&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423104.htm" class="variable">nparams</a>);
<a id=183></a>    <a href="../h_src/58282844.htm" class="function">settabsb</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;isvararg&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423036.htm" class="variable">isvararg</a>);
  }
<a id=185></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143275892.htm" class="localvar">options</a>, 'n')) {
<a id=186></a>    <a href="../h_src/58283932.htm" class="function">settabss</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;name&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423716.htm" class="variable">name</a>);
<a id=187></a>    <a href="../h_src/58283932.htm" class="function">settabss</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;namewhat&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57423648.htm" class="variable">namewhat</a>);
  }
<a id=189></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143275892.htm" class="localvar">options</a>, 'r')) {
<a id=190></a>    <a href="../h_src/58283388.htm" class="function">settabsi</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;ftransfer&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57422900.htm" class="variable">ftransfer</a>);
<a id=191></a>    <a href="../h_src/58283388.htm" class="function">settabsi</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;ntransfer&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57422832.htm" class="variable">ntransfer</a>);
  }
<a id=193></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143275892.htm" class="localvar">options</a>, 't'))
<a id=194></a>    <a href="../h_src/58282844.htm" class="function">settabsb</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, &quot;istailcall&quot;, <a href="../h_src/58281484.htm" class="localvar">ar</a>.<a href="../h_src/57422968.htm" class="variable">istailcall</a>);
<a id=195></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143275892.htm" class="localvar">options</a>, 'L'))
<a id=196></a>    <a href="../h_src/58282300.htm" class="function">treatstackoption</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/143276028.htm" class="localvar">L1</a>, &quot;activelines&quot;);
<a id=197></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143275892.htm" class="localvar">options</a>, 'f'))
<a id=198></a>    <a href="../h_src/58282300.htm" class="function">treatstackoption</a>(<a href="../h_src/58281620.htm" class="localvar">L</a>, <a href="../h_src/143276028.htm" class="localvar">L1</a>, &quot;func&quot;);
<a id=199></a>  return 1;  <a  class="comments">/* return table */</a>
}


<a id=203></a>static int <a href="../h_src/143275756.htm" class="function">db_getlocal</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143275620.htm" class="localvar">L</a>) {
<a id=204></a>  int <a href="../h_src/143275484.htm" class="localvar">arg</a>;
<a id=205></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143275348.htm" class="localvar">L1</a> = <a href="../h_src/58284340.htm" class="function">getthread</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, &amp;<a href="../h_src/143275484.htm" class="localvar">arg</a>);
<a id=206></a>  int <a href="../h_src/143275212.htm" class="localvar">nvar</a> = (int)<a href="../h_src/57419976.htm" class="function">luaL_checkinteger</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, <a href="../h_src/143275484.htm" class="localvar">arg</a> + 2);  <a  class="comments">/* local-variable index */</a>
<a id=207></a>  if (<a href="../h_src/57428748.htm" class="macro">lua_isfunction</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, <a href="../h_src/143275484.htm" class="localvar">arg</a> + 1)) {  <a  class="comments">/* function argument? */</a>
<a id=208></a>    <a href="../h_src/57439220.htm" class="function">lua_pushvalue</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, <a href="../h_src/143275484.htm" class="localvar">arg</a> + 1);  <a  class="comments">/* push function */</a>
<a id=209></a>    <a href="../h_src/57435004.htm" class="function">lua_pushstring</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, <a href="../h_src/57424532.htm" class="function">lua_getlocal</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, NULL, <a href="../h_src/143275212.htm" class="localvar">nvar</a>));  <a  class="comments">/* push local name */</a>
<a id=210></a>    return 1;  <a  class="comments">/* return only name (there is no value) */</a>
  }
<a id=212></a>  else {  <a  class="comments">/* stack-level argument */</a>
<a id=213></a>    <a href="../h_src/57440308.htm" class="type">lua_Debug</a> <a href="../h_src/143275076.htm" class="localvar">ar</a>;
<a id=214></a>    const char *<a href="../h_src/143274940.htm" class="localvar">name</a>;
<a id=215></a>    int <a href="../h_src/143274804.htm" class="localvar">level</a> = (int)<a href="../h_src/57419976.htm" class="function">luaL_checkinteger</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, <a href="../h_src/143275484.htm" class="localvar">arg</a> + 1);
<a id=216></a>    if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(!<a href="../h_src/57424668.htm" class="function">lua_getstack</a>(<a href="../h_src/143275348.htm" class="localvar">L1</a>, <a href="../h_src/143274804.htm" class="localvar">level</a>, &amp;<a href="../h_src/143275076.htm" class="localvar">ar</a>)))  <a  class="comments">/* out of range? */</a>
<a id=217></a>      return <a href="../h_src/57420384.htm" class="function">luaL_argerror</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, <a href="../h_src/143275484.htm" class="localvar">arg</a>+1, &quot;level out of range&quot;);
<a id=218></a>    <a href="../h_src/58286652.htm" class="function">checkstack</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, <a href="../h_src/143275348.htm" class="localvar">L1</a>, 1);
<a id=219></a>    <a href="../h_src/143274940.htm" class="localvar">name</a> = <a href="../h_src/57424532.htm" class="function">lua_getlocal</a>(<a href="../h_src/143275348.htm" class="localvar">L1</a>, &amp;<a href="../h_src/143275076.htm" class="localvar">ar</a>, <a href="../h_src/143275212.htm" class="localvar">nvar</a>);
<a id=220></a>    if (<a href="../h_src/143274940.htm" class="localvar">name</a>) {
<a id=221></a>      <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/143275348.htm" class="localvar">L1</a>, <a href="../h_src/143275620.htm" class="localvar">L</a>, 1);  <a  class="comments">/* move local value */</a>
<a id=222></a>      <a href="../h_src/57435004.htm" class="function">lua_pushstring</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, <a href="../h_src/143274940.htm" class="localvar">name</a>);  <a  class="comments">/* push name */</a>
<a id=223></a>      <a href="../h_src/57439152.htm" class="function">lua_rotate</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>, -2, 1);  <a  class="comments">/* re-order */</a>
      return 2;
    }
    else {
<a id=227></a>      <a href="../h_src/57415760.htm" class="macro">luaL_pushfail</a>(<a href="../h_src/143275620.htm" class="localvar">L</a>);  <a  class="comments">/* no name (nor value) */</a>
      return 1;
    }
  }
}


<a id=234></a>static int <a href="../h_src/143274668.htm" class="function">db_setlocal</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143274532.htm" class="localvar">L</a>) {
<a id=235></a>  int <a href="../h_src/143274396.htm" class="localvar">arg</a>;
<a id=236></a>  const char *<a href="../h_src/143274260.htm" class="localvar">name</a>;
<a id=237></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143274124.htm" class="localvar">L1</a> = <a href="../h_src/58284340.htm" class="function">getthread</a>(<a href="../h_src/143274532.htm" class="localvar">L</a>, &amp;<a href="../h_src/143274396.htm" class="localvar">arg</a>);
<a id=238></a>  <a href="../h_src/57440308.htm" class="type">lua_Debug</a> <a href="../h_src/143273988.htm" class="localvar">ar</a>;
<a id=239></a>  int <a href="../h_src/143273852.htm" class="localvar">level</a> = (int)<a href="../h_src/57419976.htm" class="function">luaL_checkinteger</a>(<a href="../h_src/143274532.htm" class="localvar">L</a>, <a href="../h_src/143274396.htm" class="localvar">arg</a> + 1);
<a id=240></a>  int <a href="../h_src/143273716.htm" class="localvar">nvar</a> = (int)<a href="../h_src/57419976.htm" class="function">luaL_checkinteger</a>(<a href="../h_src/143274532.htm" class="localvar">L</a>, <a href="../h_src/143274396.htm" class="localvar">arg</a> + 2);
<a id=241></a>  if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(!<a href="../h_src/57424668.htm" class="function">lua_getstack</a>(<a href="../h_src/143274124.htm" class="localvar">L1</a>, <a href="../h_src/143273852.htm" class="localvar">level</a>, &amp;<a href="../h_src/143273988.htm" class="localvar">ar</a>)))  <a  class="comments">/* out of range? */</a>
<a id=242></a>    return <a href="../h_src/57420384.htm" class="function">luaL_argerror</a>(<a href="../h_src/143274532.htm" class="localvar">L</a>, <a href="../h_src/143274396.htm" class="localvar">arg</a>+1, &quot;level out of range&quot;);
<a id=243></a>  <a href="../h_src/57419704.htm" class="function">luaL_checkany</a>(<a href="../h_src/143274532.htm" class="localvar">L</a>, <a href="../h_src/143274396.htm" class="localvar">arg</a>+3);
<a id=244></a>  <a href="../h_src/57439288.htm" class="function">lua_settop</a>(<a href="../h_src/143274532.htm" class="localvar">L</a>, <a href="../h_src/143274396.htm" class="localvar">arg</a>+3);
<a id=245></a>  <a href="../h_src/58286652.htm" class="function">checkstack</a>(<a href="../h_src/143274532.htm" class="localvar">L</a>, <a href="../h_src/143274124.htm" class="localvar">L1</a>, 1);
<a id=246></a>  <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/143274532.htm" class="localvar">L</a>, <a href="../h_src/143274124.htm" class="localvar">L1</a>, 1);
<a id=247></a>  <a href="../h_src/143274260.htm" class="localvar">name</a> = <a href="../h_src/57424464.htm" class="function">lua_setlocal</a>(<a href="../h_src/143274124.htm" class="localvar">L1</a>, &amp;<a href="../h_src/143273988.htm" class="localvar">ar</a>, <a href="../h_src/143273716.htm" class="localvar">nvar</a>);
<a id=248></a>  if (<a href="../h_src/143274260.htm" class="localvar">name</a> == NULL)
<a id=249></a>    <a href="../h_src/57429292.htm" class="macro">lua_pop</a>(<a href="../h_src/143274124.htm" class="localvar">L1</a>, 1);  <a  class="comments">/* pop value (if not popped by 'lua_setlocal') */</a>
<a id=250></a>  <a href="../h_src/57435004.htm" class="function">lua_pushstring</a>(<a href="../h_src/143274532.htm" class="localvar">L</a>, <a href="../h_src/143274260.htm" class="localvar">name</a>);
  return 1;
}


<a id=255></a><a  class="comments">/*</a>
<a id=256></a><a  class="comments">** get (if 'get' is true) or set an upvalue from a closure</a>
<a id=257></a><a  class="comments">*/</a>
<a id=258></a>static int <a href="../h_src/143273580.htm" class="function">auxupvalue</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143273444.htm" class="localvar">L</a>, int <a href="../h_src/143273308.htm" class="localvar">get</a>) {
<a id=259></a>  const char *<a href="../h_src/143273172.htm" class="localvar">name</a>;
<a id=260></a>  int <a href="../h_src/143273036.htm" class="localvar">n</a> = (int)<a href="../h_src/57419976.htm" class="function">luaL_checkinteger</a>(<a href="../h_src/143273444.htm" class="localvar">L</a>, 2);  <a  class="comments">/* upvalue index */</a>
<a id=261></a>  <a href="../h_src/57419772.htm" class="function">luaL_checktype</a>(<a href="../h_src/143273444.htm" class="localvar">L</a>, 1, <a href="../h_src/57443232.htm" class="macro">LUA_TFUNCTION</a>);  <a  class="comments">/* closure */</a>
<a id=262></a>  <a href="../h_src/143273172.htm" class="localvar">name</a> = <a href="../h_src/143273308.htm" class="localvar">get</a> ? <a href="../h_src/57424396.htm" class="function">lua_getupvalue</a>(<a href="../h_src/143273444.htm" class="localvar">L</a>, 1, <a href="../h_src/143273036.htm" class="localvar">n</a>) : <a href="../h_src/57424328.htm" class="function">lua_setupvalue</a>(<a href="../h_src/143273444.htm" class="localvar">L</a>, 1, <a href="../h_src/143273036.htm" class="localvar">n</a>);
<a id=263></a>  if (<a href="../h_src/143273172.htm" class="localvar">name</a> == NULL) return 0;
<a id=264></a>  <a href="../h_src/57435004.htm" class="function">lua_pushstring</a>(<a href="../h_src/143273444.htm" class="localvar">L</a>, <a href="../h_src/143273172.htm" class="localvar">name</a>);
<a id=265></a>  <a href="../h_src/57427252.htm" class="macro">lua_insert</a>(<a href="../h_src/143273444.htm" class="localvar">L</a>, -(<a href="../h_src/143273308.htm" class="localvar">get</a>+1));  <a  class="comments">/* no-op if get is false */</a>
<a id=266></a>  return <a href="../h_src/143273308.htm" class="localvar">get</a> + 1;
}


<a id=270></a>static int <a href="../h_src/143272900.htm" class="function">db_getupvalue</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143272764.htm" class="localvar">L</a>) {
<a id=271></a>  return <a href="../h_src/143273580.htm" class="function">auxupvalue</a>(<a href="../h_src/143272764.htm" class="localvar">L</a>, 1);
}


<a id=275></a>static int <a href="../h_src/143272628.htm" class="function">db_setupvalue</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143272492.htm" class="localvar">L</a>) {
<a id=276></a>  <a href="../h_src/57419704.htm" class="function">luaL_checkany</a>(<a href="../h_src/143272492.htm" class="localvar">L</a>, 3);
<a id=277></a>  return <a href="../h_src/143273580.htm" class="function">auxupvalue</a>(<a href="../h_src/143272492.htm" class="localvar">L</a>, 0);
}


<a id=281></a><a  class="comments">/*</a>
<a id=282></a><a  class="comments">** Check whether a given upvalue from a given closure exists and</a>
<a id=283></a><a  class="comments">** returns its index</a>
<a id=284></a><a  class="comments">*/</a>
<a id=285></a>static void *<a href="../h_src/143272356.htm" class="function">checkupval</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143272220.htm" class="localvar">L</a>, int <a href="../h_src/143272084.htm" class="localvar">argf</a>, int <a href="../h_src/143271948.htm" class="localvar">argnup</a>, int *<a href="../h_src/143271812.htm" class="localvar">pnup</a>) {
<a id=286></a>  void *<a href="../h_src/143271676.htm" class="localvar">id</a>;
<a id=287></a>  int <a href="../h_src/143271540.htm" class="localvar">nup</a> = (int)<a href="../h_src/57419976.htm" class="function">luaL_checkinteger</a>(<a href="../h_src/143272220.htm" class="localvar">L</a>, <a href="../h_src/143271948.htm" class="localvar">argnup</a>);  <a  class="comments">/* upvalue index */</a>
<a id=288></a>  <a href="../h_src/57419772.htm" class="function">luaL_checktype</a>(<a href="../h_src/143272220.htm" class="localvar">L</a>, <a href="../h_src/143272084.htm" class="localvar">argf</a>, <a href="../h_src/57443232.htm" class="macro">LUA_TFUNCTION</a>);  <a  class="comments">/* closure */</a>
<a id=289></a>  <a href="../h_src/143271676.htm" class="localvar">id</a> = <a href="../h_src/57424260.htm" class="function">lua_upvalueid</a>(<a href="../h_src/143272220.htm" class="localvar">L</a>, <a href="../h_src/143272084.htm" class="localvar">argf</a>, <a href="../h_src/143271540.htm" class="localvar">nup</a>);
<a id=290></a>  if (<a href="../h_src/143271812.htm" class="localvar">pnup</a>) {
<a id=291></a>    <a href="../h_src/57417256.htm" class="macro">luaL_argcheck</a>(<a href="../h_src/143272220.htm" class="localvar">L</a>, <a href="../h_src/143271676.htm" class="localvar">id</a> != NULL, <a href="../h_src/143271948.htm" class="localvar">argnup</a>, &quot;invalid upvalue index&quot;);
<a id=292></a>    *<a href="../h_src/143271812.htm" class="localvar">pnup</a> = <a href="../h_src/143271540.htm" class="localvar">nup</a>;
  }
<a id=294></a>  return <a href="../h_src/143271676.htm" class="localvar">id</a>;
}


<a id=298></a>static int <a href="../h_src/143271404.htm" class="function">db_upvalueid</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143271268.htm" class="localvar">L</a>) {
<a id=299></a>  void *<a href="../h_src/143271132.htm" class="localvar">id</a> = <a href="../h_src/143272356.htm" class="function">checkupval</a>(<a href="../h_src/143271268.htm" class="localvar">L</a>, 1, 2, NULL);
<a id=300></a>  if (<a href="../h_src/143271132.htm" class="localvar">id</a> != NULL)
<a id=301></a>    <a href="../h_src/57434528.htm" class="function">lua_pushlightuserdata</a>(<a href="../h_src/143271268.htm" class="localvar">L</a>, <a href="../h_src/143271132.htm" class="localvar">id</a>);
  else
<a id=303></a>    <a href="../h_src/57415760.htm" class="macro">luaL_pushfail</a>(<a href="../h_src/143271268.htm" class="localvar">L</a>);
  return 1;
}


<a id=308></a>static int <a href="../h_src/143270996.htm" class="function">db_upvaluejoin</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143270860.htm" class="localvar">L</a>) {
<a id=309></a>  int <a href="../h_src/143270724.htm" class="localvar">n1</a>, <a href="../h_src/143270588.htm" class="localvar">n2</a>;
<a id=310></a>  <a href="../h_src/143272356.htm" class="function">checkupval</a>(<a href="../h_src/143270860.htm" class="localvar">L</a>, 1, 2, &amp;<a href="../h_src/143270724.htm" class="localvar">n1</a>);
<a id=311></a>  <a href="../h_src/143272356.htm" class="function">checkupval</a>(<a href="../h_src/143270860.htm" class="localvar">L</a>, 3, 4, &amp;<a href="../h_src/143270588.htm" class="localvar">n2</a>);
<a id=312></a>  <a href="../h_src/57417256.htm" class="macro">luaL_argcheck</a>(<a href="../h_src/143270860.htm" class="localvar">L</a>, !<a href="../h_src/57438744.htm" class="function">lua_iscfunction</a>(<a href="../h_src/143270860.htm" class="localvar">L</a>, 1), 1, &quot;Lua function expected&quot;);
<a id=313></a>  <a href="../h_src/57417256.htm" class="macro">luaL_argcheck</a>(<a href="../h_src/143270860.htm" class="localvar">L</a>, !<a href="../h_src/57438744.htm" class="function">lua_iscfunction</a>(<a href="../h_src/143270860.htm" class="localvar">L</a>, 3), 3, &quot;Lua function expected&quot;);
<a id=314></a>  <a href="../h_src/57424192.htm" class="function">lua_upvaluejoin</a>(<a href="../h_src/143270860.htm" class="localvar">L</a>, 1, <a href="../h_src/143270724.htm" class="localvar">n1</a>, 3, <a href="../h_src/143270588.htm" class="localvar">n2</a>);
  return 0;
}


<a id=319></a><a  class="comments">/*</a>
<a id=320></a><a  class="comments">** Call hook function registered at hook table for the current</a>
<a id=321></a><a  class="comments">** thread (if there is one)</a>
<a id=322></a><a  class="comments">*/</a>
<a id=323></a>static void <a href="../h_src/143270452.htm" class="function">hookf</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143270316.htm" class="localvar">L</a>, <a href="../h_src/57440308.htm" class="type">lua_Debug</a> *<a href="../h_src/143270180.htm" class="localvar">ar</a>) {
<a id=324></a>  static const char *const <a href="../h_src/143270044.htm" class="localvar">hooknames</a>[] =
    {&quot;call&quot;, &quot;return&quot;, &quot;line&quot;, &quot;count&quot;, &quot;tail call&quot;};
<a id=326></a>  <a href="../h_src/57434256.htm" class="function">lua_getfield</a>(<a href="../h_src/143270316.htm" class="localvar">L</a>, <a href="../h_src/57445476.htm" class="macro">LUA_REGISTRYINDEX</a>, <a href="../h_src/58286720.htm" class="variable">HOOKKEY</a>);
<a id=327></a>  <a href="../h_src/57434460.htm" class="function">lua_pushthread</a>(<a href="../h_src/143270316.htm" class="localvar">L</a>);
<a id=328></a>  if (<a href="../h_src/57434120.htm" class="function">lua_rawget</a>(<a href="../h_src/143270316.htm" class="localvar">L</a>, -2) == <a href="../h_src/57443232.htm" class="macro">LUA_TFUNCTION</a>) {  <a  class="comments">/* is there a hook function? */</a>
<a id=329></a>    <a href="../h_src/57435004.htm" class="function">lua_pushstring</a>(<a href="../h_src/143270316.htm" class="localvar">L</a>, <a href="../h_src/143270044.htm" class="localvar">hooknames</a>[(int)<a href="../h_src/143270180.htm" class="localvar">ar</a>-&gt;<a href="../h_src/57423784.htm" class="variable">event</a>]);  <a  class="comments">/* push event name */</a>
<a id=330></a>    if (<a href="../h_src/143270180.htm" class="localvar">ar</a>-&gt;<a href="../h_src/57423376.htm" class="variable">currentline</a> &gt;= 0)
<a id=331></a>      <a href="../h_src/57435140.htm" class="function">lua_pushinteger</a>(<a href="../h_src/143270316.htm" class="localvar">L</a>, <a href="../h_src/143270180.htm" class="localvar">ar</a>-&gt;<a href="../h_src/57423376.htm" class="variable">currentline</a>);  <a  class="comments">/* push current line */</a>
<a id=332></a>    else <a href="../h_src/57435276.htm" class="function">lua_pushnil</a>(<a href="../h_src/143270316.htm" class="localvar">L</a>);
<a id=333></a>    <a href="../h_src/57415352.htm" class="macro">lua_assert</a>(lua_getinfo(L, &quot;lS&quot;, ar));
<a id=334></a>    <a href="../h_src/57432964.htm" class="macro">lua_call</a>(<a href="../h_src/143270316.htm" class="localvar">L</a>, 2, 0);  <a  class="comments">/* call hook function */</a>
  }
}


<a id=339></a><a  class="comments">/*</a>
<a id=340></a><a  class="comments">** Convert a string mask (for 'sethook') into a bit mask</a>
<a id=341></a><a  class="comments">*/</a>
<a id=342></a>static int <a href="../h_src/143269908.htm" class="function">makemask</a> (const char *<a href="../h_src/143269772.htm" class="localvar">smask</a>, int <a href="../h_src/143269636.htm" class="localvar">count</a>) {
<a id=343></a>  int <a href="../h_src/143269500.htm" class="localvar">mask</a> = 0;
<a id=344></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143269772.htm" class="localvar">smask</a>, 'c')) <a href="../h_src/143269500.htm" class="localvar">mask</a> |= <a href="../h_src/57425212.htm" class="macro">LUA_MASKCALL</a>;
<a id=345></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143269772.htm" class="localvar">smask</a>, 'r')) <a href="../h_src/143269500.htm" class="localvar">mask</a> |= <a href="../h_src/57425076.htm" class="macro">LUA_MASKRET</a>;
<a id=346></a>  if (<a href="../h_aa/57565916.htm" class="libfunc">strchr</a>(<a href="../h_src/143269772.htm" class="localvar">smask</a>, 'l')) <a href="../h_src/143269500.htm" class="localvar">mask</a> |= <a href="../h_src/57424940.htm" class="macro">LUA_MASKLINE</a>;
<a id=347></a>  if (<a href="../h_src/143269636.htm" class="localvar">count</a> &gt; 0) <a href="../h_src/143269500.htm" class="localvar">mask</a> |= <a href="../h_src/57424804.htm" class="macro">LUA_MASKCOUNT</a>;
<a id=348></a>  return <a href="../h_src/143269500.htm" class="localvar">mask</a>;
}


<a id=352></a><a  class="comments">/*</a>
<a id=353></a><a  class="comments">** Convert a bit mask (for 'gethook') into a string mask</a>
<a id=354></a><a  class="comments">*/</a>
<a id=355></a>static char *<a href="../h_src/143269364.htm" class="function">unmakemask</a> (int <a href="../h_src/143269228.htm" class="localvar">mask</a>, char *<a href="../h_src/143269092.htm" class="localvar">smask</a>) {
<a id=356></a>  int <a href="../h_src/143268956.htm" class="localvar">i</a> = 0;
<a id=357></a>  if (<a href="../h_src/143269228.htm" class="localvar">mask</a> &amp; <a href="../h_src/57425212.htm" class="macro">LUA_MASKCALL</a>) <a href="../h_src/143269092.htm" class="localvar">smask</a>[<a href="../h_src/143268956.htm" class="localvar">i</a>++] = 'c';
<a id=358></a>  if (<a href="../h_src/143269228.htm" class="localvar">mask</a> &amp; <a href="../h_src/57425076.htm" class="macro">LUA_MASKRET</a>) <a href="../h_src/143269092.htm" class="localvar">smask</a>[<a href="../h_src/143268956.htm" class="localvar">i</a>++] = 'r';
<a id=359></a>  if (<a href="../h_src/143269228.htm" class="localvar">mask</a> &amp; <a href="../h_src/57424940.htm" class="macro">LUA_MASKLINE</a>) <a href="../h_src/143269092.htm" class="localvar">smask</a>[<a href="../h_src/143268956.htm" class="localvar">i</a>++] = 'l';
<a id=360></a>  <a href="../h_src/143269092.htm" class="localvar">smask</a>[<a href="../h_src/143268956.htm" class="localvar">i</a>] = '\0';
<a id=361></a>  return <a href="../h_src/143269092.htm" class="localvar">smask</a>;
}


<a id=365></a>static int <a href="../h_src/143268820.htm" class="function">db_sethook</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143268684.htm" class="localvar">L</a>) {
<a id=366></a>  int <a href="../h_src/143268548.htm" class="localvar">arg</a>, <a href="../h_src/143268412.htm" class="localvar">mask</a>, <a href="../h_src/143268276.htm" class="localvar">count</a>;
<a id=367></a>  <a href="../h_src/57440240.htm" class="type">lua_Hook</a> <a href="../h_src/143268140.htm" class="localvar">func</a>;
<a id=368></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143268004.htm" class="localvar">L1</a> = <a href="../h_src/58284340.htm" class="function">getthread</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, &amp;<a href="../h_src/143268548.htm" class="localvar">arg</a>);
<a id=369></a>  if (<a href="../h_src/57427796.htm" class="macro">lua_isnoneornil</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, <a href="../h_src/143268548.htm" class="localvar">arg</a>+1)) {  <a  class="comments">/* no hook? */</a>
<a id=370></a>    <a href="../h_src/57439288.htm" class="function">lua_settop</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, <a href="../h_src/143268548.htm" class="localvar">arg</a>+1);
<a id=371></a>    <a href="../h_src/143268140.htm" class="localvar">func</a> = NULL; <a href="../h_src/143268412.htm" class="localvar">mask</a> = 0; <a href="../h_src/143268276.htm" class="localvar">count</a> = 0;  <a  class="comments">/* turn off hooks */</a>
  }
  else {
<a id=374></a>    const char *<a href="../h_src/143267868.htm" class="localvar">smask</a> = <a href="../h_src/57416984.htm" class="macro">luaL_checkstring</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, <a href="../h_src/143268548.htm" class="localvar">arg</a>+2);
<a id=375></a>    <a href="../h_src/57419772.htm" class="function">luaL_checktype</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, <a href="../h_src/143268548.htm" class="localvar">arg</a>+1, <a href="../h_src/57443232.htm" class="macro">LUA_TFUNCTION</a>);
<a id=376></a>    <a href="../h_src/143268276.htm" class="localvar">count</a> = (int)<a href="../h_src/57419908.htm" class="function">luaL_optinteger</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, <a href="../h_src/143268548.htm" class="localvar">arg</a> + 3, 0);
<a id=377></a>    <a href="../h_src/143268140.htm" class="localvar">func</a> = <a href="../h_src/143270452.htm" class="function">hookf</a>; <a href="../h_src/143268412.htm" class="localvar">mask</a> = <a href="../h_src/143269908.htm" class="function">makemask</a>(<a href="../h_src/143267868.htm" class="localvar">smask</a>, <a href="../h_src/143268276.htm" class="localvar">count</a>);
  }
<a id=379></a>  if (!<a href="../h_src/57417732.htm" class="function">luaL_getsubtable</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, <a href="../h_src/57445476.htm" class="macro">LUA_REGISTRYINDEX</a>, <a href="../h_src/58286720.htm" class="variable">HOOKKEY</a>)) {
<a id=380></a>    <a  class="comments">/* table just created; initialize it */</a>
<a id=381></a>    <a href="../h_src/57427660.htm" class="macro">lua_pushliteral</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, &quot;k&quot;);
<a id=382></a>    <a href="../h_src/57433508.htm" class="function">lua_setfield</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, -2, &quot;__mode&quot;);  <a  class="comments">/** hooktable.__mode = &quot;k&quot; */</a>
<a id=383></a>    <a href="../h_src/57439220.htm" class="function">lua_pushvalue</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, -1);
<a id=384></a>    <a href="../h_src/57433168.htm" class="function">lua_setmetatable</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, -2);  <a  class="comments">/* metatable(hooktable) = hooktable */</a>
  }
<a id=386></a>  <a href="../h_src/58286652.htm" class="function">checkstack</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, <a href="../h_src/143268004.htm" class="localvar">L1</a>, 1);
<a id=387></a>  <a href="../h_src/57434460.htm" class="function">lua_pushthread</a>(<a href="../h_src/143268004.htm" class="localvar">L1</a>); <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/143268004.htm" class="localvar">L1</a>, <a href="../h_src/143268684.htm" class="localvar">L</a>, 1);  <a  class="comments">/* key (thread) */</a>
<a id=388></a>  <a href="../h_src/57439220.htm" class="function">lua_pushvalue</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, <a href="../h_src/143268548.htm" class="localvar">arg</a> + 1);  <a  class="comments">/* value (hook function) */</a>
<a id=389></a>  <a href="../h_src/57433372.htm" class="function">lua_rawset</a>(<a href="../h_src/143268684.htm" class="localvar">L</a>, -3);  <a  class="comments">/* hooktable[L1] = new Lua hook */</a>
<a id=390></a>  <a href="../h_src/57424124.htm" class="function">lua_sethook</a>(<a href="../h_src/143268004.htm" class="localvar">L1</a>, <a href="../h_src/143268140.htm" class="localvar">func</a>, <a href="../h_src/143268412.htm" class="localvar">mask</a>, <a href="../h_src/143268276.htm" class="localvar">count</a>);
  return 0;
}


<a id=395></a>static int <a href="../h_src/143267732.htm" class="function">db_gethook</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143267596.htm" class="localvar">L</a>) {
<a id=396></a>  int <a href="../h_src/143267460.htm" class="localvar">arg</a>;
<a id=397></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143267324.htm" class="localvar">L1</a> = <a href="../h_src/58284340.htm" class="function">getthread</a>(<a href="../h_src/143267596.htm" class="localvar">L</a>, &amp;<a href="../h_src/143267460.htm" class="localvar">arg</a>);
<a id=398></a>  char <a href="../h_src/143267188.htm" class="localvar">buff</a>[5];
<a id=399></a>  int <a href="../h_src/143267052.htm" class="localvar">mask</a> = <a href="../h_src/57423988.htm" class="function">lua_gethookmask</a>(<a href="../h_src/143267324.htm" class="localvar">L1</a>);
<a id=400></a>  <a href="../h_src/57440240.htm" class="type">lua_Hook</a> <a href="../h_src/143266916.htm" class="localvar">hook</a> = <a href="../h_src/57424056.htm" class="function">lua_gethook</a>(<a href="../h_src/143267324.htm" class="localvar">L1</a>);
<a id=401></a>  if (<a href="../h_src/143266916.htm" class="localvar">hook</a> == NULL) {  <a  class="comments">/* no hook? */</a>
<a id=402></a>    <a href="../h_src/57415760.htm" class="macro">luaL_pushfail</a>(<a href="../h_src/143267596.htm" class="localvar">L</a>);
    return 1;
  }
<a id=405></a>  else if (<a href="../h_src/143266916.htm" class="localvar">hook</a> != <a href="../h_src/143270452.htm" class="function">hookf</a>)  <a  class="comments">/* external hook? */</a>
<a id=406></a>    <a href="../h_src/57427660.htm" class="macro">lua_pushliteral</a>(<a href="../h_src/143267596.htm" class="localvar">L</a>, &quot;external hook&quot;);
<a id=407></a>  else {  <a  class="comments">/* hook table must exist */</a>
<a id=408></a>    <a href="../h_src/57434256.htm" class="function">lua_getfield</a>(<a href="../h_src/143267596.htm" class="localvar">L</a>, <a href="../h_src/57445476.htm" class="macro">LUA_REGISTRYINDEX</a>, <a href="../h_src/58286720.htm" class="variable">HOOKKEY</a>);
<a id=409></a>    <a href="../h_src/58286652.htm" class="function">checkstack</a>(<a href="../h_src/143267596.htm" class="localvar">L</a>, <a href="../h_src/143267324.htm" class="localvar">L1</a>, 1);
<a id=410></a>    <a href="../h_src/57434460.htm" class="function">lua_pushthread</a>(<a href="../h_src/143267324.htm" class="localvar">L1</a>); <a href="../h_src/57438948.htm" class="function">lua_xmove</a>(<a href="../h_src/143267324.htm" class="localvar">L1</a>, <a href="../h_src/143267596.htm" class="localvar">L</a>, 1);
<a id=411></a>    <a href="../h_src/57434120.htm" class="function">lua_rawget</a>(<a href="../h_src/143267596.htm" class="localvar">L</a>, -2);   <a  class="comments">/* 1st result = hooktable[L1] */</a>
<a id=412></a>    <a href="../h_src/57427116.htm" class="macro">lua_remove</a>(<a href="../h_src/143267596.htm" class="localvar">L</a>, -2);  <a  class="comments">/* remove hook table */</a>
  }
<a id=414></a>  <a href="../h_src/57435004.htm" class="function">lua_pushstring</a>(<a href="../h_src/143267596.htm" class="localvar">L</a>, <a href="../h_src/143269364.htm" class="function">unmakemask</a>(<a href="../h_src/143267052.htm" class="localvar">mask</a>, <a href="../h_src/143267188.htm" class="localvar">buff</a>));  <a  class="comments">/* 2nd result = mask */</a>
<a id=415></a>  <a href="../h_src/57435140.htm" class="function">lua_pushinteger</a>(<a href="../h_src/143267596.htm" class="localvar">L</a>, <a href="../h_src/57423920.htm" class="function">lua_gethookcount</a>(<a href="../h_src/143267324.htm" class="localvar">L1</a>));  <a  class="comments">/* 3rd result = count */</a>
  return 3;
}


<a id=420></a>static int <a href="../h_src/143266780.htm" class="function">db_debug</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143266644.htm" class="localvar">L</a>) {
  for (;;) {
<a id=422></a>    char <a href="../h_src/143266508.htm" class="localvar">buffer</a>[250];
<a id=423></a>    <a href="../h_src/57411884.htm" class="macro">lua_writestringerror</a>(&quot;%s&quot;, &quot;lua_debug&gt; &quot;);
<a id=424></a>    if (<a href="../h_aa/57556940.htm" class="libfunc">fgets</a>(<a href="../h_src/143266508.htm" class="localvar">buffer</a>, sizeof(<a href="../h_src/143266508.htm" class="localvar">buffer</a>), stdin) == NULL ||
<a id=425></a>        <a href="../h_aa/57564488.htm" class="libfunc">strcmp</a>(<a href="../h_src/143266508.htm" class="localvar">buffer</a>, &quot;cont\n&quot;) == 0)
      return 0;
<a id=427></a>    if (<a href="../h_src/57416032.htm" class="macro">luaL_loadbuffer</a>(<a href="../h_src/143266644.htm" class="localvar">L</a>, <a href="../h_src/143266508.htm" class="localvar">buffer</a>, <a href="../h_aa/57568976.htm" class="libfunc">strlen</a>(<a href="../h_src/143266508.htm" class="localvar">buffer</a>), &quot;=(debug command)&quot;) ||
<a id=428></a>        <a href="../h_src/57432760.htm" class="macro">lua_pcall</a>(<a href="../h_src/143266644.htm" class="localvar">L</a>, 0, 0, 0))
<a id=429></a>      <a href="../h_src/57411884.htm" class="macro">lua_writestringerror</a>(&quot;%s\n&quot;, <a href="../h_src/57420452.htm" class="function">luaL_tolstring</a>(<a href="../h_src/143266644.htm" class="localvar">L</a>, -1, NULL));
<a id=430></a>    <a href="../h_src/57439288.htm" class="function">lua_settop</a>(<a href="../h_src/143266644.htm" class="localvar">L</a>, 0);  <a  class="comments">/* remove eventual returns */</a>
  }
}


<a id=435></a>static int <a href="../h_src/143266372.htm" class="function">db_traceback</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143266236.htm" class="localvar">L</a>) {
<a id=436></a>  int <a href="../h_src/143266100.htm" class="localvar">arg</a>;
<a id=437></a>  <a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143265964.htm" class="localvar">L1</a> = <a href="../h_src/58284340.htm" class="function">getthread</a>(<a href="../h_src/143266236.htm" class="localvar">L</a>, &amp;<a href="../h_src/143266100.htm" class="localvar">arg</a>);
<a id=438></a>  const char *<a href="../h_src/143265828.htm" class="localvar">msg</a> = <a href="../h_src/57427388.htm" class="macro">lua_tostring</a>(<a href="../h_src/143266236.htm" class="localvar">L</a>, <a href="../h_src/143266100.htm" class="localvar">arg</a> + 1);
<a id=439></a>  if (<a href="../h_src/143265828.htm" class="localvar">msg</a> == NULL &amp;&amp; !<a href="../h_src/57427796.htm" class="macro">lua_isnoneornil</a>(<a href="../h_src/143266236.htm" class="localvar">L</a>, <a href="../h_src/143266100.htm" class="localvar">arg</a> + 1))  <a  class="comments">/* non-string 'msg'? */</a>
<a id=440></a>    <a href="../h_src/57439220.htm" class="function">lua_pushvalue</a>(<a href="../h_src/143266236.htm" class="localvar">L</a>, <a href="../h_src/143266100.htm" class="localvar">arg</a> + 1);  <a  class="comments">/* return it untouched */</a>
  else {
<a id=442></a>    int <a href="../h_src/143265692.htm" class="localvar">level</a> = (int)<a href="../h_src/57419908.htm" class="function">luaL_optinteger</a>(<a href="../h_src/143266236.htm" class="localvar">L</a>, <a href="../h_src/143266100.htm" class="localvar">arg</a> + 2, (<a href="../h_src/143266236.htm" class="localvar">L</a> == <a href="../h_src/143265964.htm" class="localvar">L1</a>) ? 1 : 0);
<a id=443></a>    <a href="../h_src/57417664.htm" class="function">luaL_traceback</a>(<a href="../h_src/143266236.htm" class="localvar">L</a>, <a href="../h_src/143265964.htm" class="localvar">L1</a>, <a href="../h_src/143265828.htm" class="localvar">msg</a>, <a href="../h_src/143265692.htm" class="localvar">level</a>);
  }
  return 1;
}


<a id=449></a>static int <a href="../h_src/143265556.htm" class="function">db_setcstacklimit</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143265420.htm" class="localvar">L</a>) {
<a id=450></a>  int <a href="../h_src/143265284.htm" class="localvar">limit</a> = (int)<a href="../h_src/57419976.htm" class="function">luaL_checkinteger</a>(<a href="../h_src/143265420.htm" class="localvar">L</a>, 1);
<a id=451></a>  int <a href="../h_src/143265148.htm" class="localvar">res</a> = <a href="../h_src/57423852.htm" class="function">lua_setcstacklimit</a>(<a href="../h_src/143265420.htm" class="localvar">L</a>, <a href="../h_src/143265284.htm" class="localvar">limit</a>);
<a id=452></a>  <a href="../h_src/57435140.htm" class="function">lua_pushinteger</a>(<a href="../h_src/143265420.htm" class="localvar">L</a>, <a href="../h_src/143265148.htm" class="localvar">res</a>);
  return 1;
}


<a id=457></a>static const <a href="../h_src/57420996.htm" class="type">luaL_Reg</a> <a href="../h_src/143265012.htm" class="variable">dblib</a>[] = {
<a id=458></a>  {&quot;debug&quot;, <a href="../h_src/143266780.htm" class="function">db_debug</a>},
<a id=459></a>  {&quot;getuservalue&quot;, <a href="../h_src/58285156.htm" class="function">db_getuservalue</a>},
<a id=460></a>  {&quot;gethook&quot;, <a href="../h_src/143267732.htm" class="function">db_gethook</a>},
<a id=461></a>  {&quot;getinfo&quot;, <a href="../h_src/58281756.htm" class="function">db_getinfo</a>},
<a id=462></a>  {&quot;getlocal&quot;, <a href="../h_src/143275756.htm" class="function">db_getlocal</a>},
<a id=463></a>  {&quot;getregistry&quot;, <a href="../h_src/58286108.htm" class="function">db_getregistry</a>},
<a id=464></a>  {&quot;getmetatable&quot;, <a href="../h_src/58285836.htm" class="function">db_getmetatable</a>},
<a id=465></a>  {&quot;getupvalue&quot;, <a href="../h_src/143272900.htm" class="function">db_getupvalue</a>},
<a id=466></a>  {&quot;upvaluejoin&quot;, <a href="../h_src/143270996.htm" class="function">db_upvaluejoin</a>},
<a id=467></a>  {&quot;upvalueid&quot;, <a href="../h_src/143271404.htm" class="function">db_upvalueid</a>},
<a id=468></a>  {&quot;setuservalue&quot;, <a href="../h_src/58284748.htm" class="function">db_setuservalue</a>},
<a id=469></a>  {&quot;sethook&quot;, <a href="../h_src/143268820.htm" class="function">db_sethook</a>},
<a id=470></a>  {&quot;setlocal&quot;, <a href="../h_src/143274668.htm" class="function">db_setlocal</a>},
<a id=471></a>  {&quot;setmetatable&quot;, <a href="../h_src/58285564.htm" class="function">db_setmetatable</a>},
<a id=472></a>  {&quot;setupvalue&quot;, <a href="../h_src/143272628.htm" class="function">db_setupvalue</a>},
<a id=473></a>  {&quot;traceback&quot;, <a href="../h_src/143266372.htm" class="function">db_traceback</a>},
<a id=474></a>  {&quot;setcstacklimit&quot;, <a href="../h_src/143265556.htm" class="function">db_setcstacklimit</a>},
  {NULL, NULL}
};


<a id=479></a><a href="../h_src/57454180.htm" class="macro">LUAMOD_API</a> int <a href="../h_src/57574008.htm" class="function">luaopen_debug</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/143264944.htm" class="localvar">L</a>) {
<a id=480></a>  <a href="../h_src/57417392.htm" class="macro">luaL_newlib</a>(<a href="../h_src/143264944.htm" class="localvar">L</a>, <a href="../h_src/143265012.htm" class="variable">dblib</a>);
  return 1;
}

</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

