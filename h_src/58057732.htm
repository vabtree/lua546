<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>forprep</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/58057732.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/58057732.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/58057732.htm" class="function" target="_self">Flow Chart</a></li>
<li id="current"><a href="../h_src/58057732.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/58057732.htm" class="function" target="_self">Definition</a></li>
<li><a href="../h_sc/58057732.htm" class="function" target="_self">Source Checks</a></li>
<li><a href="../h_src/58062016.htm#206" class="function" target="_self">Source File</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Source Code</h4>
<pre class=src>
static int <a href="../h_src/58057732.htm" class="function">forprep</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58057596.htm" class="localvar">L</a>, <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/58057460.htm" class="localvar">ra</a>) {
  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/58217300.htm" class="localvar">pinit</a> = <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58057460.htm" class="localvar">ra</a>);
  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/58217164.htm" class="localvar">plimit</a> = <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58057460.htm" class="localvar">ra</a> + 1);
  <a href="../h_src/57535384.htm" class="type">TValue</a> *<a href="../h_src/58217028.htm" class="localvar">pstep</a> = <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58057460.htm" class="localvar">ra</a> + 2);
  if (<a href="../h_src/57526544.htm" class="macro">ttisinteger</a>(<a href="../h_src/58217300.htm" class="localvar">pinit</a>) &amp;&amp; <a href="../h_src/57526544.htm" class="macro">ttisinteger</a>(<a href="../h_src/58217028.htm" class="localvar">pstep</a>)) { <a  class="comments">/* integer loop? */</a>
    <a href="../h_src/57442076.htm" class="type">lua_Integer</a> <a href="../h_src/58216892.htm" class="localvar">init</a> = <a href="../h_src/57526136.htm" class="macro">ivalue</a>(<a href="../h_src/58217300.htm" class="localvar">pinit</a>);
    <a href="../h_src/57442076.htm" class="type">lua_Integer</a> <a href="../h_src/58216756.htm" class="localvar">step</a> = <a href="../h_src/57526136.htm" class="macro">ivalue</a>(<a href="../h_src/58217028.htm" class="localvar">pstep</a>);
    <a href="../h_src/57442076.htm" class="type">lua_Integer</a> <a href="../h_src/58216620.htm" class="localvar">limit</a>;
    if (<a href="../h_src/58216756.htm" class="localvar">step</a> == 0)
      <a href="../h_src/57635280.htm" class="function">luaG_runerror</a>(<a href="../h_src/58057596.htm" class="localvar">L</a>, &quot;'for' step is zero&quot;);
    <a href="../h_src/57525456.htm" class="macro">setivalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58057460.htm" class="localvar">ra</a> + 3), <a href="../h_src/58216892.htm" class="localvar">init</a>);  <a  class="comments">/* control variable */</a>
    if (<a href="../h_src/58058684.htm" class="function">forlimit</a>(<a href="../h_src/58057596.htm" class="localvar">L</a>, <a href="../h_src/58216892.htm" class="localvar">init</a>, <a href="../h_src/58217164.htm" class="localvar">plimit</a>, &amp;<a href="../h_src/58216620.htm" class="localvar">limit</a>, <a href="../h_src/58216756.htm" class="localvar">step</a>))
      return 1;  <a  class="comments">/* skip the loop */</a>
    else {  <a  class="comments">/* prepare loop counter */</a>
      <a href="../h_src/57438132.htm" class="function">lua_Unsigned</a> <a href="../h_src/58216348.htm" class="localvar">count</a>;
      if (<a href="../h_src/58216756.htm" class="localvar">step</a> &gt; 0) {  <a  class="comments">/* ascending loop? */</a>
        <a href="../h_src/58216348.htm" class="localvar">count</a> = <a href="../h_src/57546128.htm" class="macro">l_castS2U</a>(<a href="../h_src/58216620.htm" class="localvar">limit</a>) - <a href="../h_src/57546128.htm" class="macro">l_castS2U</a>(<a href="../h_src/58216892.htm" class="localvar">init</a>);
        if (<a href="../h_src/58216756.htm" class="localvar">step</a> != 1)  <a  class="comments">/* avoid division in the too common case */</a>
          <a href="../h_src/58216348.htm" class="localvar">count</a> /= <a href="../h_src/57546128.htm" class="macro">l_castS2U</a>(<a href="../h_src/58216756.htm" class="localvar">step</a>);
      }
      else {  <a  class="comments">/* step &lt; 0; descending loop */</a>
        <a href="../h_src/58216348.htm" class="localvar">count</a> = <a href="../h_src/57546128.htm" class="macro">l_castS2U</a>(<a href="../h_src/58216892.htm" class="localvar">init</a>) - <a href="../h_src/57546128.htm" class="macro">l_castS2U</a>(<a href="../h_src/58216620.htm" class="localvar">limit</a>);
        <a  class="comments">/* 'step+1' avoids negating 'mininteger' */</a>
        <a href="../h_src/58216348.htm" class="localvar">count</a> /= <a href="../h_src/57546128.htm" class="macro">l_castS2U</a>(-(<a href="../h_src/58216756.htm" class="localvar">step</a> + 1)) + 1u;
      }
      <a  class="comments">/* store the counter in place of the limit (which won't be</a>
<a  class="comments">         needed anymore) */</a>
      <a href="../h_src/57525456.htm" class="macro">setivalue</a>(<a href="../h_src/58217164.htm" class="localvar">plimit</a>, <a href="../h_src/57545856.htm" class="macro">l_castU2S</a>(<a href="../h_src/58216348.htm" class="localvar">count</a>));
    }
  }
  else {  <a  class="comments">/* try making all values floats */</a>
    <a href="../h_src/57442144.htm" class="type">lua_Number</a> <a href="../h_src/58216076.htm" class="localvar">init</a>; <a href="../h_src/57442144.htm" class="type">lua_Number</a> <a href="../h_src/58215940.htm" class="localvar">limit</a>; <a href="../h_src/57442144.htm" class="type">lua_Number</a> <a href="../h_src/58215804.htm" class="localvar">step</a>;
    if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(!<a href="../h_src/57613112.htm" class="macro">tonumber</a>(<a href="../h_src/58217164.htm" class="localvar">plimit</a>, &amp;<a href="../h_src/58215940.htm" class="localvar">limit</a>)))
      <a href="../h_src/57635620.htm" class="function">luaG_forerror</a>(<a href="../h_src/58057596.htm" class="localvar">L</a>, <a href="../h_src/58217164.htm" class="localvar">plimit</a>, &quot;limit&quot;);
    if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(!<a href="../h_src/57613112.htm" class="macro">tonumber</a>(<a href="../h_src/58217028.htm" class="localvar">pstep</a>, &amp;<a href="../h_src/58215804.htm" class="localvar">step</a>)))
      <a href="../h_src/57635620.htm" class="function">luaG_forerror</a>(<a href="../h_src/58057596.htm" class="localvar">L</a>, <a href="../h_src/58217028.htm" class="localvar">pstep</a>, &quot;step&quot;);
    if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(!<a href="../h_src/57613112.htm" class="macro">tonumber</a>(<a href="../h_src/58217300.htm" class="localvar">pinit</a>, &amp;<a href="../h_src/58216076.htm" class="localvar">init</a>)))
      <a href="../h_src/57635620.htm" class="function">luaG_forerror</a>(<a href="../h_src/58057596.htm" class="localvar">L</a>, <a href="../h_src/58217300.htm" class="localvar">pinit</a>, &quot;initial value&quot;);
    if (<a href="../h_src/58215804.htm" class="localvar">step</a> == 0)
      <a href="../h_src/57635280.htm" class="function">luaG_runerror</a>(<a href="../h_src/58057596.htm" class="localvar">L</a>, &quot;'for' step is zero&quot;);
    if (<a href="../h_src/57539328.htm" class="macro">luai_numlt</a>(0, <a href="../h_src/58215804.htm" class="localvar">step</a>) ? <a href="../h_src/57539328.htm" class="macro">luai_numlt</a>(<a href="../h_src/58215940.htm" class="localvar">limit</a>, <a href="../h_src/58216076.htm" class="localvar">init</a>)
                            : <a href="../h_src/57539328.htm" class="macro">luai_numlt</a>(<a href="../h_src/58216076.htm" class="localvar">init</a>, <a href="../h_src/58215940.htm" class="localvar">limit</a>))
      return 1;  <a  class="comments">/* skip the loop */</a>
    else {
      <a  class="comments">/* make sure internal values are all floats */</a>
      <a href="../h_src/57525728.htm" class="macro">setfltvalue</a>(<a href="../h_src/58217164.htm" class="localvar">plimit</a>, <a href="../h_src/58215940.htm" class="localvar">limit</a>);
      <a href="../h_src/57525728.htm" class="macro">setfltvalue</a>(<a href="../h_src/58217028.htm" class="localvar">pstep</a>, <a href="../h_src/58215804.htm" class="localvar">step</a>);
      <a href="../h_src/57525728.htm" class="macro">setfltvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58057460.htm" class="localvar">ra</a>), <a href="../h_src/58216076.htm" class="localvar">init</a>);  <a  class="comments">/* internal index */</a><a href="../h_src/57535996.htm" class="variable">n</a>al index */
      <a href="../h_src/57525728.htm" class="macro">setfltvalue</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58057460.htm" class="localvar">ra</a> + 3), <a href="../h_src/58216076.htm" class="localvar">init</a>);  <a  class="comments">/* control variable */</a>
    }
  }
  return 0;
}
</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

