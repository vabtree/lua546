<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>num2straux</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/143300780.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/143300780.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/143300780.htm" class="function" target="_self">Flow Chart</a></li>
<li id="current"><a href="../h_src/143300780.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/143300780.htm" class="function" target="_self">Definition</a></li>
<li><a href="../h_sc/143300780.htm" class="function" target="_self">Source Checks</a></li>
<li><a href="../h_src/143344164.htm#1024" class="function" target="_self">Source File</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Source Code</h4>
<pre class=src>
static int <a href="../h_src/143300780.htm" class="function">num2straux</a> (char *<a href="../h_src/143300644.htm" class="localvar">buff</a>, int <a href="../h_src/143300508.htm" class="localvar">sz</a>, <a href="../h_src/57442144.htm" class="type">lua_Number</a> <a href="../h_src/143300372.htm" class="localvar">x</a>) {
  <a  class="comments">/* if 'inf' or 'NaN', format it like '%g' */</a>
  if (<a href="../h_src/143300372.htm" class="localvar">x</a> != <a href="../h_src/143300372.htm" class="localvar">x</a> || <a href="../h_src/143300372.htm" class="localvar">x</a> == (<a href="../h_src/57442144.htm" class="type">lua_Number</a>)HUGE_VAL || <a href="../h_src/143300372.htm" class="localvar">x</a> == -(<a href="../h_src/57442144.htm" class="type">lua_Number</a>)HUGE_VAL)
    return <a href="../h_src/57449692.htm" class="macro">l_sprintf</a>(<a href="../h_src/143300644.htm" class="localvar">buff</a>, <a href="../h_src/143300508.htm" class="localvar">sz</a>, <a href="../h_src/57451460.htm" class="macro">LUA_NUMBER_FMT</a>, (<a href="../h_src/57451732.htm" class="macro">LUAI_UACNUMBER</a>)<a href="../h_src/143300372.htm" class="localvar">x</a>);
  else if (<a href="../h_src/143300372.htm" class="localvar">x</a> == 0) {  <a  class="comments">/* can be -0... */</a>
    <a  class="comments">/* create &quot;0&quot; or &quot;-0&quot; followed by exponent */</a>
    return <a href="../h_src/57449692.htm" class="macro">l_sprintf</a>(<a href="../h_src/143300644.htm" class="localvar">buff</a>, <a href="../h_src/143300508.htm" class="localvar">sz</a>, <a href="../h_src/57451460.htm" class="macro">LUA_NUMBER_FMT</a> &quot;x0p+0&quot;, (<a href="../h_src/57451732.htm" class="macro">LUAI_UACNUMBER</a>)<a href="../h_src/143300372.htm" class="localvar">x</a>);
  }
  else {
    int <a href="../h_src/143300236.htm" class="localvar">e</a>;
    <a href="../h_src/57442144.htm" class="type">lua_Number</a> <a href="../h_src/143300100.htm" class="localvar">m</a> = <a href="../h_src/57449148.htm" class="macro">l_mathop</a>(<a href="../h_aa/58118864.htm" class="libfunc">frexp</a>)(<a href="../h_src/143300372.htm" class="localvar">x</a>, &amp;<a href="../h_src/143300236.htm" class="localvar">e</a>);  <a  class="comments">/* 'x' fraction and exponent */</a>
    int <a href="../h_src/143299964.htm" class="localvar">n</a> = 0;  <a  class="comments">/* character count */</a>
    if (<a href="../h_src/143300100.htm" class="localvar">m</a> &lt; 0) {  <a  class="comments">/* is number negative? */</a>
      <a href="../h_src/143300644.htm" class="localvar">buff</a>[<a href="../h_src/143299964.htm" class="localvar">n</a>++] = '-';  <a  class="comments">/* add sign */</a>
      <a href="../h_src/143300100.htm" class="localvar">m</a> = -<a href="../h_src/143300100.htm" class="localvar">m</a>;  <a  class="comments">/* make it positive */</a>
    }
    <a href="../h_src/143300644.htm" class="localvar">buff</a>[<a href="../h_src/143299964.htm" class="localvar">n</a>++] = '0'; <a href="../h_src/143300644.htm" class="localvar">buff</a>[<a href="../h_src/143299964.htm" class="localvar">n</a>++] = 'x';  <a  class="comments">/* add &quot;0x&quot; */</a>
    <a href="../h_src/143300100.htm" class="localvar">m</a> = <a href="../h_src/143301596.htm" class="function">adddigit</a>(<a href="../h_src/143300644.htm" class="localvar">buff</a>, <a href="../h_src/143299964.htm" class="localvar">n</a>++, <a href="../h_src/143300100.htm" class="localvar">m</a> * (1 &lt;&lt; <a href="../h_src/143301732.htm" class="macro">L_NBFD</a>));  <a  class="comments">/* add first digit */</a>
    <a href="../h_src/143300236.htm" class="localvar">e</a> -= <a href="../h_src/143301732.htm" class="macro">L_NBFD</a>;  <a  class="comments">/* this digit goes before the radix point */</a>
    if (<a href="../h_src/143300100.htm" class="localvar">m</a> &gt; 0) {  <a  class="comments">/* more digits? */</a>
      <a href="../h_src/143300644.htm" class="localvar">buff</a>[<a href="../h_src/143299964.htm" class="localvar">n</a>++] = <a href="../h_src/57448468.htm" class="macro">lua_getlocaledecpoint</a>();  <a  class="comments">/* add radix point */</a>
      do {  <a  class="comments">/* add as many digits as needed */</a>
        <a href="../h_src/143300100.htm" class="localvar">m</a> = <a href="../h_src/143301596.htm" class="function">adddigit</a>(<a href="../h_src/143300644.htm" class="localvar">buff</a>, <a href="../h_src/143299964.htm" class="localvar">n</a>++, <a href="../h_src/143300100.htm" class="localvar">m</a> * 16);
      } while (<a href="../h_src/143300100.htm" class="localvar">m</a> &gt; 0);
    }
    <a href="../h_src/143299964.htm" class="localvar">n</a> += <a href="../h_src/57449692.htm" class="macro">l_sprintf</a>(<a href="../h_src/143300644.htm" class="localvar">buff</a> + <a href="../h_src/143299964.htm" class="localvar">n</a>, <a href="../h_src/143300508.htm" class="localvar">sz</a> - <a href="../h_src/143299964.htm" class="localvar">n</a>, &quot;p%+d&quot;, <a href="../h_src/143300236.htm" class="localvar">e</a>);  <a  class="comments">/* add exponent */</a>
    <a href="../h_src/57415352.htm" class="macro">lua_assert</a>(n &lt; sz);
    return <a href="../h_src/143299964.htm" class="localvar">n</a>;
  }
}
</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

