<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>funcargs</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/58015260.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/58015260.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/58015260.htm" class="function" target="_self">Flow Chart</a></li>
<li id="current"><a href="../h_src/58015260.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/58015260.htm" class="function" target="_self">Definition</a></li>
<li><a href="../h_sc/58015260.htm" class="function" target="_self">Source Checks</a></li>
<li><a href="../h_src/58057080.htm#1025" class="function" target="_self">Source File</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Source Code</h4>
<pre class=src>
static void <a href="../h_src/58015260.htm" class="function">funcargs</a> (<a href="../h_src/57700124.htm" class="type">LexState</a> *<a href="../h_src/58015124.htm" class="localvar">ls</a>, <a href="../h_src/57679384.htm" class="type">expdesc</a> *<a href="../h_src/58014988.htm" class="localvar">f</a>, int <a href="../h_src/58014852.htm" class="localvar">line</a>) {
  <a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/58014716.htm" class="localvar">fs</a> = <a href="../h_src/58015124.htm" class="localvar">ls</a>-&gt;<a href="../h_src/57701008.htm" class="variable">fs</a>;
  <a href="../h_src/57679384.htm" class="type">expdesc</a> <a href="../h_src/58014580.htm" class="localvar">args</a>;
  int <a href="../h_src/58014444.htm" class="localvar">base</a>, <a href="../h_src/58014308.htm" class="localvar">nparams</a>;
  switch (<a href="../h_src/58015124.htm" class="localvar">ls</a>-&gt;<a href="../h_src/57701416.htm" class="variable">t</a>.<a href="../h_src/57701960.htm" class="variable">token</a>) {
    case '(': {  <a  class="comments">/* funcargs -&gt; '(' [ explist ] ')' */</a>
      <a href="../h_src/57699784.htm" class="function">luaX_next</a>(<a href="../h_src/58015124.htm" class="localvar">ls</a>);
      if (<a href="../h_src/58015124.htm" class="localvar">ls</a>-&gt;<a href="../h_src/57701416.htm" class="variable">t</a>.<a href="../h_src/57701960.htm" class="variable">token</a> == ')')  <a  class="comments">/* arg list is empty? */</a>
        <a href="../h_src/58014580.htm" class="localvar">args</a>.<a href="../h_src/57680744.htm" class="variable">k</a> = <a href="../h_src/57682716.htm" class="variable">VVOID</a>;
      else {
        <a href="../h_src/58015804.htm" class="function">explist</a>(<a href="../h_src/58015124.htm" class="localvar">ls</a>, &amp;<a href="../h_src/58014580.htm" class="localvar">args</a>);
        if (<a href="../h_src/58056604.htm" class="macro">hasmultret</a>(<a href="../h_src/58014580.htm" class="localvar">args</a>.<a href="../h_src/57680744.htm" class="variable">k</a>))
          <a href="../h_src/57671564.htm" class="macro">luaK_setmultret</a>(<a href="../h_src/58014716.htm" class="localvar">fs</a>, &amp;<a href="../h_src/58014580.htm" class="localvar">args</a>);
      }
      <a href="../h_src/58051980.htm" class="function">check_match</a>(<a href="../h_src/58015124.htm" class="localvar">ls</a>, ')', '(', <a href="../h_src/58014852.htm" class="localvar">line</a>);
      break;
    }
    case '{': {  <a  class="comments">/* funcargs -&gt; constructor */</a>
      <a href="../h_src/58018932.htm" class="function">constructor</a>(<a href="../h_src/58015124.htm" class="localvar">ls</a>, &amp;<a href="../h_src/58014580.htm" class="localvar">args</a>);
      break;
    }
    case <a href="../h_src/57702844.htm" class="variable">TK_STRING</a>: {  <a  class="comments">/* funcargs -&gt; STRING */</a>
      <a href="../h_src/58050348.htm" class="function">codestring</a>(&amp;<a href="../h_src/58014580.htm" class="localvar">args</a>, <a href="../h_src/58015124.htm" class="localvar">ls</a>-&gt;<a href="../h_src/57701416.htm" class="variable">t</a>.<a href="../h_src/57701892.htm" class="variable">seminfo</a>.<a href="../h_src/57702300.htm" class="variable">ts</a>);
      <a href="../h_src/57699784.htm" class="function">luaX_next</a>(<a href="../h_src/58015124.htm" class="localvar">ls</a>);  <a  class="comments">/* must use 'seminfo' before 'next' */</a>
      break;
    }
    default: {
      <a href="../h_src/57699648.htm" class="function">luaX_syntaxerror</a>(<a href="../h_src/58015124.htm" class="localvar">ls</a>, &quot;function arguments expected&quot;);
    }
  }
  <a href="../h_src/57548848.htm" class="macro">lua_assert</a>(f-&gt;k == VNONRELOC);
  <a href="../h_src/58014444.htm" class="localvar">base</a> = <a href="../h_src/58014988.htm" class="localvar">f</a>-&gt;<a href="../h_src/57679588.htm" class="variable">u</a>.<a href="../h_src/57680404.htm" class="variable">info</a>;  <a  class="comments">/* base register for call */</a>
  if (<a href="../h_src/58056604.htm" class="macro">hasmultret</a>(<a href="../h_src/58014580.htm" class="localvar">args</a>.<a href="../h_src/57680744.htm" class="variable">k</a>))
    <a href="../h_src/58014308.htm" class="localvar">nparams</a> = <a href="../h_src/57445612.htm" class="macro">LUA_MULTRET</a>;  <a  class="comments">/* open call */</a>
  else {
    if (<a href="../h_src/58014580.htm" class="localvar">args</a>.<a href="../h_src/57680744.htm" class="variable">k</a> != <a href="../h_src/57682716.htm" class="variable">VVOID</a>)
      <a href="../h_src/57670272.htm" class="function">luaK_exp2nextreg</a>(<a href="../h_src/58014716.htm" class="localvar">fs</a>, &amp;<a href="../h_src/58014580.htm" class="localvar">args</a>);  <a  class="comments">/* close last argument */</a>
    <a href="../h_src/58014308.htm" class="localvar">nparams</a> = <a href="../h_src/58014716.htm" class="localvar">fs</a>-&gt;<a href="../h_src/57674760.htm" class="variable">freereg</a> - (<a href="../h_src/58014444.htm" class="localvar">base</a>+1);
  }
  <a href="../h_src/58050892.htm" class="function">init_exp</a>(<a href="../h_src/58014988.htm" class="localvar">f</a>, <a href="../h_src/57681492.htm" class="variable">VCALL</a>, <a href="../h_src/57672380.htm" class="macro">luaK_codeABC</a>(<a href="../h_src/58014716.htm" class="localvar">fs</a>, <a href="../h_src/57685912.htm" class="variable">OP_CALL</a>, <a href="../h_src/58014444.htm" class="localvar">base</a>, <a href="../h_src/58014308.htm" class="localvar">nparams</a>+1, 2));
  <a href="../h_src/57670816.htm" class="function">luaK_fixline</a>(<a href="../h_src/58014716.htm" class="localvar">fs</a>, <a href="../h_src/58014852.htm" class="localvar">line</a>);
  <a href="../h_src/58014716.htm" class="localvar">fs</a>-&gt;<a href="../h_src/57674760.htm" class="variable">freereg</a> = <a href="../h_src/58014444.htm" class="localvar">base</a>+1;  <a  class="comments">/* call remove function and arguments and leaves</a>
<a  class="comments">                            (unless changed) one result */</a>
}
</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

