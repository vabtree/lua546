<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>luaV_finishOp</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/57611004.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/57611004.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/57611004.htm" class="function" target="_self">Flow Chart</a></li>
<li id="current"><a href="../h_src/57611004.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/57611004.htm" class="function" target="_self">Definition</a></li>
<li><a href="../h_sc/57611004.htm" class="function" target="_self">Source Checks</a></li>
<li><a href="../h_src/58062016.htm#809" class="function" target="_self">Source File</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Source Code</h4>
<pre class=src>
void <a href="../h_src/57611004.htm" class="function">luaV_finishOp</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58196492.htm" class="localvar">L</a>) {
  <a href="../h_src/57537764.htm" class="type">CallInfo</a> *<a href="../h_src/58196356.htm" class="localvar">ci</a> = <a href="../h_src/58196492.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642420.htm" class="variable">ci</a>;
  <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/58196220.htm" class="localvar">base</a> = <a href="../h_src/58196356.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57651532.htm" class="variable">func</a>.<a href="../h_src/57531984.htm" class="variable">p</a> + 1;
  <a href="../h_src/57545108.htm" class="type">Instruction</a> <a href="../h_src/58196084.htm" class="localvar">inst</a> = *(<a href="../h_src/58196356.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650852.htm" class="variable">l</a>.<a href="../h_src/57651124.htm" class="variable">savedpc</a> - 1);  <a  class="comments">/* interrupted instruction */</a>
  <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/58195948.htm" class="localvar">op</a> = <a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/58196084.htm" class="localvar">inst</a>);
  switch (<a href="../h_src/58195948.htm" class="localvar">op</a>) {  <a  class="comments">/* finish its execution */</a>
    case <a href="../h_src/57687408.htm" class="variable">OP_MMBIN</a>: case <a href="../h_src/57687340.htm" class="variable">OP_MMBINI</a>: case <a href="../h_src/57687272.htm" class="variable">OP_MMBINK</a>: {
      <a href="../h_src/57533548.htm" class="macro">setobjs2s</a>(<a href="../h_src/58196492.htm" class="localvar">L</a>, <a href="../h_src/58196220.htm" class="localvar">base</a> + <a href="../h_src/57694072.htm" class="macro">GETARG_A</a>(*(<a href="../h_src/58196356.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650852.htm" class="variable">l</a>.<a href="../h_src/57651124.htm" class="variable">savedpc</a> - 2)), --<a href="../h_src/58196492.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>);
      break;
    }
    case <a href="../h_src/57687204.htm" class="variable">OP_UNM</a>: case <a href="../h_src/57687136.htm" class="variable">OP_BNOT</a>: case <a href="../h_src/57687000.htm" class="variable">OP_LEN</a>:
    case <a href="../h_src/57689788.htm" class="variable">OP_GETTABUP</a>: case <a href="../h_src/57689720.htm" class="variable">OP_GETTABLE</a>: case <a href="../h_src/57689652.htm" class="variable">OP_GETI</a>:
    case <a href="../h_src/57689584.htm" class="variable">OP_GETFIELD</a>: case <a href="../h_src/57689176.htm" class="variable">OP_SELF</a>: {
      <a href="../h_src/57533548.htm" class="macro">setobjs2s</a>(<a href="../h_src/58196492.htm" class="localvar">L</a>, <a href="../h_src/58196220.htm" class="localvar">base</a> + <a href="../h_src/57694072.htm" class="macro">GETARG_A</a>(<a href="../h_src/58196084.htm" class="localvar">inst</a>), --<a href="../h_src/58196492.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>);
      break;
    }
    case <a href="../h_src/57686592.htm" class="variable">OP_LT</a>: case <a href="../h_src/57686524.htm" class="variable">OP_LE</a>:
    case <a href="../h_src/57686320.htm" class="variable">OP_LTI</a>: case <a href="../h_src/57686252.htm" class="variable">OP_LEI</a>:
    case <a href="../h_src/57686184.htm" class="variable">OP_GTI</a>: case <a href="../h_src/57686116.htm" class="variable">OP_GEI</a>:
    case <a href="../h_src/57686660.htm" class="variable">OP_EQ</a>: {  <a  class="comments">/* note that 'OP_EQI'/'OP_EQK' cannot yield */</a>
      int <a href="../h_src/58195268.htm" class="localvar">res</a> = !<a href="../h_src/57529400.htm" class="macro">l_isfalse</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58196492.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1));
      <a href="../h_src/58196492.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>--;
#if defined(<a href="../h_src/57453092.htm" class="macro">LUA_COMPAT_LT_LE</a>)
      if (<a href="../h_src/58196356.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57649424.htm" class="variable">callstatus</a> &amp; <a href="../h_src/57647860.htm" class="macro">CIST_LEQ</a>) {  <a  class="comments">/* &quot;&lt;=&quot; using &quot;&lt;&quot; instead? */</a>
        <a href="../h_src/58196356.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57649424.htm" class="variable">callstatus</a> ^= <a href="../h_src/57647860.htm" class="macro">CIST_LEQ</a>;  <a  class="comments">/* clear mark */</a>
        <a href="../h_src/58195268.htm" class="localvar">res</a> = !<a href="../h_src/58195268.htm" class="localvar">res</a>;  <a  class="comments">/* negate result */</a>
      }
#endif
      <a href="../h_src/57548848.htm" class="macro">lua_assert</a>(<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(*ci-&gt;u.l.savedpc) == OP_JMP);
      if (<a href="../h_src/58195268.htm" class="localvar">res</a> != <a href="../h_src/57692848.htm" class="macro">GETARG_k</a>(<a href="../h_src/58196084.htm" class="localvar">inst</a>))  <a  class="comments">/* condition failed? */</a>
        <a href="../h_src/58196356.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650852.htm" class="variable">l</a>.<a href="../h_src/57651124.htm" class="variable">savedpc</a>++;  <a  class="comments">/* skip jump instruction */</a>
      break;
    }
    case <a href="../h_src/57686932.htm" class="variable">OP_CONCAT</a>: {
      <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/58195132.htm" class="localvar">top</a> = <a href="../h_src/58196492.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> - 1;  <a  class="comments">/* top when 'luaT_tryconcatTM' was called */</a>
      int <a href="../h_src/58194996.htm" class="localvar">a</a> = <a href="../h_src/57694072.htm" class="macro">GETARG_A</a>(<a href="../h_src/58196084.htm" class="localvar">inst</a>);      <a  class="comments">/* first element to concatenate */</a>
      int <a href="../h_src/58194860.htm" class="localvar">total</a> = <a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/58195132.htm" class="localvar">top</a> - 1 - (<a href="../h_src/58196220.htm" class="localvar">base</a> + <a href="../h_src/58194996.htm" class="localvar">a</a>));  <a  class="comments">/* yet to concatenate */</a>
      <a href="../h_src/57533548.htm" class="macro">setobjs2s</a>(<a href="../h_src/58196492.htm" class="localvar">L</a>, <a href="../h_src/58195132.htm" class="localvar">top</a> - 2, <a href="../h_src/58195132.htm" class="localvar">top</a>);  <a  class="comments">/* put TM result in proper position */</a>
      <a href="../h_src/58196492.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> = <a href="../h_src/58195132.htm" class="localvar">top</a> - 1;  <a  class="comments">/* top is one after last element (at top-2) */</a>
      <a href="../h_src/57610868.htm" class="function">luaV_concat</a>(<a href="../h_src/58196492.htm" class="localvar">L</a>, <a href="../h_src/58194860.htm" class="localvar">total</a>);  <a  class="comments">/* concat them (may yield again) */</a>
      break;
    }
    case <a href="../h_src/57686864.htm" class="variable">OP_CLOSE</a>: {  <a  class="comments">/* yielded closing variables */</a>
      <a href="../h_src/58196356.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650852.htm" class="variable">l</a>.<a href="../h_src/57651124.htm" class="variable">savedpc</a>--;  <a  class="comments">/* repeat instruction to close other vars. */</a>
      break;
    }
    case <a href="../h_src/57685776.htm" class="variable">OP_RETURN</a>: {  <a  class="comments">/* yielded closing variables */</a>
      <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/58194452.htm" class="localvar">ra</a> = <a href="../h_src/58196220.htm" class="localvar">base</a> + <a href="../h_src/57694072.htm" class="macro">GETARG_A</a>(<a href="../h_src/58196084.htm" class="localvar">inst</a>);
      <a  class="comments">/* adjust top to signal correct number of returns, in case the</a>
<a  class="comments">         return is &quot;up to top&quot; ('isIT') */</a>
      <a href="../h_src/58196492.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> = <a href="../h_src/58194452.htm" class="localvar">ra</a> + <a href="../h_src/58196356.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57649560.htm" class="variable">u2</a>.<a href="../h_src/57650036.htm" class="variable">nres</a>;
      <a  class="comments">/* repeat instruction to close other vars. and complete the return */</a>
      <a href="../h_src/58196356.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650852.htm" class="variable">l</a>.<a href="../h_src/57651124.htm" class="variable">savedpc</a>--;
      break;
    }
    default: {
      <a  class="comments">/* only these other opcodes can yield */</a>
      <a href="../h_src/57548848.htm" class="macro">lua_assert</a>(op == OP_TFORCALL || op == OP_CALL ||
           op == OP_TAILCALL || op == OP_SETTABUP || op == OP_SETTABLE ||
           op == OP_SETI || op == OP_SETFIELD);
      break;
    }
  }
}
</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

