<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>luaV_concat</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/57610868.htm" class="function" target="_self">Info</a></li>
<li><a href="../h_rx/57610868.htm" class="function" target="_self">Calling Hierarchy</a></li>
<li><a href="../h_nf/57610868.htm" class="function" target="_self">Flow Chart</a></li>
<li id="current"><a href="../h_src/57610868.htm" class="function" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_src/57610868.htm" class="function" target="_self">Definition</a></li>
<li><a href="../h_sc/57610868.htm" class="function" target="_self">Source Checks</a></li>
<li><a href="../h_src/58062016.htm#638" class="function" target="_self">Source File</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Source Code</h4>
<pre class=src>
void <a href="../h_src/57610868.htm" class="function">luaV_concat</a> (<a href="../h_src/57444252.htm" class="type">lua_State</a> *<a href="../h_src/58202952.htm" class="localvar">L</a>, int <a href="../h_src/58202816.htm" class="localvar">total</a>) {
  if (<a href="../h_src/58202816.htm" class="localvar">total</a> == 1)
    return;  <a  class="comments">/* &quot;all&quot; values already concatenated */</a>
  do {
    <a href="../h_src/57532188.htm" class="type">StkId</a> <a href="../h_src/58202680.htm" class="localvar">top</a> = <a href="../h_src/58202952.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a>;
    int <a href="../h_src/58202544.htm" class="localvar">n</a> = 2;  <a  class="comments">/* number of elements handled in this pass (at least 2) */</a>
    if (!(<a href="../h_src/57524912.htm" class="macro">ttisstring</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58202680.htm" class="localvar">top</a> - 2)) || <a href="../h_src/57614200.htm" class="macro">cvt2str</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58202680.htm" class="localvar">top</a> - 2))) ||
        !<a href="../h_src/58204040.htm" class="macro">tostring</a>(<a href="../h_src/58202952.htm" class="localvar">L</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58202680.htm" class="localvar">top</a> - 1)))
      <a href="../h_src/57497712.htm" class="function">luaT_tryconcatTM</a>(<a href="../h_src/58202952.htm" class="localvar">L</a>);  <a  class="comments">/* may invalidate 'top' */</a>
    else if (<a href="../h_src/58203904.htm" class="macro">isemptystr</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58202680.htm" class="localvar">top</a> - 1)))  <a  class="comments">/* second operand is empty? */</a>
      <a href="../h_src/57547624.htm" class="macro">cast_void</a>(<a href="../h_src/58204040.htm" class="macro">tostring</a>(<a href="../h_src/58202952.htm" class="localvar">L</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58202680.htm" class="localvar">top</a> - 2)));  <a  class="comments">/* result is first operand */</a>
    else if (<a href="../h_src/58203904.htm" class="macro">isemptystr</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58202680.htm" class="localvar">top</a> - 2))) {  <a  class="comments">/* first operand is empty string? */</a>
      <a href="../h_src/57533548.htm" class="macro">setobjs2s</a>(<a href="../h_src/58202952.htm" class="localvar">L</a>, <a href="../h_src/58202680.htm" class="localvar">top</a> - 2, <a href="../h_src/58202680.htm" class="localvar">top</a> - 1);  <a  class="comments">/* result is second op. */</a>
    }
    else {
      <a  class="comments">/* at least two non-empty string values; get as many as possible */</a>
      <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/58202136.htm" class="localvar">tl</a> = <a href="../h_src/57522260.htm" class="macro">vslen</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58202680.htm" class="localvar">top</a> - 1));
      <a href="../h_src/57522736.htm" class="type">TString</a> *<a href="../h_src/58202000.htm" class="localvar">ts</a>;
      <a  class="comments">/* collect total length and number of strings */</a>
      for (<a href="../h_src/58202544.htm" class="localvar">n</a> = 1; <a href="../h_src/58202544.htm" class="localvar">n</a> &lt; <a href="../h_src/58202816.htm" class="localvar">total</a> &amp;&amp; <a href="../h_src/58204040.htm" class="macro">tostring</a>(<a href="../h_src/58202952.htm" class="localvar">L</a>, <a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58202680.htm" class="localvar">top</a> - <a href="../h_src/58202544.htm" class="localvar">n</a> - 1)); <a href="../h_src/58202544.htm" class="localvar">n</a>++) {
        <a href="../h_aa/57441192.htm" class="type">size_t</a> <a href="../h_src/58201864.htm" class="localvar">l</a> = <a href="../h_src/57522260.htm" class="macro">vslen</a>(<a href="../h_src/57531712.htm" class="macro">s2v</a>(<a href="../h_src/58202680.htm" class="localvar">top</a> - <a href="../h_src/58202544.htm" class="localvar">n</a> - 1));
        if (<a href="../h_src/57551568.htm" class="macro">l_unlikely</a>(<a href="../h_src/58201864.htm" class="localvar">l</a> &gt;= (<a href="../h_src/57550208.htm" class="macro">MAX_SIZE</a>/sizeof(char)) - <a href="../h_src/58202136.htm" class="localvar">tl</a>)) {
          <a href="../h_src/58202952.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> = <a href="../h_src/58202680.htm" class="localvar">top</a> - <a href="../h_src/58202816.htm" class="localvar">total</a>;  <a  class="comments">/* pop strings to avoid wasting stack */</a>
          <a href="../h_src/57635280.htm" class="function">luaG_runerror</a>(<a href="../h_src/58202952.htm" class="localvar">L</a>, &quot;string length overflow&quot;);
        }
        <a href="../h_src/58202136.htm" class="localvar">tl</a> += <a href="../h_src/58201864.htm" class="localvar">l</a>;
      }
      if (<a href="../h_src/58202136.htm" class="localvar">tl</a> &lt;= <a href="../h_src/57544904.htm" class="macro">LUAI_MAXSHORTLEN</a>) {  <a  class="comments">/* is result a short string? */</a>
        char <a href="../h_src/58201728.htm" class="localvar">buff</a>[<a href="../h_src/57544904.htm" class="macro">LUAI_MAXSHORTLEN</a>];
        <a href="../h_src/58203768.htm" class="function">copy2buff</a>(<a href="../h_src/58202680.htm" class="localvar">top</a>, <a href="../h_src/58202544.htm" class="localvar">n</a>, <a href="../h_src/58201728.htm" class="localvar">buff</a>);  <a  class="comments">/* copy strings to buffer */</a>
        <a href="../h_src/58202000.htm" class="localvar">ts</a> = <a href="../h_src/57618552.htm" class="function">luaS_newlstr</a>(<a href="../h_src/58202952.htm" class="localvar">L</a>, <a href="../h_src/58201728.htm" class="localvar">buff</a>, <a href="../h_src/58202136.htm" class="localvar">tl</a>);
      }
      else {  <a  class="comments">/* long string; copy strings directly to final result */</a>
        <a href="../h_src/58202000.htm" class="localvar">ts</a> = <a href="../h_src/57618416.htm" class="function">luaS_createlngstrobj</a>(<a href="../h_src/58202952.htm" class="localvar">L</a>, <a href="../h_src/58202136.htm" class="localvar">tl</a>);
        <a href="../h_src/58203768.htm" class="function">copy2buff</a>(<a href="../h_src/58202680.htm" class="localvar">top</a>, <a href="../h_src/58202544.htm" class="localvar">n</a>, <a href="../h_src/57522668.htm" class="macro">getstr</a>(<a href="../h_src/58202000.htm" class="localvar">ts</a>));
      }
      <a href="../h_src/57524096.htm" class="macro">setsvalue2s</a>(<a href="../h_src/58202952.htm" class="localvar">L</a>, <a href="../h_src/58202680.htm" class="localvar">top</a> - <a href="../h_src/58202544.htm" class="localvar">n</a>, <a href="../h_src/58202000.htm" class="localvar">ts</a>);  <a  class="comments">/* create result */</a>
    }
    <a href="../h_src/58202816.htm" class="localvar">total</a> -= <a href="../h_src/58202544.htm" class="localvar">n</a> - 1;  <a  class="comments">/* got 'n' strings to create one new */</a>
    <a href="../h_src/58202952.htm" class="localvar">L</a>-&gt;<a href="../h_src/57642624.htm" class="variable">top</a>.<a href="../h_src/57531984.htm" class="variable">p</a> -= <a href="../h_src/58202544.htm" class="localvar">n</a> - 1;  <a  class="comments">/* popped 'n' strings and pushed one */</a>
  } while (<a href="../h_src/58202816.htm" class="localvar">total</a> &gt; 1);  <a  class="comments">/* repeat until only 1 result left */</a>
}
</pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</body>
</html>

