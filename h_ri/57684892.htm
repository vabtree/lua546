<html>
<head>
<!-- This html document was created by Imagix 4D -->
<link href="../htm/symbol.css" rel="stylesheet" type="text/css">
<link href="../htm/symcolors.css" rel="stylesheet" type="text/css">
<link href="../htm/notebook.css" rel="stylesheet" type="text/css">
<base target="symbol">
</head>
<body>

<h2>OpCode</h2>

<div class="notebook">
<ul>
<li><a href="../h_aa/57684892.htm" class="type" target="_self">Info</a></li>
<li id="current"><a href="../h_rx/57684892.htm" class="type" target="_self">Usage</a></li>
<li><a href="../h_src/57684892.htm" class="type" target="_self">Source Code</a></li>
</ul>
</div>
<div class="notebook">
<ul>
<li id="current"><a href="../h_ri/57684892.htm" class="type" target="_self">Used By</a></li>
<li><a href="../h_rx/57684892.htm" class="type" target="_self">Cross Reference</a></li>
</ul>
</div>
<div class="nb_clear">
</div>
<h4>Used In</h4>
<pre><a href="../h_aa/57784212.htm" class=variable>base</a>                                             lcode.c
  1357 :    <a href="../h_src/57545312.htm" class="macro">l_sinline</a> <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57784620.htm" class="function">binopr2op</a> (<a href="../h_src/57672584.htm" class="type">BinOpr</a> <a href="../h_src/57784484.htm" class="localvar">opr</a>, <a href="../h_src/57672584.htm" class="type">BinOpr</a> <a href="../h_src/57784348.htm" class="localvar">baser</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57784212.htm" class="localvar">base</a>) {
<a href="../h_aa/57784620.htm" class=function>binopr2op</a>                                        lcode.c
  1357 :    <a href="../h_src/57545312.htm" class="macro">l_sinline</a> <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57784620.htm" class="function">binopr2op</a> (<a href="../h_src/57672584.htm" class="type">BinOpr</a> <a href="../h_src/57784484.htm" class="localvar">opr</a>, <a href="../h_src/57672584.htm" class="type">BinOpr</a> <a href="../h_src/57784348.htm" class="localvar">baser</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57784212.htm" class="localvar">base</a>) {
  1361 :    return <a href="../h_src/57547760.htm" class="macro">cast</a>(<a href="../h_src/57684756.htm" class="type">OpCode</a>, (<a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/57784484.htm" class="localvar">opr</a>) - <a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/57784348.htm" class="localvar">baser</a>)) + <a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/57784212.htm" class="localvar">base</a>));
<a href="../h_aa/57767756.htm" class=function>codeconcat</a>                                       lcode.c
  1684 :    if (<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(*<a href="../h_src/57767076.htm" class="localvar">ie2</a>) == <a href="../h_src/57686932.htm" class="variable">OP_CONCAT</a>) {  <a  class="comments">/* is 'e2' a concatenation? */</a>
<a href="../h_aa/57763812.htm" class=function>finaltarget</a>                                      lcode.c
  1830 :    if (<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/57763268.htm" class="localvar">pc</a>) != <a href="../h_src/57686728.htm" class="variable">OP_JMP</a>)
<a href="../h_aa/57742732.htm" class=function>findsetreg</a>                                       ldebug.c
   469 :    if (<a href="../h_src/57683736.htm" class="macro">testMMMode</a>(<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/57742596.htm" class="localvar">p</a>-&gt;<a href="../h_src/57514916.htm" class="variable">code</a>[<a href="../h_src/57742460.htm" class="localvar">lastpc</a>])))
   473 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57741644.htm" class="localvar">op</a> = <a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/57741780.htm" class="localvar">i</a>);
<a href="../h_aa/57998940.htm" class=variable>forloop</a>                                          lparser.c
  1547 :    static const <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57998940.htm" class="localvar">forloop</a>[2] = {<a href="../h_src/57685572.htm" class="variable">OP_FORLOOP</a>, <a href="../h_src/57685300.htm" class="variable">OP_TFORLOOP</a>};
<a href="../h_aa/57999076.htm" class=variable>forprep</a>                                          lparser.c
  1546 :    static const <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57999076.htm" class="localvar">forprep</a>[2] = {<a href="../h_src/57685504.htm" class="variable">OP_FORPREP</a>, <a href="../h_src/57685436.htm" class="variable">OP_TFORPREP</a>};
<a href="../h_aa/57738244.htm" class=function>funcnamefromcode</a>                                 ldebug.c
   598 :    switch (<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/57737428.htm" class="localvar">i</a>)) {
<a href="../h_aa/57660820.htm" class=function>getjumpcontrol</a>                                   lcode.c
   245 :    if (<a href="../h_src/57660548.htm" class="localvar">pc</a> &gt;= 1 &amp;&amp; <a href="../h_src/57684144.htm" class="macro">testTMode</a>(<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(*(<a href="../h_src/57660412.htm" class="localvar">pi</a>-1))))
<a href="../h_aa/57745588.htm" class=function>getobjname</a>                                       ldebug.c
   536 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57739060.htm" class="localvar">op</a> = <a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/57739196.htm" class="localvar">i</a>);
<a href="../h_aa/57790740.htm" class=function>jumponcond</a>                                       lcode.c
  1118 :    if (<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/57790196.htm" class="localvar">ie</a>) == <a href="../h_src/57687068.htm" class="variable">OP_NOT</a>) {
<a href="../h_aa/57635076.htm" class=function>luaG_traceexec</a>                                   ldebug.c
   900 :    if (!<a href="../h_src/57683464.htm" class="macro">isIT</a>(*(<a href="../h_src/57885436.htm" class="localvar">ci</a>-&gt;<a href="../h_src/57650308.htm" class="variable">u</a>.<a href="../h_src/57650852.htm" class="variable">l</a>.<a href="../h_src/57651124.htm" class="variable">savedpc</a> - 1)))  <a  class="comments">/* top not being used? */</a>
<a href="../h_aa/57668844.htm" class=function>luaK_finish</a>                                      lcode.c
  1849 :    switch (<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(*<a href="../h_src/57762724.htm" class="localvar">pc</a>)) {
<a href="../h_aa/57670748.htm" class=function>luaK_nil</a>                                         lcode.c
   134 :    if (<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(*<a href="../h_src/57665036.htm" class="localvar">previous</a>) == <a href="../h_src/57689992.htm" class="variable">OP_LOADNIL</a>) {  <a  class="comments">/* previous is LOADNIL? */</a>
<a href="../h_aa/57610936.htm" class=function>luaV_execute</a>                                     lvm.c
  1183 :    <a href="../h_src/58187176.htm" class="macro">vmdispatch</a> (<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/58186564.htm" class="localvar">i</a>)) {
  1187 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1193 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1199 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1205 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1212 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1217 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1223 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1228 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1236 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1242 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1249 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1262 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1277 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1292 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1305 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1318 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1333 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1348 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1361 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1380 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1394 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1398 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1402 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1406 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1410 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1415 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1419 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1423 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1428 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1432 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1436 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1440 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1450 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1460 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1464 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1468 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1472 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1477 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1481 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1485 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1490 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1494 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1498 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1502 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1506 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1510 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1520 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1530 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1540 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1555 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1566 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1575 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1580 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1588 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1593 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1599 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1603 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1611 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1615 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1619 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1627 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1640 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1644 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1648 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1652 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1656 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1662 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1673 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1690 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1803 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1810 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1845 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1869 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1876 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1882 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1891 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
  1895 :    <a href="../h_src/58186904.htm" class="macro">vmbreak</a>;
<a href="../h_aa/57611004.htm" class=function>luaV_finishOp</a>                                    lvm.c
   813 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/58195948.htm" class="localvar">op</a> = <a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/58196084.htm" class="localvar">inst</a>);
<a href="../h_aa/57781628.htm" class=variable>mmop</a>                                             lcode.c
  1405 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57781628.htm" class="localvar">mmop</a>, <a href="../h_src/57499004.htm" class="type">TMS</a> <a href="../h_src/57781492.htm" class="localvar">event</a>) {
<a href="../h_aa/57796860.htm" class=function>need_value</a>                                       lcode.c
   901 :    if (<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/57796452.htm" class="localvar">i</a>) != <a href="../h_src/57685980.htm" class="variable">OP_TESTSET</a>) return 1;
<a href="../h_aa/57793052.htm" class=variable>o</a>                                                lcode.c
  1038 :    static void <a href="../h_src/57793324.htm" class="function">codeABRK</a> (<a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57793188.htm" class="localvar">fs</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57793052.htm" class="localvar">o</a>, int <a href="../h_src/57792916.htm" class="localvar">a</a>, int <a href="../h_src/57792780.htm" class="localvar">b</a>,
<a href="../h_aa/57812976.htm" class=variable>o</a>                                                lcode.c
   429 :    static int <a href="../h_src/57668436.htm" class="function">codesJ</a> (<a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57813112.htm" class="localvar">fs</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57812976.htm" class="localvar">o</a>, int <a href="../h_src/57812840.htm" class="localvar">sj</a>, int <a href="../h_src/57812704.htm" class="localvar">k</a>) {
<a href="../h_aa/57813656.htm" class=variable>o</a>                                                lcode.c
   418 :    int <a href="../h_src/57671156.htm" class="function">luaK_codeAsBx</a> (<a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57813792.htm" class="localvar">fs</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57813656.htm" class="localvar">o</a>, int <a href="../h_src/57813520.htm" class="localvar">a</a>, int <a href="../h_src/57813384.htm" class="localvar">bc</a>) {
<a href="../h_aa/57814200.htm" class=variable>o</a>                                                lcode.c
   408 :    int <a href="../h_src/57671224.htm" class="function">luaK_codeABx</a> (<a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57814336.htm" class="localvar">fs</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57814200.htm" class="localvar">o</a>, int <a href="../h_src/57814064.htm" class="localvar">a</a>, unsigned int <a href="../h_src/57813928.htm" class="localvar">bc</a>) {
<a href="../h_aa/57815016.htm" class=variable>o</a>                                                lcode.c
   397 :    int <a href="../h_src/57671088.htm" class="function">luaK_codeABCk</a> (<a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57815152.htm" class="localvar">fs</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57815016.htm" class="localvar">o</a>, int <a href="../h_src/57814880.htm" class="localvar">a</a>, int <a href="../h_src/57814744.htm" class="localvar">b</a>, int <a href="../h_src/57814608.htm" class="localvar">c</a>, int <a href="../h_src/57814472.htm" class="localvar">k</a>) {
<a href="../h_aa/143396496.htm" class=variable>o</a>                                                luac.c
   341 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/143396496.htm" class="localvar">o</a>=<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/143396632.htm" class="localvar">i</a>);
<a href="../h_aa/57661636.htm" class=variable>op</a>                                               lcode.c
   222 :    static int <a href="../h_src/57661908.htm" class="function">condjump</a> (<a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57661772.htm" class="localvar">fs</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57661636.htm" class="localvar">op</a>, int <a href="../h_src/57661500.htm" class="localvar">A</a>, int <a href="../h_src/57661364.htm" class="localvar">B</a>, int <a href="../h_src/57661228.htm" class="localvar">C</a>, int <a href="../h_src/57661092.htm" class="localvar">k</a>) {
<a href="../h_aa/57662044.htm" class=variable>op</a>                                               lcode.c
   208 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57662044.htm" class="localvar">op</a>;
<a href="../h_aa/57739060.htm" class=variable>op</a>                                               ldebug.c
   536 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57739060.htm" class="localvar">op</a> = <a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/57739196.htm" class="localvar">i</a>);
<a href="../h_aa/57741644.htm" class=variable>op</a>                                               ldebug.c
   473 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57741644.htm" class="localvar">op</a> = <a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/57741780.htm" class="localvar">i</a>);
<a href="../h_aa/57769252.htm" class=variable>op</a>                                               lcode.c
  1585 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57769252.htm" class="localvar">op</a>;
<a href="../h_aa/57770612.htm" class=variable>op</a>                                               lcode.c
  1553 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57770612.htm" class="localvar">op</a>;
<a href="../h_aa/57776868.htm" class=variable>op</a>                                               lcode.c
  1461 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57776868.htm" class="localvar">op</a>, int <a href="../h_src/57776732.htm" class="localvar">line</a>, <a href="../h_src/57499004.htm" class="type">TMS</a> <a href="../h_src/57776596.htm" class="localvar">event</a>) {
<a href="../h_aa/57777548.htm" class=variable>op</a>                                               lcode.c
  1452 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57777548.htm" class="localvar">op</a> = <a href="../h_src/57784620.htm" class="function">binopr2op</a>(<a href="../h_src/57778500.htm" class="localvar">opr</a>, <a href="../h_src/57674216.htm" class="variable">OPR_ADD</a>, <a href="../h_src/57689040.htm" class="variable">OP_ADDK</a>);
<a href="../h_aa/57779724.htm" class=variable>op</a>                                               lcode.c
  1436 :    static void <a href="../h_src/57779996.htm" class="function">codebini</a> (<a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57779860.htm" class="localvar">fs</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57779724.htm" class="localvar">op</a>,
<a href="../h_aa/57780268.htm" class=variable>op</a>                                               lcode.c
  1423 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57780268.htm" class="localvar">op</a> = <a href="../h_src/57784620.htm" class="function">binopr2op</a>(<a href="../h_src/57780812.htm" class="localvar">opr</a>, <a href="../h_src/57674216.htm" class="variable">OPR_ADD</a>, <a href="../h_src/57688224.htm" class="variable">OP_ADD</a>);
<a href="../h_aa/57782172.htm" class=variable>op</a>                                               lcode.c
  1404 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57782172.htm" class="localvar">op</a>, int <a href="../h_src/57782036.htm" class="localvar">v2</a>, int <a href="../h_src/57781900.htm" class="localvar">flip</a>, int <a href="../h_src/57781764.htm" class="localvar">line</a>,
<a href="../h_aa/57783260.htm" class=variable>op</a>                                               lcode.c
  1388 :    static void <a href="../h_src/57783532.htm" class="function">codeunexpval</a> (<a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57783396.htm" class="localvar">fs</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57783260.htm" class="localvar">op</a>, <a href="../h_src/57679384.htm" class="type">expdesc</a> *<a href="../h_src/57783124.htm" class="localvar">e</a>, int <a href="../h_src/57782988.htm" class="localvar">line</a>) {
<a href="../h_aa/57796996.htm" class=variable>op</a>                                               lcode.c
   888 :    static int <a href="../h_src/57797404.htm" class="function">code_loadbool</a> (<a href="../h_src/57674556.htm" class="type">FuncState</a> *<a href="../h_src/57797268.htm" class="localvar">fs</a>, int <a href="../h_src/57797132.htm" class="localvar">A</a>, <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57796996.htm" class="localvar">op</a>) {
<a href="../h_aa/58195948.htm" class=variable>op</a>                                               lvm.c
   813 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/58195948.htm" class="localvar">op</a> = <a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/58196084.htm" class="localvar">inst</a>);
<a href="../h_aa/57688224.htm" class=variable>OP_ADD</a>                                           lopcodes.h
   244 :    <a href="../h_src/57688224.htm" class="variable">OP_ADD</a>,<a  class="comments">/*	A B C	R[A] := R[B] + R[C]				*/</a>
<a href="../h_aa/57689108.htm" class=variable>OP_ADDI</a>                                          lopcodes.h
   227 :    <a href="../h_src/57689108.htm" class="variable">OP_ADDI</a>,<a  class="comments">/*	A B sC	R[A] := R[B] + sC				*/</a>
<a href="../h_aa/57689040.htm" class=variable>OP_ADDK</a>                                          lopcodes.h
   229 :    <a href="../h_src/57689040.htm" class="variable">OP_ADDK</a>,<a  class="comments">/*	A B C	R[A] := R[B] + K[C]:number			*/</a>
<a href="../h_aa/57687748.htm" class=variable>OP_BAND</a>                                          lopcodes.h
   252 :    <a href="../h_src/57687748.htm" class="variable">OP_BAND</a>,<a  class="comments">/*	A B C	R[A] := R[B] &amp; R[C]				*/</a>
<a href="../h_aa/57688564.htm" class=variable>OP_BANDK</a>                                         lopcodes.h
   237 :    <a href="../h_src/57688564.htm" class="variable">OP_BANDK</a>,<a  class="comments">/*	A B C	R[A] := R[B] &amp; K[C]:integer			*/</a>
<a href="../h_aa/57687136.htm" class=variable>OP_BNOT</a>                                          lopcodes.h
   263 :    <a href="../h_src/57687136.htm" class="variable">OP_BNOT</a>,<a  class="comments">/*	A B	R[A] := ~R[B]					*/</a>
<a href="../h_aa/57687680.htm" class=variable>OP_BOR</a>                                           lopcodes.h
   253 :    <a href="../h_src/57687680.htm" class="variable">OP_BOR</a>,<a  class="comments">/*	A B C	R[A] := R[B] | R[C]				*/</a>
<a href="../h_aa/57688496.htm" class=variable>OP_BORK</a>                                          lopcodes.h
   238 :    <a href="../h_src/57688496.htm" class="variable">OP_BORK</a>,<a  class="comments">/*	A B C	R[A] := R[B] | K[C]:integer			*/</a>
<a href="../h_aa/57687612.htm" class=variable>OP_BXOR</a>                                          lopcodes.h
   254 :    <a href="../h_src/57687612.htm" class="variable">OP_BXOR</a>,<a  class="comments">/*	A B C	R[A] := R[B] ~ R[C]				*/</a>
<a href="../h_aa/57688428.htm" class=variable>OP_BXORK</a>                                         lopcodes.h
   239 :    <a href="../h_src/57688428.htm" class="variable">OP_BXORK</a>,<a  class="comments">/*	A B C	R[A] := R[B] ~ K[C]:integer			*/</a>
<a href="../h_aa/57685912.htm" class=variable>OP_CALL</a>                                          lopcodes.h
   286 :    <a href="../h_src/57685912.htm" class="variable">OP_CALL</a>,<a  class="comments">/*	A B C	R[A], ... ,R[A+C-2] := R[A](R[A+1], ... ,R[A+B-1]) */</a>
<a href="../h_aa/57686864.htm" class=variable>OP_CLOSE</a>                                         lopcodes.h
   269 :    <a href="../h_src/57686864.htm" class="variable">OP_CLOSE</a>,<a  class="comments">/*	A	close all upvalues &gt;= R[A]			*/</a>
<a href="../h_aa/57685164.htm" class=variable>OP_CLOSURE</a>                                       lopcodes.h
   303 :    <a href="../h_src/57685164.htm" class="variable">OP_CLOSURE</a>,<a  class="comments">/*	A Bx	R[A] := closure(KPROTO[Bx])			*/</a>
<a href="../h_aa/57686932.htm" class=variable>OP_CONCAT</a>                                        lopcodes.h
   267 :    <a href="../h_src/57686932.htm" class="variable">OP_CONCAT</a>,<a  class="comments">/*	A B	R[A] := R[A].. ... ..R[A + B - 1]		*/</a>
<a href="../h_aa/57687884.htm" class=variable>OP_DIV</a>                                           lopcodes.h
   249 :    <a href="../h_src/57687884.htm" class="variable">OP_DIV</a>,<a  class="comments">/*	A B C	R[A] := R[B] / R[C]				*/</a>
<a href="../h_aa/57688700.htm" class=variable>OP_DIVK</a>                                          lopcodes.h
   234 :    <a href="../h_src/57688700.htm" class="variable">OP_DIVK</a>,<a  class="comments">/*	A B C	R[A] := R[B] / K[C]:number			*/</a>
<a href="../h_aa/57686660.htm" class=variable>OP_EQ</a>                                            lopcodes.h
   272 :    <a href="../h_src/57686660.htm" class="variable">OP_EQ</a>,<a  class="comments">/*	A B k	if ((R[A] == R[B]) ~= k) then pc++		*/</a>
<a href="../h_aa/57686388.htm" class=variable>OP_EQI</a>                                           lopcodes.h
   277 :    <a href="../h_src/57686388.htm" class="variable">OP_EQI</a>,<a  class="comments">/*	A sB k	if ((R[A] == sB) ~= k) then pc++		*/</a>
<a href="../h_aa/57686456.htm" class=variable>OP_EQK</a>                                           lopcodes.h
   276 :    <a href="../h_src/57686456.htm" class="variable">OP_EQK</a>,<a  class="comments">/*	A B k	if ((R[A] == K[B]) ~= k) then pc++		*/</a>
<a href="../h_aa/57684960.htm" class=variable>OP_EXTRAARG</a>                                      lopcodes.h
   309 :    <a href="../h_src/57684960.htm" class="variable">OP_EXTRAARG</a><a  class="comments">/*	Ax	extra (larger) argument for previous opcode	*/</a>
<a href="../h_aa/57685572.htm" class=variable>OP_FORLOOP</a>                                       lopcodes.h
   293 :    <a href="../h_src/57685572.htm" class="variable">OP_FORLOOP</a>,<a  class="comments">/*	A Bx	update counters; if loop continues then pc-=Bx; */</a>
<a href="../h_aa/57685504.htm" class=variable>OP_FORPREP</a>                                       lopcodes.h
   294 :    <a href="../h_src/57685504.htm" class="variable">OP_FORPREP</a>,<a  class="comments">/*	A Bx	&lt;check values and prepare counters&gt;;</a>
<a href="../h_aa/57686116.htm" class=variable>OP_GEI</a>                                           lopcodes.h
   281 :    <a href="../h_src/57686116.htm" class="variable">OP_GEI</a>,<a  class="comments">/*	A sB k	if ((R[A] &gt;= sB) ~= k) then pc++		*/</a>
<a href="../h_aa/57689584.htm" class=variable>OP_GETFIELD</a>                                      lopcodes.h
   216 :    <a href="../h_src/57689584.htm" class="variable">OP_GETFIELD</a>,<a  class="comments">/*	A B C	R[A] := R[B][K[C]:string]			*/</a>
<a href="../h_aa/57689652.htm" class=variable>OP_GETI</a>                                          lopcodes.h
   215 :    <a href="../h_src/57689652.htm" class="variable">OP_GETI</a>,<a  class="comments">/*	A B C	R[A] := R[B][C]					*/</a>
<a href="../h_aa/57689720.htm" class=variable>OP_GETTABLE</a>                                      lopcodes.h
   214 :    <a href="../h_src/57689720.htm" class="variable">OP_GETTABLE</a>,<a  class="comments">/*	A B C	R[A] := R[B][R[C]]				*/</a>
<a href="../h_aa/57689788.htm" class=variable>OP_GETTABUP</a>                                      lopcodes.h
   213 :    <a href="../h_src/57689788.htm" class="variable">OP_GETTABUP</a>,<a  class="comments">/*	A B C	R[A] := UpValue[B][K[C]:string]			*/</a>
<a href="../h_aa/57689924.htm" class=variable>OP_GETUPVAL</a>                                      lopcodes.h
   210 :    <a href="../h_src/57689924.htm" class="variable">OP_GETUPVAL</a>,<a  class="comments">/*	A B	R[A] := UpValue[B]				*/</a>
<a href="../h_aa/57686184.htm" class=variable>OP_GTI</a>                                           lopcodes.h
   280 :    <a href="../h_src/57686184.htm" class="variable">OP_GTI</a>,<a  class="comments">/*	A sB k	if ((R[A] &gt; sB) ~= k) then pc++			*/</a>
<a href="../h_aa/57687816.htm" class=variable>OP_IDIV</a>                                          lopcodes.h
   250 :    <a href="../h_src/57687816.htm" class="variable">OP_IDIV</a>,<a  class="comments">/*	A B C	R[A] := R[B] // R[C]				*/</a>
<a href="../h_aa/57688632.htm" class=variable>OP_IDIVK</a>                                         lopcodes.h
   235 :    <a href="../h_src/57688632.htm" class="variable">OP_IDIVK</a>,<a  class="comments">/*	A B C	R[A] := R[B] // K[C]:number			*/</a>
<a href="../h_aa/57686728.htm" class=variable>OP_JMP</a>                                           lopcodes.h
   271 :    <a href="../h_src/57686728.htm" class="variable">OP_JMP</a>,<a  class="comments">/*	sJ	pc += sJ					*/</a>
<a href="../h_aa/57686524.htm" class=variable>OP_LE</a>                                            lopcodes.h
   274 :    <a href="../h_src/57686524.htm" class="variable">OP_LE</a>,<a  class="comments">/*	A B k	if ((R[A] &lt;= R[B]) ~= k) then pc++		*/</a>
<a href="../h_aa/57686252.htm" class=variable>OP_LEI</a>                                           lopcodes.h
   279 :    <a href="../h_src/57686252.htm" class="variable">OP_LEI</a>,<a  class="comments">/*	A sB k	if ((R[A] &lt;= sB) ~= k) then pc++		*/</a>
<a href="../h_aa/57687000.htm" class=variable>OP_LEN</a>                                           lopcodes.h
   265 :    <a href="../h_src/57687000.htm" class="variable">OP_LEN</a>,<a  class="comments">/*	A B	R[A] := #R[B] (length operator)			*/</a>
<a href="../h_aa/57690128.htm" class=variable>OP_LFALSESKIP</a>                                    lopcodes.h
   207 :    <a href="../h_src/57690128.htm" class="variable">OP_LFALSESKIP</a>,<a  class="comments">/*A	R[A] := false; pc++	(*)			*/</a>
<a href="../h_aa/57690400.htm" class=variable>OP_LOADF</a>                                         lopcodes.h
   203 :    <a href="../h_src/57690400.htm" class="variable">OP_LOADF</a>,<a  class="comments">/*	A sBx	R[A] := (lua_Number)sBx				*/</a>
<a href="../h_aa/57690196.htm" class=variable>OP_LOADFALSE</a>                                     lopcodes.h
   206 :    <a href="../h_src/57690196.htm" class="variable">OP_LOADFALSE</a>,<a  class="comments">/*	A	R[A] := false					*/</a>
<a href="../h_aa/57690468.htm" class=variable>OP_LOADI</a>                                         lopcodes.h
   202 :    <a href="../h_src/57690468.htm" class="variable">OP_LOADI</a>,<a  class="comments">/*	A sBx	R[A] := sBx					*/</a>
<a href="../h_aa/57690332.htm" class=variable>OP_LOADK</a>                                         lopcodes.h
   204 :    <a href="../h_src/57690332.htm" class="variable">OP_LOADK</a>,<a  class="comments">/*	A Bx	R[A] := K[Bx]					*/</a>
<a href="../h_aa/57690264.htm" class=variable>OP_LOADKX</a>                                        lopcodes.h
   205 :    <a href="../h_src/57690264.htm" class="variable">OP_LOADKX</a>,<a  class="comments">/*	A	R[A] := K[extra arg]				*/</a>
<a href="../h_aa/57689992.htm" class=variable>OP_LOADNIL</a>                                       lopcodes.h
   209 :    <a href="../h_src/57689992.htm" class="variable">OP_LOADNIL</a>,<a  class="comments">/*	A B	R[A], R[A+1], ..., R[A+B] := nil		*/</a>
<a href="../h_aa/57690060.htm" class=variable>OP_LOADTRUE</a>                                      lopcodes.h
   208 :    <a href="../h_src/57690060.htm" class="variable">OP_LOADTRUE</a>,<a  class="comments">/*	A	R[A] := true					*/</a>
<a href="../h_aa/57686592.htm" class=variable>OP_LT</a>                                            lopcodes.h
   273 :    <a href="../h_src/57686592.htm" class="variable">OP_LT</a>,<a  class="comments">/*	A B k	if ((R[A] &lt;  R[B]) ~= k) then pc++		*/</a>
<a href="../h_aa/57686320.htm" class=variable>OP_LTI</a>                                           lopcodes.h
   278 :    <a href="../h_src/57686320.htm" class="variable">OP_LTI</a>,<a  class="comments">/*	A sB k	if ((R[A] &lt; sB) ~= k) then pc++			*/</a>
<a href="../h_aa/57687408.htm" class=variable>OP_MMBIN</a>                                         lopcodes.h
   258 :    <a href="../h_src/57687408.htm" class="variable">OP_MMBIN</a>,<a  class="comments">/*	A B C	call C metamethod over R[A] and R[B]	(*)	*/</a>
<a href="../h_aa/57687340.htm" class=variable>OP_MMBINI</a>                                        lopcodes.h
   259 :    <a href="../h_src/57687340.htm" class="variable">OP_MMBINI</a>,<a  class="comments">/*	A sB C k	call C metamethod over R[A] and sB	*/</a>
<a href="../h_aa/57687272.htm" class=variable>OP_MMBINK</a>                                        lopcodes.h
   260 :    <a href="../h_src/57687272.htm" class="variable">OP_MMBINK</a>,<a  class="comments">/*	A B C k		call C metamethod over R[A] and K[B]	*/</a>
<a href="../h_aa/57688020.htm" class=variable>OP_MOD</a>                                           lopcodes.h
   247 :    <a href="../h_src/57688020.htm" class="variable">OP_MOD</a>,<a  class="comments">/*	A B C	R[A] := R[B] % R[C]				*/</a>
<a href="../h_aa/57688836.htm" class=variable>OP_MODK</a>                                          lopcodes.h
   232 :    <a href="../h_src/57688836.htm" class="variable">OP_MODK</a>,<a  class="comments">/*	A B C	R[A] := R[B] % K[C]:number			*/</a>
<a href="../h_aa/57690536.htm" class=variable>OP_MOVE</a>                                          lopcodes.h
   201 :    <a href="../h_src/57690536.htm" class="variable">OP_MOVE</a>,<a  class="comments">/*	A B	R[A] := R[B]					*/</a>
<a href="../h_aa/57688088.htm" class=variable>OP_MUL</a>                                           lopcodes.h
   246 :    <a href="../h_src/57688088.htm" class="variable">OP_MUL</a>,<a  class="comments">/*	A B C	R[A] := R[B] * R[C]				*/</a>
<a href="../h_aa/57688904.htm" class=variable>OP_MULK</a>                                          lopcodes.h
   231 :    <a href="../h_src/57688904.htm" class="variable">OP_MULK</a>,<a  class="comments">/*	A B C	R[A] := R[B] * K[C]:number			*/</a>
<a href="../h_aa/57689244.htm" class=variable>OP_NEWTABLE</a>                                      lopcodes.h
   223 :    <a href="../h_src/57689244.htm" class="variable">OP_NEWTABLE</a>,<a  class="comments">/*	A B C k	R[A] := {}					*/</a>
<a href="../h_aa/57687068.htm" class=variable>OP_NOT</a>                                           lopcodes.h
   264 :    <a href="../h_src/57687068.htm" class="variable">OP_NOT</a>,<a  class="comments">/*	A B	R[A] := not R[B]				*/</a>
<a href="../h_aa/57687952.htm" class=variable>OP_POW</a>                                           lopcodes.h
   248 :    <a href="../h_src/57687952.htm" class="variable">OP_POW</a>,<a  class="comments">/*	A B C	R[A] := R[B] ^ R[C]				*/</a>
<a href="../h_aa/57688768.htm" class=variable>OP_POWK</a>                                          lopcodes.h
   233 :    <a href="../h_src/57688768.htm" class="variable">OP_POWK</a>,<a  class="comments">/*	A B C	R[A] := R[B] ^ K[C]:number			*/</a>
<a href="../h_aa/57685776.htm" class=variable>OP_RETURN</a>                                        lopcodes.h
   289 :    <a href="../h_src/57685776.htm" class="variable">OP_RETURN</a>,<a  class="comments">/*	A B C k	return R[A], ... ,R[A+B-2]	(see note)	*/</a>
<a href="../h_aa/57685708.htm" class=variable>OP_RETURN0</a>                                       lopcodes.h
   290 :    <a href="../h_src/57685708.htm" class="variable">OP_RETURN0</a>,<a  class="comments">/*		return						*/</a>
<a href="../h_aa/57685640.htm" class=variable>OP_RETURN1</a>                                       lopcodes.h
   291 :    <a href="../h_src/57685640.htm" class="variable">OP_RETURN1</a>,<a  class="comments">/*	A	return R[A]					*/</a>
<a href="../h_aa/57689176.htm" class=variable>OP_SELF</a>                                          lopcodes.h
   225 :    <a href="../h_src/57689176.htm" class="variable">OP_SELF</a>,<a  class="comments">/*	A B C	R[A+1] := R[B]; R[A] := R[B][RK(C):string]	*/</a>
<a href="../h_aa/57689312.htm" class=variable>OP_SETFIELD</a>                                      lopcodes.h
   221 :    <a href="../h_src/57689312.htm" class="variable">OP_SETFIELD</a>,<a  class="comments">/*	A B C	R[A][K[B]:string] := RK(C)			*/</a>
<a href="../h_aa/57689380.htm" class=variable>OP_SETI</a>                                          lopcodes.h
   220 :    <a href="../h_src/57689380.htm" class="variable">OP_SETI</a>,<a  class="comments">/*	A B C	R[A][B] := RK(C)				*/</a>
<a href="../h_aa/57685232.htm" class=variable>OP_SETLIST</a>                                       lopcodes.h
   301 :    <a href="../h_src/57685232.htm" class="variable">OP_SETLIST</a>,<a  class="comments">/*	A B C k	R[A][C+i] := R[A+i], 1 &lt;= i &lt;= B		*/</a>
<a href="../h_aa/57689448.htm" class=variable>OP_SETTABLE</a>                                      lopcodes.h
   219 :    <a href="../h_src/57689448.htm" class="variable">OP_SETTABLE</a>,<a  class="comments">/*	A B C	R[A][R[B]] := RK(C)				*/</a>
<a href="../h_aa/57689516.htm" class=variable>OP_SETTABUP</a>                                      lopcodes.h
   218 :    <a href="../h_src/57689516.htm" class="variable">OP_SETTABUP</a>,<a  class="comments">/*	A B C	UpValue[A][K[B]:string] := RK(C)		*/</a>
<a href="../h_aa/57689856.htm" class=variable>OP_SETUPVAL</a>                                      lopcodes.h
   211 :    <a href="../h_src/57689856.htm" class="variable">OP_SETUPVAL</a>,<a  class="comments">/*	A B	UpValue[B] := R[A]				*/</a>
<a href="../h_aa/57687544.htm" class=variable>OP_SHL</a>                                           lopcodes.h
   255 :    <a href="../h_src/57687544.htm" class="variable">OP_SHL</a>,<a  class="comments">/*	A B C	R[A] := R[B] &lt;&lt; R[C]				*/</a>
<a href="../h_aa/57688292.htm" class=variable>OP_SHLI</a>                                          lopcodes.h
   242 :    <a href="../h_src/57688292.htm" class="variable">OP_SHLI</a>,<a  class="comments">/*	A B sC	R[A] := sC &lt;&lt; R[B]				*/</a>
<a href="../h_aa/57687476.htm" class=variable>OP_SHR</a>                                           lopcodes.h
   256 :    <a href="../h_src/57687476.htm" class="variable">OP_SHR</a>,<a  class="comments">/*	A B C	R[A] := R[B] &gt;&gt; R[C]				*/</a>
<a href="../h_aa/57688360.htm" class=variable>OP_SHRI</a>                                          lopcodes.h
   241 :    <a href="../h_src/57688360.htm" class="variable">OP_SHRI</a>,<a  class="comments">/*	A B sC	R[A] := R[B] &gt;&gt; sC				*/</a>
<a href="../h_aa/57688156.htm" class=variable>OP_SUB</a>                                           lopcodes.h
   245 :    <a href="../h_src/57688156.htm" class="variable">OP_SUB</a>,<a  class="comments">/*	A B C	R[A] := R[B] - R[C]				*/</a>
<a href="../h_aa/57688972.htm" class=variable>OP_SUBK</a>                                          lopcodes.h
   230 :    <a href="../h_src/57688972.htm" class="variable">OP_SUBK</a>,<a  class="comments">/*	A B C	R[A] := R[B] - K[C]:number			*/</a>
<a href="../h_aa/57685844.htm" class=variable>OP_TAILCALL</a>                                      lopcodes.h
   287 :    <a href="../h_src/57685844.htm" class="variable">OP_TAILCALL</a>,<a  class="comments">/*	A B C k	return R[A](R[A+1], ... ,R[A+B-1])		*/</a>
<a href="../h_aa/57686796.htm" class=variable>OP_TBC</a>                                           lopcodes.h
   270 :    <a href="../h_src/57686796.htm" class="variable">OP_TBC</a>,<a  class="comments">/*	A	mark variable A &quot;to be closed&quot;			*/</a>
<a href="../h_aa/57686048.htm" class=variable>OP_TEST</a>                                          lopcodes.h
   283 :    <a href="../h_src/57686048.htm" class="variable">OP_TEST</a>,<a  class="comments">/*	A k	if (not R[A] == k) then pc++			*/</a>
<a href="../h_aa/57685980.htm" class=variable>OP_TESTSET</a>                                       lopcodes.h
   284 :    <a href="../h_src/57685980.htm" class="variable">OP_TESTSET</a>,<a  class="comments">/*	A B k	if (not R[B] == k) then pc++ else R[A] := R[B] (*) */</a>
<a href="../h_aa/57685368.htm" class=variable>OP_TFORCALL</a>                                      lopcodes.h
   298 :    <a href="../h_src/57685368.htm" class="variable">OP_TFORCALL</a>,<a  class="comments">/*	A C	R[A+4], ... ,R[A+3+C] := R[A](R[A+1], R[A+2]);	*/</a>
<a href="../h_aa/57685300.htm" class=variable>OP_TFORLOOP</a>                                      lopcodes.h
   299 :    <a href="../h_src/57685300.htm" class="variable">OP_TFORLOOP</a>,<a  class="comments">/*	A Bx	if R[A+2] ~= nil then { R[A]=R[A+2]; pc -= Bx }	*/</a>
<a href="../h_aa/57685436.htm" class=variable>OP_TFORPREP</a>                                      lopcodes.h
   297 :    <a href="../h_src/57685436.htm" class="variable">OP_TFORPREP</a>,<a  class="comments">/*	A Bx	create upvalue for R[A + 3]; pc+=Bx		*/</a>
<a href="../h_aa/57687204.htm" class=variable>OP_UNM</a>                                           lopcodes.h
   262 :    <a href="../h_src/57687204.htm" class="variable">OP_UNM</a>,<a  class="comments">/*	A B	R[A] := -R[B]					*/</a>
<a href="../h_aa/57685096.htm" class=variable>OP_VARARG</a>                                        lopcodes.h
   305 :    <a href="../h_src/57685096.htm" class="variable">OP_VARARG</a>,<a  class="comments">/*	A C	R[A], R[A+1], ..., R[A+C-2] = vararg		*/</a>
<a href="../h_aa/57685028.htm" class=variable>OP_VARARGPREP</a>                                    lopcodes.h
   307 :    <a href="../h_src/57685028.htm" class="variable">OP_VARARGPREP</a>,<a  class="comments">/*A	(adjust vararg parameters)			*/</a>
<a href="../h_aa/57684756.htm" class=type>OpCode</a>                                           lopcodes.h
   197 :    typedef enum {
<a href="../h_aa/57660276.htm" class=function>patchtestreg</a>                                     lcode.c
   261 :    if (<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(*<a href="../h_src/57659732.htm" class="localvar">i</a>) != <a href="../h_src/57685980.htm" class="variable">OP_TESTSET</a>)
<a href="../h_aa/143397312.htm" class=function>PrintCode</a>                                        luac.c
   341 :    <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/143396496.htm" class="localvar">o</a>=<a href="../h_src/57694752.htm" class="macro">GET_OPCODE</a>(<a href="../h_src/143396632.htm" class="localvar">i</a>);
<a href="../h_aa/57784076.htm" class=function>unopr2op</a>                                         lcode.c
  1368 :    <a href="../h_src/57545312.htm" class="macro">l_sinline</a> <a href="../h_src/57684756.htm" class="type">OpCode</a> <a href="../h_src/57784076.htm" class="function">unopr2op</a> (<a href="../h_src/57671768.htm" class="type">UnOpr</a> <a href="../h_src/57783940.htm" class="localvar">opr</a>) {
  1369 :    return <a href="../h_src/57547760.htm" class="macro">cast</a>(<a href="../h_src/57684756.htm" class="type">OpCode</a>, (<a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/57783940.htm" class="localvar">opr</a>) - <a href="../h_src/57547216.htm" class="macro">cast_int</a>(<a href="../h_src/57672244.htm" class="variable">OPR_MINUS</a>)) +
</pre>
<h4><a class="legend">Table lists all symbols that directly use type OpCode</a></h4>
<pre>
<div class="footer">
Generated on 13 Dec 2023 (09:27) by <a class="footer" href="http://www.imagix.com">Imagix 4D</a>
</div>
</pre>
</body>
</html>

